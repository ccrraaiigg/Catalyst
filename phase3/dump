   0x0 | 00 61 73 6d | version 1 (Module)
       | 01 00 00 00
   0x8 | 01 81 03    | type section
   0xb | 20          | 32 count
--- rec group 0 (explicit) ---
   0xc | 4e 09       | 
   0xe | 5e 6d 01    | [type 0] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Array(ArrayType(FieldType { element_type: Val(Ref(eqref)), mutable: true })), shared: false } }
  0x11 | 5e 78 01    | [type 1] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Array(ArrayType(FieldType { element_type: I8, mutable: true })), shared: false } }
  0x14 | 50 00 5f 05 | [type 2] SubType { is_final: false, supertype_idx: None, composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref((ref null (module 5)))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 2)))), mutable: true }] }), shared: false } }
       | 63 05 01 7f
       | 01 7f 01 7f
       | 01 63 02 01
  0x24 | 50 01 02 5f | [type 3] SubType { is_final: false, supertype_idx: Some(CoreTypeIndex { kind: "module", index: 2 }), composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref((ref null (module 5)))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 2)))), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 0)))), mutable: true }] }), shared: false } }
       | 06 63 05 01
       | 7f 01 7f 01
       | 7f 01 63 02
       | 01 63 00 01
  0x38 | 50 01 03 5f | [type 4] SubType { is_final: false, supertype_idx: Some(CoreTypeIndex { kind: "module", index: 3 }), composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref((ref null (module 5)))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 2)))), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 0)))), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 1)))), mutable: false }] }), shared: false } }
       | 07 63 05 01
       | 7f 01 7f 01
       | 7f 01 63 02
       | 01 63 00 01
       | 63 01 00   
  0x4f | 50 01 03 5f | [type 5] SubType { is_final: false, supertype_idx: Some(CoreTypeIndex { kind: "module", index: 3 }), composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref((ref null (module 5)))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 2)))), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 0)))), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 5)))), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 6)))), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 2)))), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 4)))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }] }), shared: false } }
       | 0b 63 05 01
       | 7f 01 7f 01
       | 7f 01 63 02
       | 01 63 00 01
       | 63 05 01 63
       | 06 01 63 02
       | 01 63 04 01
       | 7f 01      
  0x71 | 50 01 03 5f | [type 6] SubType { is_final: false, supertype_idx: Some(CoreTypeIndex { kind: "module", index: 3 }), composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref((ref null (module 5)))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 2)))), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 0)))), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 0)))), mutable: false }, FieldType { element_type: Val(Ref((ref null (module 0)))), mutable: false }, FieldType { element_type: Val(I32), mutable: true }] }), shared: false } }
       | 09 63 05 01
       | 7f 01 7f 01
       | 7f 01 63 02
       | 01 63 00 01
       | 63 00 00 63
       | 00 00 7f 01
  0x8d | 50 01 03 5f | [type 7] SubType { is_final: false, supertype_idx: Some(CoreTypeIndex { kind: "module", index: 3 }), composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref((ref null (module 5)))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 2)))), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 0)))), mutable: true }, FieldType { element_type: Val(I32), mutable: false }, FieldType { element_type: Val(Ref((ref null (module 1)))), mutable: false }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref(funcref)), mutable: true }, FieldType { element_type: Val(I32), mutable: false }] }), shared: false } }
       | 0b 63 05 01
       | 7f 01 7f 01
       | 7f 01 63 02
       | 01 63 00 01
       | 7f 00 63 01
       | 00 7f 01 70
       | 01 7f 00   
  0xac | 50 01 03 5f | [type 8] SubType { is_final: false, supertype_idx: Some(CoreTypeIndex { kind: "module", index: 3 }), composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref((ref null (module 5)))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 2)))), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 0)))), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 8)))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 7)))), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 0)))), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 0)))), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 0)))), mutable: true }] }), shared: false } }
       | 0e 63 05 01
       | 7f 01 7f 01
       | 7f 01 63 02
       | 01 63 00 01
       | 63 08 01 7f
       | 01 7f 01 63
       | 07 01 6d 01
       | 63 00 01 63
       | 00 01 63 00
       | 01         
--- rec group 1 (implicit) ---
  0xd5 | 60 01 7f 00 | [type 9] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [I32], results: [] }), shared: false } }
--- rec group 2 (implicit) ---
  0xd9 | 60 04 7f 7f | [type 10] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [I32, I32, I32, I32], results: [I32] }), shared: false } }
       | 7f 7f 01 7f
--- rec group 3 (implicit) ---
  0xe1 | 60 01 6d 00 | [type 11] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref(eqref)], results: [] }), shared: false } }
--- rec group 4 (implicit) ---
  0xe5 | 60 00 00    | [type 12] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [], results: [] }), shared: false } }
--- rec group 5 (implicit) ---
  0xe8 | 60 02 6d 6d | [type 13] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref(eqref), Ref(eqref)], results: [] }), shared: false } }
       | 00         
--- rec group 6 (implicit) ---
  0xed | 60 01 64 01 | [type 14] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 1)))], results: [I32] }), shared: false } }
       | 01 7f      
--- rec group 7 (implicit) ---
  0xf3 | 60 02 64 01 | [type 15] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 1))), I32], results: [I32] }), shared: false } }
       | 7f 01 7f   
--- rec group 8 (implicit) ---
  0xfa | 60 01 64 00 | [type 16] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 0)))], results: [I32] }), shared: false } }
       | 01 7f      
--- rec group 9 (implicit) ---
 0x100 | 60 02 64 00 | [type 17] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 0))), I32], results: [Ref(eqref)] }), shared: false } }
       | 7f 01 6d   
--- rec group 10 (implicit) ---
 0x107 | 60 01 6d 01 | [type 18] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref(eqref)], results: [I32] }), shared: false } }
       | 7f         
--- rec group 11 (implicit) ---
 0x10c | 60 00 01 7f | [type 19] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [], results: [I32] }), shared: false } }
--- rec group 12 (implicit) ---
 0x110 | 60 01 64 02 | [type 20] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 2)))], results: [] }), shared: false } }
       | 00         
--- rec group 13 (implicit) ---
 0x115 | 60 02 6d 7f | [type 21] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref(eqref), I32], results: [] }), shared: false } }
       | 00         
--- rec group 14 (implicit) ---
 0x11a | 60 01 64 08 | [type 22] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 8)))], results: [I32] }), shared: false } }
       | 01 7f      
--- rec group 15 (implicit) ---
 0x120 | 60 02 64 08 | [type 23] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 8))), I32], results: [] }), shared: false } }
       | 7f 00      
--- rec group 16 (implicit) ---
 0x126 | 60 01 64 08 | [type 24] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 8)))], results: [Ref((ref null (module 7)))] }), shared: false } }
       | 01 63 07   
--- rec group 17 (implicit) ---
 0x12d | 60 01 64 08 | [type 25] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 8)))], results: [Ref(eqref)] }), shared: false } }
       | 01 6d      
--- rec group 18 (implicit) ---
 0x133 | 60 02 64 08 | [type 26] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 8))), Ref(eqref)], results: [] }), shared: false } }
       | 6d 00      
--- rec group 19 (implicit) ---
 0x139 | 60 01 64 07 | [type 27] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 7)))], results: [Ref((ref null (module 1)))] }), shared: false } }
       | 01 63 01   
--- rec group 20 (implicit) ---
 0x140 | 60 01 64 07 | [type 28] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 7)))], results: [] }), shared: false } }
       | 00         
--- rec group 21 (implicit) ---
 0x145 | 60 01 64 07 | [type 29] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 7)))], results: [I32] }), shared: false } }
       | 01 7f      
--- rec group 22 (implicit) ---
 0x14b | 60 02 64 07 | [type 30] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 7))), Ref(funcref)], results: [] }), shared: false } }
       | 70 00      
--- rec group 23 (implicit) ---
 0x151 | 60 01 64 07 | [type 31] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 7)))], results: [Ref(funcref)] }), shared: false } }
       | 01 70      
--- rec group 24 (implicit) ---
 0x157 | 60 01 64 05 | [type 32] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 5)))], results: [Ref((ref null (module 6)))] }), shared: false } }
       | 01 63 06   
--- rec group 25 (implicit) ---
 0x15e | 60 01 64 05 | [type 33] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 5)))], results: [Ref((ref null (module 5)))] }), shared: false } }
       | 01 63 05   
--- rec group 26 (implicit) ---
 0x165 | 60 01 64 05 | [type 34] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 5)))], results: [Ref((ref null (module 4)))] }), shared: false } }
       | 01 63 04   
--- rec group 27 (implicit) ---
 0x16c | 60 01 64 06 | [type 35] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 6)))], results: [Ref((ref null (module 0)))] }), shared: false } }
       | 01 63 00   
--- rec group 28 (implicit) ---
 0x173 | 60 01 64 06 | [type 36] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 6)))], results: [I32] }), shared: false } }
       | 01 7f      
--- rec group 29 (implicit) ---
 0x179 | 60 02 7f 7f | [type 37] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [I32, I32], results: [I32] }), shared: false } }
       | 01 7f      
--- rec group 30 (implicit) ---
 0x17f | 60 01 7f 01 | [type 38] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [I32], results: [Ref(eqref)] }), shared: false } }
       | 6d         
--- rec group 31 (implicit) ---
 0x184 | 60 02 63 07 | [type 39] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref null (module 7))), Ref(eqref)], results: [Ref((ref (module 8)))] }), shared: false } }
       | 6d 01 64 08
 0x18c | 02 2f       | import section
 0x18e | 02          | 2 count
 0x18f | 02 6a 73 0d | import [func 0] Import { module: "js", name: "report_result", ty: Func(9) }
       | 72 65 70 6f
       | 72 74 5f 72
       | 65 73 75 6c
       | 74 00 09   
 0x1a2 | 02 6a 73 15 | import [func 1] Import { module: "js", name: "jit_compile_method_js", ty: Func(10) }
       | 6a 69 74 5f
       | 63 6f 6d 70
       | 69 6c 65 5f
       | 6d 65 74 68
       | 6f 64 5f 6a
       | 73 00 0a   
 0x1bd | 03 2a       | func section
 0x1bf | 29          | 41 count
 0x1c0 | 0e          | [func 2] type 14
 0x1c1 | 0f          | [func 3] type 15
 0x1c2 | 10          | [func 4] type 16
 0x1c3 | 11          | [func 5] type 17
 0x1c4 | 12          | [func 6] type 18
 0x1c5 | 12          | [func 7] type 18
 0x1c6 | 13          | [func 8] type 19
 0x1c7 | 14          | [func 9] type 20
 0x1c8 | 09          | [func 10] type 9
 0x1c9 | 15          | [func 11] type 21
 0x1ca | 16          | [func 12] type 22
 0x1cb | 17          | [func 13] type 23
 0x1cc | 18          | [func 14] type 24
 0x1cd | 19          | [func 15] type 25
 0x1ce | 1a          | [func 16] type 26
 0x1cf | 1b          | [func 17] type 27
 0x1d0 | 1c          | [func 18] type 28
 0x1d1 | 1d          | [func 19] type 29
 0x1d2 | 1e          | [func 20] type 30
 0x1d3 | 1f          | [func 21] type 31
 0x1d4 | 20          | [func 22] type 32
 0x1d5 | 21          | [func 23] type 33
 0x1d6 | 22          | [func 24] type 34
 0x1d7 | 23          | [func 25] type 35
 0x1d8 | 23          | [func 26] type 35
 0x1d9 | 24          | [func 27] type 36
 0x1da | 25          | [func 28] type 37
 0x1db | 25          | [func 29] type 37
 0x1dc | 0b          | [func 30] type 11
 0x1dd | 0c          | [func 31] type 12
 0x1de | 0d          | [func 32] type 13
 0x1df | 26          | [func 33] type 38
 0x1e0 | 27          | [func 34] type 39
 0x1e1 | 0c          | [func 35] type 12
 0x1e2 | 0c          | [func 36] type 12
 0x1e3 | 09          | [func 37] type 9
 0x1e4 | 0c          | [func 38] type 12
 0x1e5 | 0c          | [func 39] type 12
 0x1e6 | 0c          | [func 40] type 12
 0x1e7 | 0c          | [func 41] type 12
 0x1e8 | 0c          | [func 42] type 12
 0x1e9 | 0d 07       | tag section
 0x1eb | 03          | 3 count
 0x1ec | 00 0b       | [tag 0] TagType { kind: Exception, func_type_idx: 11 }
 0x1ee | 00 0c       | [tag 1] TagType { kind: Exception, func_type_idx: 12 }
 0x1f0 | 00 0d       | [tag 2] TagType { kind: Exception, func_type_idx: 13 }
 0x1f2 | 06 70       | global section
 0x1f4 | 14          | 20 count
 0x1f5 | 63 05 01    | [global 0] GlobalType { content_type: Ref((ref null (module 5))), mutable: true, shared: false }
 0x1f8 | d0 05       | ref_null hty:Concrete(Module(5))
 0x1fa | 0b          | end
 0x1fb | 63 05 01    | [global 1] GlobalType { content_type: Ref((ref null (module 5))), mutable: true, shared: false }
 0x1fe | d0 05       | ref_null hty:Concrete(Module(5))
 0x200 | 0b          | end
 0x201 | 63 05 01    | [global 2] GlobalType { content_type: Ref((ref null (module 5))), mutable: true, shared: false }
 0x204 | d0 05       | ref_null hty:Concrete(Module(5))
 0x206 | 0b          | end
 0x207 | 63 05 01    | [global 3] GlobalType { content_type: Ref((ref null (module 5))), mutable: true, shared: false }
 0x20a | d0 05       | ref_null hty:Concrete(Module(5))
 0x20c | 0b          | end
 0x20d | 63 05 01    | [global 4] GlobalType { content_type: Ref((ref null (module 5))), mutable: true, shared: false }
 0x210 | d0 05       | ref_null hty:Concrete(Module(5))
 0x212 | 0b          | end
 0x213 | 63 05 01    | [global 5] GlobalType { content_type: Ref((ref null (module 5))), mutable: true, shared: false }
 0x216 | d0 05       | ref_null hty:Concrete(Module(5))
 0x218 | 0b          | end
 0x219 | 6d 01       | [global 6] GlobalType { content_type: Ref(eqref), mutable: true, shared: false }
 0x21b | d0 6d       | ref_null hty:Abstract { shared: false, ty: Eq }
 0x21d | 0b          | end
 0x21e | 6d 01       | [global 7] GlobalType { content_type: Ref(eqref), mutable: true, shared: false }
 0x220 | d0 6d       | ref_null hty:Abstract { shared: false, ty: Eq }
 0x222 | 0b          | end
 0x223 | 6d 01       | [global 8] GlobalType { content_type: Ref(eqref), mutable: true, shared: false }
 0x225 | d0 6d       | ref_null hty:Abstract { shared: false, ty: Eq }
 0x227 | 0b          | end
 0x228 | 6d 01       | [global 9] GlobalType { content_type: Ref(eqref), mutable: true, shared: false }
 0x22a | d0 6d       | ref_null hty:Abstract { shared: false, ty: Eq }
 0x22c | 0b          | end
 0x22d | 6d 01       | [global 10] GlobalType { content_type: Ref(eqref), mutable: true, shared: false }
 0x22f | d0 6d       | ref_null hty:Abstract { shared: false, ty: Eq }
 0x231 | 0b          | end
 0x232 | 6d 01       | [global 11] GlobalType { content_type: Ref(eqref), mutable: true, shared: false }
 0x234 | d0 6d       | ref_null hty:Abstract { shared: false, ty: Eq }
 0x236 | 0b          | end
 0x237 | 6d 01       | [global 12] GlobalType { content_type: Ref(eqref), mutable: true, shared: false }
 0x239 | d0 6d       | ref_null hty:Abstract { shared: false, ty: Eq }
 0x23b | 0b          | end
 0x23c | 63 08 01    | [global 13] GlobalType { content_type: Ref((ref null (module 8))), mutable: true, shared: false }
 0x23f | d0 08       | ref_null hty:Concrete(Module(8))
 0x241 | 0b          | end
 0x242 | 63 07 01    | [global 14] GlobalType { content_type: Ref((ref null (module 7))), mutable: true, shared: false }
 0x245 | d0 07       | ref_null hty:Concrete(Module(7))
 0x247 | 0b          | end
 0x248 | 6d 01       | [global 15] GlobalType { content_type: Ref(eqref), mutable: true, shared: false }
 0x24a | d0 6d       | ref_null hty:Abstract { shared: false, ty: Eq }
 0x24c | 0b          | end
 0x24d | 7f 01       | [global 16] GlobalType { content_type: I32, mutable: true, shared: false }
 0x24f | 41 e8 07    | i32_const value:1000
 0x252 | 0b          | end
 0x253 | 63 02 01    | [global 17] GlobalType { content_type: Ref((ref null (module 2))), mutable: true, shared: false }
 0x256 | d0 02       | ref_null hty:Concrete(Module(2))
 0x258 | 0b          | end
 0x259 | 63 02 01    | [global 18] GlobalType { content_type: Ref((ref null (module 2))), mutable: true, shared: false }
 0x25c | d0 02       | ref_null hty:Concrete(Module(2))
 0x25e | 0b          | end
 0x25f | 7f 01       | [global 19] GlobalType { content_type: I32, mutable: true, shared: false }
 0x261 | 41 00       | i32_const value:0
 0x263 | 0b          | end
 0x264 | 07 47       | export section
 0x266 | 04          | 4 count
 0x267 | 19 63 72 65 | export Export { name: "createMinimalObjectMemory", kind: Func, index: 35 }
       | 61 74 65 4d
       | 69 6e 69 6d
       | 61 6c 4f 62
       | 6a 65 63 74
       | 4d 65 6d 6f
       | 72 79 00 23
 0x283 | 09 69 6e 74 | export Export { name: "interpret", kind: Func, index: 36 }
       | 65 72 70 72
       | 65 74 00 24
 0x28f | 11 72 75 6e | export Export { name: "runMinimalExample", kind: Func, index: 41 }
       | 4d 69 6e 69
       | 6d 61 6c 45
       | 78 61 6d 70
       | 6c 65 00 29
 0x2a3 | 07 69 6e 69 | export Export { name: "init_vm", kind: Func, index: 42 }
       | 74 5f 76 6d
       | 00 2a      
 0x2ad | 0a b1 05    | code section
 0x2b0 | 29          | 41 count
============== func 2 ====================
 0x2b1 | 06          | size of function
 0x2b2 | 00          | 0 local blocks
 0x2b3 | 20 00       | local_get local_index:0
 0x2b5 | fb 0f       | array_len
 0x2b7 | 0b          | end
============== func 3 ====================
 0x2b8 | 09          | size of function
 0x2b9 | 00          | 0 local blocks
 0x2ba | 20 00       | local_get local_index:0
 0x2bc | 20 01       | local_get local_index:1
 0x2be | fb 0d 01    | array_get_u array_type_index:1
 0x2c1 | 0b          | end
============== func 4 ====================
 0x2c2 | 06          | size of function
 0x2c3 | 00          | 0 local blocks
 0x2c4 | 20 00       | local_get local_index:0
 0x2c6 | fb 0f       | array_len
 0x2c8 | 0b          | end
============== func 5 ====================
 0x2c9 | 09          | size of function
 0x2ca | 00          | 0 local blocks
 0x2cb | 20 00       | local_get local_index:0
 0x2cd | 20 01       | local_get local_index:1
 0x2cf | fb 0b 00    | array_get array_type_index:0
 0x2d2 | 0b          | end
============== func 6 ====================
 0x2d3 | 07          | size of function
 0x2d4 | 00          | 0 local blocks
 0x2d5 | 20 00       | local_get local_index:0
 0x2d7 | fb 14 6c    | ref_test_non_null hty:Abstract { shared: false, ty: I31 }
 0x2da | 0b          | end
============== func 7 ====================
 0x2db | 09          | size of function
 0x2dc | 00          | 0 local blocks
 0x2dd | 20 00       | local_get local_index:0
 0x2df | fb 16 6c    | ref_cast_non_null hty:Abstract { shared: false, ty: I31 }
 0x2e2 | fb 1d       | i31_get_s
 0x2e4 | 0b          | end
============== func 8 ====================
 0x2e5 | 0b          | size of function
 0x2e6 | 00          | 0 local blocks
 0x2e7 | 23 10       | global_get global_index:16
 0x2e9 | 41 01       | i32_const value:1
 0x2eb | 6a          | i32_add
 0x2ec | 24 10       | global_set global_index:16
 0x2ee | 23 10       | global_get global_index:16
 0x2f0 | 0b          | end
============== func 9 ====================
 0x2f1 | 26          | size of function
 0x2f2 | 01          | 1 local blocks
 0x2f3 | 01 63 02    | 1 locals of type Ref((ref null (module 2)))
 0x2f6 | 23 12       | global_get global_index:18
 0x2f8 | 22 01       | local_tee local_index:1
 0x2fa | d1          | ref_is_null
 0x2fb | 04 40       | if blockty:Empty
 0x2fd | 20 00       | local_get local_index:0
 0x2ff | 24 11       | global_set global_index:17
 0x301 | 05          | else
 0x302 | 20 01       | local_get local_index:1
 0x304 | d4          | ref_as_non_null
 0x305 | 20 00       | local_get local_index:0
 0x307 | fb 05 02 04 | struct_set struct_type_index:2 field_index:4
 0x30b | 0b          | end
 0x30c | 20 00       | local_get local_index:0
 0x30e | 24 12       | global_set global_index:18
 0x310 | 23 13       | global_get global_index:19
 0x312 | 41 01       | i32_const value:1
 0x314 | 6a          | i32_add
 0x315 | 24 13       | global_set global_index:19
 0x317 | 0b          | end
============== func 10 ====================
 0x318 | 07          | size of function
 0x319 | 00          | 0 local blocks
 0x31a | 20 00       | local_get local_index:0
 0x31c | fb 1c       | ref_i31
 0x31e | 1a          | drop
 0x31f | 0b          | end
============== func 11 ====================
 0x320 | 02          | size of function
 0x321 | 00          | 0 local blocks
 0x322 | 0b          | end
============== func 12 ====================
 0x323 | 08          | size of function
 0x324 | 00          | 0 local blocks
 0x325 | 20 00       | local_get local_index:0
 0x327 | fb 02 08 07 | struct_get struct_type_index:8 field_index:7
 0x32b | 0b          | end
============== func 13 ====================
 0x32c | 0a          | size of function
 0x32d | 00          | 0 local blocks
 0x32e | 20 00       | local_get local_index:0
 0x330 | 20 01       | local_get local_index:1
 0x332 | fb 05 08 07 | struct_set struct_type_index:8 field_index:7
 0x336 | 0b          | end
============== func 14 ====================
 0x337 | 08          | size of function
 0x338 | 00          | 0 local blocks
 0x339 | 20 00       | local_get local_index:0
 0x33b | fb 02 08 09 | struct_get struct_type_index:8 field_index:9
 0x33f | 0b          | end
============== func 15 ====================
 0x340 | 08          | size of function
 0x341 | 00          | 0 local blocks
 0x342 | 20 00       | local_get local_index:0
 0x344 | fb 02 08 0a | struct_get struct_type_index:8 field_index:10
 0x348 | 0b          | end
============== func 16 ====================
 0x349 | 0a          | size of function
 0x34a | 00          | 0 local blocks
 0x34b | 20 00       | local_get local_index:0
 0x34d | 20 01       | local_get local_index:1
 0x34f | fb 05 08 0a | struct_set struct_type_index:8 field_index:10
 0x353 | 0b          | end
============== func 17 ====================
 0x354 | 08          | size of function
 0x355 | 00          | 0 local blocks
 0x356 | 20 00       | local_get local_index:0
 0x358 | fb 02 07 07 | struct_get struct_type_index:7 field_index:7
 0x35c | 0b          | end
============== func 18 ====================
 0x35d | 17          | size of function
 0x35e | 01          | 1 local blocks
 0x35f | 01 7f       | 1 locals of type I32
 0x361 | 20 00       | local_get local_index:0
 0x363 | fb 02 07 08 | struct_get struct_type_index:7 field_index:8
 0x367 | 21 01       | local_set local_index:1
 0x369 | 20 00       | local_get local_index:0
 0x36b | 20 01       | local_get local_index:1
 0x36d | 41 01       | i32_const value:1
 0x36f | 6a          | i32_add
 0x370 | fb 05 07 08 | struct_set struct_type_index:7 field_index:8
 0x374 | 0b          | end
============== func 19 ====================
 0x375 | 08          | size of function
 0x376 | 00          | 0 local blocks
 0x377 | 20 00       | local_get local_index:0
 0x379 | fb 02 07 08 | struct_get struct_type_index:7 field_index:8
 0x37d | 0b          | end
============== func 20 ====================
 0x37e | 0a          | size of function
 0x37f | 00          | 0 local blocks
 0x380 | 20 00       | local_get local_index:0
 0x382 | 20 01       | local_get local_index:1
 0x384 | fb 05 07 09 | struct_set struct_type_index:7 field_index:9
 0x388 | 0b          | end
============== func 21 ====================
 0x389 | 08          | size of function
 0x38a | 00          | 0 local blocks
 0x38b | 20 00       | local_get local_index:0
 0x38d | fb 02 07 09 | struct_get struct_type_index:7 field_index:9
 0x391 | 0b          | end
============== func 22 ====================
 0x392 | 08          | size of function
 0x393 | 00          | 0 local blocks
 0x394 | 20 00       | local_get local_index:0
 0x396 | fb 02 05 07 | struct_get struct_type_index:5 field_index:7
 0x39a | 0b          | end
============== func 23 ====================
 0x39b | 08          | size of function
 0x39c | 00          | 0 local blocks
 0x39d | 20 00       | local_get local_index:0
 0x39f | fb 02 05 06 | struct_get struct_type_index:5 field_index:6
 0x3a3 | 0b          | end
============== func 24 ====================
 0x3a4 | 08          | size of function
 0x3a5 | 00          | 0 local blocks
 0x3a6 | 20 00       | local_get local_index:0
 0x3a8 | fb 02 05 09 | struct_get struct_type_index:5 field_index:9
 0x3ac | 0b          | end
============== func 25 ====================
 0x3ad | 08          | size of function
 0x3ae | 00          | 0 local blocks
 0x3af | 20 00       | local_get local_index:0
 0x3b1 | fb 02 06 06 | struct_get struct_type_index:6 field_index:6
 0x3b5 | 0b          | end
============== func 26 ====================
 0x3b6 | 08          | size of function
 0x3b7 | 00          | 0 local blocks
 0x3b8 | 20 00       | local_get local_index:0
 0x3ba | fb 02 06 07 | struct_get struct_type_index:6 field_index:7
 0x3be | 0b          | end
============== func 27 ====================
 0x3bf | 08          | size of function
 0x3c0 | 00          | 0 local blocks
 0x3c1 | 20 00       | local_get local_index:0
 0x3c3 | fb 02 06 08 | struct_get struct_type_index:6 field_index:8
 0x3c7 | 0b          | end
============== func 28 ====================
 0x3c8 | 07          | size of function
 0x3c9 | 00          | 0 local blocks
 0x3ca | 20 00       | local_get local_index:0
 0x3cc | 20 01       | local_get local_index:1
 0x3ce | 6a          | i32_add
 0x3cf | 0b          | end
============== func 29 ====================
 0x3d0 | 07          | size of function
 0x3d1 | 00          | 0 local blocks
 0x3d2 | 20 00       | local_get local_index:0
 0x3d4 | 20 01       | local_get local_index:1
 0x3d6 | 6c          | i32_mul
 0x3d7 | 0b          | end
============== func 30 ====================
 0x3d8 | 02          | size of function
 0x3d9 | 00          | 0 local blocks
 0x3da | 0b          | end
============== func 31 ====================
 0x3db | 02          | size of function
 0x3dc | 00          | 0 local blocks
 0x3dd | 0b          | end
============== func 32 ====================
 0x3de | 02          | size of function
 0x3df | 00          | 0 local blocks
 0x3e0 | 0b          | end
============== func 33 ====================
 0x3e1 | 06          | size of function
 0x3e2 | 00          | 0 local blocks
 0x3e3 | 20 00       | local_get local_index:0
 0x3e5 | fb 1c       | ref_i31
 0x3e7 | 0b          | end
============== func 34 ====================
 0x3e8 | 2c          | size of function
 0x3e9 | 01          | 1 local blocks
 0x3ea | 01 64 08    | 1 locals of type Ref((ref (module 8)))
 0x3ed | 23 03       | global_get global_index:3
 0x3ef | 10 08       | call function_index:8
 0x3f1 | 41 06       | i32_const value:6
 0x3f3 | 41 0e       | i32_const value:14
 0x3f5 | d0 02       | ref_null hty:Concrete(Module(2))
 0x3f7 | d0 00       | ref_null hty:Concrete(Module(0))
 0x3f9 | d0 08       | ref_null hty:Concrete(Module(8))
 0x3fb | 41 00       | i32_const value:0
 0x3fd | 41 00       | i32_const value:0
 0x3ff | 20 00       | local_get local_index:0
 0x401 | 20 01       | local_get local_index:1
 0x403 | d0 00       | ref_null hty:Concrete(Module(0))
 0x405 | d0 00       | ref_null hty:Concrete(Module(0))
 0x407 | d0 00       | ref_null hty:Concrete(Module(0))
 0x409 | fb 00 08    | struct_new struct_type_index:8
 0x40c | 21 02       | local_set local_index:2
 0x40e | 20 02       | local_get local_index:2
 0x410 | 10 09       | call function_index:9
 0x412 | 20 02       | local_get local_index:2
 0x414 | 0b          | end
============== func 35 ====================
 0x415 | 6d          | size of function
 0x416 | 00          | 0 local blocks
 0x417 | d0 05       | ref_null hty:Concrete(Module(5))
 0x419 | 10 08       | call function_index:8
 0x41b | 41 01       | i32_const value:1
 0x41d | 41 0b       | i32_const value:11
 0x41f | d0 02       | ref_null hty:Concrete(Module(2))
 0x421 | d0 00       | ref_null hty:Concrete(Module(0))
 0x423 | d0 05       | ref_null hty:Concrete(Module(5))
 0x425 | d0 06       | ref_null hty:Concrete(Module(6))
 0x427 | d0 02       | ref_null hty:Concrete(Module(2))
 0x429 | d0 04       | ref_null hty:Concrete(Module(4))
 0x42b | 41 00       | i32_const value:0
 0x42d | fb 00 05    | struct_new struct_type_index:5
 0x430 | 24 00       | global_set global_index:0
 0x432 | 23 00       | global_get global_index:0
 0x434 | 10 08       | call function_index:8
 0x436 | 41 01       | i32_const value:1
 0x438 | 41 0b       | i32_const value:11
 0x43a | d0 02       | ref_null hty:Concrete(Module(2))
 0x43c | d0 00       | ref_null hty:Concrete(Module(0))
 0x43e | 23 00       | global_get global_index:0
 0x440 | d0 06       | ref_null hty:Concrete(Module(6))
 0x442 | d0 02       | ref_null hty:Concrete(Module(2))
 0x444 | d0 04       | ref_null hty:Concrete(Module(4))
 0x446 | 41 06       | i32_const value:6
 0x448 | fb 00 05    | struct_new struct_type_index:5
 0x44b | 24 01       | global_set global_index:1
 0x44d | 23 00       | global_get global_index:0
 0x44f | 23 01       | global_get global_index:1
 0x451 | fb 05 05 00 | struct_set struct_type_index:5 field_index:0
 0x455 | 23 01       | global_get global_index:1
 0x457 | 10 08       | call function_index:8
 0x459 | 41 01       | i32_const value:1
 0x45b | 41 0b       | i32_const value:11
 0x45d | d0 02       | ref_null hty:Concrete(Module(2))
 0x45f | d0 00       | ref_null hty:Concrete(Module(0))
 0x461 | 23 00       | global_get global_index:0
 0x463 | d0 06       | ref_null hty:Concrete(Module(6))
 0x465 | d0 02       | ref_null hty:Concrete(Module(2))
 0x467 | d0 04       | ref_null hty:Concrete(Module(4))
 0x469 | 41 00       | i32_const value:0
 0x46b | fb 00 05    | struct_new struct_type_index:5
 0x46e | 24 05       | global_set global_index:5
 0x470 | 41 00       | i32_const value:0
 0x472 | fb 1c       | ref_i31
 0x474 | 24 06       | global_set global_index:6
 0x476 | 41 01       | i32_const value:1
 0x478 | fb 1c       | ref_i31
 0x47a | 24 07       | global_set global_index:7
 0x47c | 41 00       | i32_const value:0
 0x47e | fb 1c       | ref_i31
 0x480 | 24 08       | global_set global_index:8
 0x482 | 0b          | end
============== func 36 ====================
 0x483 | 6e          | size of function
 0x484 | 04          | 4 local blocks
 0x485 | 01 63 08    | 1 locals of type Ref((ref null (module 8)))
 0x488 | 01 63 07    | 1 locals of type Ref((ref null (module 7)))
 0x48b | 02 7f       | 2 locals of type I32
 0x48d | 01 63 01    | 1 locals of type Ref((ref null (module 1)))
 0x490 | 03 40       | loop blockty:Empty
 0x492 | 23 0d       | global_get global_index:13
 0x494 | d1          | ref_is_null
 0x495 | 04 40       | if blockty:Empty
 0x497 | 0f          | return
 0x498 | 0b          | end
 0x499 | 23 0d       | global_get global_index:13
 0x49b | d4          | ref_as_non_null
 0x49c | 21 00       | local_set local_index:0
 0x49e | 20 00       | local_get local_index:0
 0x4a0 | 10 0e       | call function_index:14
 0x4a2 | d1          | ref_is_null
 0x4a3 | 04 40       | if blockty:Empty
 0x4a5 | 0f          | return
 0x4a6 | 0b          | end
 0x4a7 | 20 00       | local_get local_index:0
 0x4a9 | 10 0e       | call function_index:14
 0x4ab | d4          | ref_as_non_null
 0x4ac | 21 01       | local_set local_index:1
 0x4ae | 20 01       | local_get local_index:1
 0x4b0 | 10 11       | call function_index:17
 0x4b2 | d1          | ref_is_null
 0x4b3 | 04 40       | if blockty:Empty
 0x4b5 | 0f          | return
 0x4b6 | 0b          | end
 0x4b7 | 20 01       | local_get local_index:1
 0x4b9 | 10 11       | call function_index:17
 0x4bb | d4          | ref_as_non_null
 0x4bc | 21 04       | local_set local_index:4
 0x4be | 20 00       | local_get local_index:0
 0x4c0 | 10 0c       | call function_index:12
 0x4c2 | 21 02       | local_set local_index:2
 0x4c4 | 20 02       | local_get local_index:2
 0x4c6 | 20 04       | local_get local_index:4
 0x4c8 | 10 02       | call function_index:2
 0x4ca | 4f          | i32_ge_u
 0x4cb | 04 40       | if blockty:Empty
 0x4cd | 0f          | return
 0x4ce | 0b          | end
 0x4cf | 20 04       | local_get local_index:4
 0x4d1 | 20 02       | local_get local_index:2
 0x4d3 | 10 03       | call function_index:3
 0x4d5 | 21 03       | local_set local_index:3
 0x4d7 | 20 00       | local_get local_index:0
 0x4d9 | 20 02       | local_get local_index:2
 0x4db | 41 01       | i32_const value:1
 0x4dd | 6a          | i32_add
 0x4de | 10 0d       | call function_index:13
 0x4e0 | 20 03       | local_get local_index:3
 0x4e2 | 10 25       | call function_index:37
 0x4e4 | 20 03       | local_get local_index:3
 0x4e6 | 41 fc 00    | i32_const value:124
 0x4e9 | 46          | i32_eq
 0x4ea | 04 40       | if blockty:Empty
 0x4ec | 0f          | return
 0x4ed | 0b          | end
 0x4ee | 0c 00       | br relative_depth:0
 0x4f0 | 0b          | end
 0x4f1 | 0b          | end
============== func 37 ====================
 0x4f2 | 36          | size of function
 0x4f3 | 00          | 0 local blocks
 0x4f4 | 20 00       | local_get local_index:0
 0x4f6 | 41 f0 00    | i32_const value:112
 0x4f9 | 46          | i32_eq
 0x4fa | 04 40       | if blockty:Empty
 0x4fc | 10 26       | call function_index:38
 0x4fe | 0f          | return
 0x4ff | 0b          | end
 0x500 | 20 00       | local_get local_index:0
 0x502 | 41 f5 00    | i32_const value:117
 0x505 | 46          | i32_eq
 0x506 | 04 40       | if blockty:Empty
 0x508 | 41 03       | i32_const value:3
 0x50a | 10 0a       | call function_index:10
 0x50c | 0f          | return
 0x50d | 0b          | end
 0x50e | 20 00       | local_get local_index:0
 0x510 | 41 b0 01    | i32_const value:176
 0x513 | 46          | i32_eq
 0x514 | 04 40       | if blockty:Empty
 0x516 | 10 27       | call function_index:39
 0x518 | 0f          | return
 0x519 | 0b          | end
 0x51a | 20 00       | local_get local_index:0
 0x51c | 41 fc 00    | i32_const value:124
 0x51f | 46          | i32_eq
 0x520 | 04 40       | if blockty:Empty
 0x522 | 10 28       | call function_index:40
 0x524 | 0f          | return
 0x525 | 0b          | end
 0x526 | 10 1f       | call function_index:31
 0x528 | 0b          | end
============== func 38 ====================
 0x529 | 18          | size of function
 0x52a | 01          | 1 local blocks
 0x52b | 01 63 08    | 1 locals of type Ref((ref null (module 8)))
 0x52e | 23 0d       | global_get global_index:13
 0x530 | d1          | ref_is_null
 0x531 | 04 40       | if blockty:Empty
 0x533 | 10 1f       | call function_index:31
 0x535 | 0f          | return
 0x536 | 0b          | end
 0x537 | 23 0d       | global_get global_index:13
 0x539 | d4          | ref_as_non_null
 0x53a | 21 00       | local_set local_index:0
 0x53c | 20 00       | local_get local_index:0
 0x53e | 10 0f       | call function_index:15
 0x540 | 1a          | drop
 0x541 | 0b          | end
============== func 39 ====================
 0x542 | 07          | size of function
 0x543 | 00          | 0 local blocks
 0x544 | 41 09       | i32_const value:9
 0x546 | 10 21       | call function_index:33
 0x548 | 1a          | drop
 0x549 | 0b          | end
============== func 40 ====================
 0x54a | 06          | size of function
 0x54b | 00          | 0 local blocks
 0x54c | 41 09       | i32_const value:9
 0x54e | 10 00       | call function_index:0
 0x550 | 0b          | end
============== func 41 ====================
 0x551 | 0a          | size of function
 0x552 | 00          | 0 local blocks
 0x553 | 41 03       | i32_const value:3
 0x555 | 41 03       | i32_const value:3
 0x557 | 10 1d       | call function_index:29
 0x559 | 10 00       | call function_index:0
 0x55b | 0b          | end
============== func 42 ====================
 0x55c | 04          | size of function
 0x55d | 00          | 0 local blocks
 0x55e | 10 23       | call function_index:35
 0x560 | 0b          | end
 0x561 | 00 f6 0d    | custom section
 0x564 | 04 6e 61 6d | name: "name"
       | 65         
 0x569 | 00 0d       | module name
 0x56b | 0c 53 71 75 | "SqueakVMCore"
       | 65 61 6b 56
       | 4d 43 6f 72
       | 65         
 0x578 | 01 bc 06    | function name section
 0x57b | 2b          | 43 count
 0x57c | 00 0d 72 65 | Naming { index: 0, name: "report_result" }
       | 70 6f 72 74
       | 5f 72 65 73
       | 75 6c 74   
 0x58b | 01 15 6a 69 | Naming { index: 1, name: "jit_compile_method_js" }
       | 74 5f 63 6f
       | 6d 70 69 6c
       | 65 5f 6d 65
       | 74 68 6f 64
       | 5f 6a 73   
 0x5a2 | 02 0e 61 72 | Naming { index: 2, name: "array_len_byte" }
       | 72 61 79 5f
       | 6c 65 6e 5f
       | 62 79 74 65
 0x5b2 | 03 0e 61 72 | Naming { index: 3, name: "array_get_byte" }
       | 72 61 79 5f
       | 67 65 74 5f
       | 62 79 74 65
 0x5c2 | 04 10 61 72 | Naming { index: 4, name: "array_len_object" }
       | 72 61 79 5f
       | 6c 65 6e 5f
       | 6f 62 6a 65
       | 63 74      
 0x5d4 | 05 10 61 72 | Naming { index: 5, name: "array_get_object" }
       | 72 61 79 5f
       | 67 65 74 5f
       | 6f 62 6a 65
       | 63 74      
 0x5e6 | 06 10 69 73 | Naming { index: 6, name: "is_small_integer" }
       | 5f 73 6d 61
       | 6c 6c 5f 69
       | 6e 74 65 67
       | 65 72      
 0x5f8 | 07 17 67 65 | Naming { index: 7, name: "get_small_integer_value" }
       | 74 5f 73 6d
       | 61 6c 6c 5f
       | 69 6e 74 65
       | 67 65 72 5f
       | 76 61 6c 75
       | 65         
 0x611 | 08 10 6e 65 | Naming { index: 8, name: "nextIdentityHash" }
       | 78 74 49 64
       | 65 6e 74 69
       | 74 79 48 61
       | 73 68      
 0x623 | 09 0f 72 65 | Naming { index: 9, name: "register_object" }
       | 67 69 73 74
       | 65 72 5f 6f
       | 62 6a 65 63
       | 74         
 0x634 | 0a 10 70 75 | Naming { index: 10, name: "pushSmallInteger" }
       | 73 68 53 6d
       | 61 6c 6c 49
       | 6e 74 65 67
       | 65 72      
 0x646 | 0b 0b 73 65 | Naming { index: 11, name: "sendMessage" }
       | 6e 64 4d 65
       | 73 73 61 67
       | 65         
 0x653 | 0c 0e 67 65 | Naming { index: 12, name: "get_context_pc" }
       | 74 5f 63 6f
       | 6e 74 65 78
       | 74 5f 70 63
 0x663 | 0d 0e 73 65 | Naming { index: 13, name: "set_context_pc" }
       | 74 5f 63 6f
       | 6e 74 65 78
       | 74 5f 70 63
 0x673 | 0e 12 67 65 | Naming { index: 14, name: "get_context_method" }
       | 74 5f 63 6f
       | 6e 74 65 78
       | 74 5f 6d 65
       | 74 68 6f 64
 0x687 | 0f 14 67 65 | Naming { index: 15, name: "get_context_receiver" }
       | 74 5f 63 6f
       | 6e 74 65 78
       | 74 5f 72 65
       | 63 65 69 76
       | 65 72      
 0x69d | 10 14 73 65 | Naming { index: 16, name: "set_context_receiver" }
       | 74 5f 63 6f
       | 6e 74 65 78
       | 74 5f 72 65
       | 63 65 69 76
       | 65 72      
 0x6b3 | 11 14 67 65 | Naming { index: 17, name: "get_method_bytecodes" }
       | 74 5f 6d 65
       | 74 68 6f 64
       | 5f 62 79 74
       | 65 63 6f 64
       | 65 73      
 0x6c9 | 12 1a 69 6e | Naming { index: 18, name: "increment_invocation_count" }
       | 63 72 65 6d
       | 65 6e 74 5f
       | 69 6e 76 6f
       | 63 61 74 69
       | 6f 6e 5f 63
       | 6f 75 6e 74
 0x6e5 | 13 1b 67 65 | Naming { index: 19, name: "get_method_invocation_count" }
       | 74 5f 6d 65
       | 74 68 6f 64
       | 5f 69 6e 76
       | 6f 63 61 74
       | 69 6f 6e 5f
       | 63 6f 75 6e
       | 74         
 0x702 | 14 18 73 65 | Naming { index: 20, name: "set_method_compiled_wasm" }
       | 74 5f 6d 65
       | 74 68 6f 64
       | 5f 63 6f 6d
       | 70 69 6c 65
       | 64 5f 77 61
       | 73 6d      
 0x71c | 15 18 67 65 | Naming { index: 21, name: "get_method_compiled_wasm" }
       | 74 5f 6d 65
       | 74 68 6f 64
       | 5f 63 6f 6d
       | 70 69 6c 65
       | 64 5f 77 61
       | 73 6d      
 0x736 | 16 15 67 65 | Naming { index: 22, name: "get_class_method_dict" }
       | 74 5f 63 6c
       | 61 73 73 5f
       | 6d 65 74 68
       | 6f 64 5f 64
       | 69 63 74   
 0x74d | 17 14 67 65 | Naming { index: 23, name: "get_class_superclass" }
       | 74 5f 63 6c
       | 61 73 73 5f
       | 73 75 70 65
       | 72 63 6c 61
       | 73 73      
 0x763 | 18 0e 67 65 | Naming { index: 24, name: "get_class_name" }
       | 74 5f 63 6c
       | 61 73 73 5f
       | 6e 61 6d 65
 0x773 | 19 13 67 65 | Naming { index: 25, name: "get_dictionary_keys" }
       | 74 5f 64 69
       | 63 74 69 6f
       | 6e 61 72 79
       | 5f 6b 65 79
       | 73         
 0x788 | 1a 15 67 65 | Naming { index: 26, name: "get_dictionary_values" }
       | 74 5f 64 69
       | 63 74 69 6f
       | 6e 61 72 79
       | 5f 76 61 6c
       | 75 65 73   
 0x79f | 1b 14 67 65 | Naming { index: 27, name: "get_dictionary_count" }
       | 74 5f 64 69
       | 63 74 69 6f
       | 6e 61 72 79
       | 5f 63 6f 75
       | 6e 74      
 0x7b5 | 1c 0f 73 6d | Naming { index: 28, name: "smallIntegerAdd" }
       | 61 6c 6c 49
       | 6e 74 65 67
       | 65 72 41 64
       | 64         
 0x7c6 | 1d 14 73 6d | Naming { index: 29, name: "smallIntegerMultiply" }
       | 61 6c 6c 49
       | 6e 74 65 67
       | 65 72 4d 75
       | 6c 74 69 70
       | 6c 79      
 0x7dc | 1e 0b 72 65 | Naming { index: 30, name: "returnValue" }
       | 74 75 72 6e
       | 56 61 6c 75
       | 65         
 0x7e9 | 1f 0f 70 72 | Naming { index: 31, name: "primitiveFailed" }
       | 69 6d 69 74
       | 69 76 65 46
       | 61 69 6c 65
       | 64         
 0x7fa | 20 11 64 6f | Naming { index: 32, name: "doesNotUnderstand" }
       | 65 73 4e 6f
       | 74 55 6e 64
       | 65 72 73 74
       | 61 6e 64   
 0x80d | 21 12 63 72 | Naming { index: 33, name: "createSmallInteger" }
       | 65 61 74 65
       | 53 6d 61 6c
       | 6c 49 6e 74
       | 65 67 65 72
 0x821 | 22 0d 63 72 | Naming { index: 34, name: "createContext" }
       | 65 61 74 65
       | 43 6f 6e 74
       | 65 78 74   
 0x830 | 23 19 63 72 | Naming { index: 35, name: "createMinimalObjectMemory" }
       | 65 61 74 65
       | 4d 69 6e 69
       | 6d 61 6c 4f
       | 62 6a 65 63
       | 74 4d 65 6d
       | 6f 72 79   
 0x84b | 24 09 69 6e | Naming { index: 36, name: "interpret" }
       | 74 65 72 70
       | 72 65 74   
 0x856 | 25 1c 65 78 | Naming { index: 37, name: "execute_bytecode_instruction" }
       | 65 63 75 74
       | 65 5f 62 79
       | 74 65 63 6f
       | 64 65 5f 69
       | 6e 73 74 72
       | 75 63 74 69
       | 6f 6e      
 0x874 | 26 0c 70 75 | Naming { index: 38, name: "pushReceiver" }
       | 73 68 52 65
       | 63 65 69 76
       | 65 72      
 0x882 | 27 0c 73 65 | Naming { index: 39, name: "sendMultiply" }
       | 6e 64 4d 75
       | 6c 74 69 70
       | 6c 79      
 0x890 | 28 09 72 65 | Naming { index: 40, name: "returnTop" }
       | 74 75 72 6e
       | 54 6f 70   
 0x89b | 29 11 72 75 | Naming { index: 41, name: "runMinimalExample" }
       | 6e 4d 69 6e
       | 69 6d 61 6c
       | 45 78 61 6d
       | 70 6c 65   
 0x8ae | 2a 07 69 6e | Naming { index: 42, name: "init_vm" }
       | 69 74 5f 76
       | 6d         
 0x8b7 | 02 c8 03    | local section
 0x8ba | 22          | 34 count
 0x8bb | 02          | function 2 local name section
 0x8bc | 01          | 1 count
 0x8bd | 00 05 61 72 | Naming { index: 0, name: "array" }
       | 72 61 79   
 0x8c4 | 03          | function 3 local name section
 0x8c5 | 02          | 2 count
 0x8c6 | 00 05 61 72 | Naming { index: 0, name: "array" }
       | 72 61 79   
 0x8cd | 01 05 69 6e | Naming { index: 1, name: "index" }
       | 64 65 78   
 0x8d4 | 04          | function 4 local name section
 0x8d5 | 01          | 1 count
 0x8d6 | 00 05 61 72 | Naming { index: 0, name: "array" }
       | 72 61 79   
 0x8dd | 05          | function 5 local name section
 0x8de | 02          | 2 count
 0x8df | 00 05 61 72 | Naming { index: 0, name: "array" }
       | 72 61 79   
 0x8e6 | 01 05 69 6e | Naming { index: 1, name: "index" }
       | 64 65 78   
 0x8ed | 06          | function 6 local name section
 0x8ee | 01          | 1 count
 0x8ef | 00 03 6f 62 | Naming { index: 0, name: "obj" }
       | 6a         
 0x8f4 | 07          | function 7 local name section
 0x8f5 | 01          | 1 count
 0x8f6 | 00 03 6f 62 | Naming { index: 0, name: "obj" }
       | 6a         
 0x8fb | 09          | function 9 local name section
 0x8fc | 02          | 2 count
 0x8fd | 00 06 6f 62 | Naming { index: 0, name: "object" }
       | 6a 65 63 74
 0x905 | 01 07 6c 61 | Naming { index: 1, name: "lastObj" }
       | 73 74 4f 62
       | 6a         
 0x90e | 0a          | function 10 local name section
 0x90f | 01          | 1 count
 0x910 | 00 05 76 61 | Naming { index: 0, name: "value" }
       | 6c 75 65   
 0x917 | 0b          | function 11 local name section
 0x918 | 02          | 2 count
 0x919 | 00 08 73 65 | Naming { index: 0, name: "selector" }
       | 6c 65 63 74
       | 6f 72      
 0x923 | 01 08 61 72 | Naming { index: 1, name: "argCount" }
       | 67 43 6f 75
       | 6e 74      
 0x92d | 0c          | function 12 local name section
 0x92e | 01          | 1 count
 0x92f | 00 07 63 6f | Naming { index: 0, name: "context" }
       | 6e 74 65 78
       | 74         
 0x938 | 0d          | function 13 local name section
 0x939 | 02          | 2 count
 0x93a | 00 07 63 6f | Naming { index: 0, name: "context" }
       | 6e 74 65 78
       | 74         
 0x943 | 01 02 70 63 | Naming { index: 1, name: "pc" }
 0x947 | 0e          | function 14 local name section
 0x948 | 01          | 1 count
 0x949 | 00 07 63 6f | Naming { index: 0, name: "context" }
       | 6e 74 65 78
       | 74         
 0x952 | 0f          | function 15 local name section
 0x953 | 01          | 1 count
 0x954 | 00 07 63 6f | Naming { index: 0, name: "context" }
       | 6e 74 65 78
       | 74         
 0x95d | 10          | function 16 local name section
 0x95e | 02          | 2 count
 0x95f | 00 07 63 6f | Naming { index: 0, name: "context" }
       | 6e 74 65 78
       | 74         
 0x968 | 01 08 72 65 | Naming { index: 1, name: "receiver" }
       | 63 65 69 76
       | 65 72      
 0x972 | 11          | function 17 local name section
 0x973 | 01          | 1 count
 0x974 | 00 06 6d 65 | Naming { index: 0, name: "method" }
       | 74 68 6f 64
 0x97c | 12          | function 18 local name section
 0x97d | 02          | 2 count
 0x97e | 00 06 6d 65 | Naming { index: 0, name: "method" }
       | 74 68 6f 64
 0x986 | 01 07 63 75 | Naming { index: 1, name: "current" }
       | 72 72 65 6e
       | 74         
 0x98f | 13          | function 19 local name section
 0x990 | 01          | 1 count
 0x991 | 00 06 6d 65 | Naming { index: 0, name: "method" }
       | 74 68 6f 64
 0x999 | 14          | function 20 local name section
 0x99a | 02          | 2 count
 0x99b | 00 06 6d 65 | Naming { index: 0, name: "method" }
       | 74 68 6f 64
 0x9a3 | 01 08 77 61 | Naming { index: 1, name: "wasmFunc" }
       | 73 6d 46 75
       | 6e 63      
 0x9ad | 15          | function 21 local name section
 0x9ae | 01          | 1 count
 0x9af | 00 06 6d 65 | Naming { index: 0, name: "method" }
       | 74 68 6f 64
 0x9b7 | 16          | function 22 local name section
 0x9b8 | 01          | 1 count
 0x9b9 | 00 05 63 6c | Naming { index: 0, name: "class" }
       | 61 73 73   
 0x9c0 | 17          | function 23 local name section
 0x9c1 | 01          | 1 count
 0x9c2 | 00 05 63 6c | Naming { index: 0, name: "class" }
       | 61 73 73   
 0x9c9 | 18          | function 24 local name section
 0x9ca | 01          | 1 count
 0x9cb | 00 05 63 6c | Naming { index: 0, name: "class" }
       | 61 73 73   
 0x9d2 | 19          | function 25 local name section
 0x9d3 | 01          | 1 count
 0x9d4 | 00 04 64 69 | Naming { index: 0, name: "dict" }
       | 63 74      
 0x9da | 1a          | function 26 local name section
 0x9db | 01          | 1 count
 0x9dc | 00 04 64 69 | Naming { index: 0, name: "dict" }
       | 63 74      
 0x9e2 | 1b          | function 27 local name section
 0x9e3 | 01          | 1 count
 0x9e4 | 00 04 64 69 | Naming { index: 0, name: "dict" }
       | 63 74      
 0x9ea | 1c          | function 28 local name section
 0x9eb | 02          | 2 count
 0x9ec | 00 01 61    | Naming { index: 0, name: "a" }
 0x9ef | 01 01 62    | Naming { index: 1, name: "b" }
 0x9f2 | 1d          | function 29 local name section
 0x9f3 | 02          | 2 count
 0x9f4 | 00 01 61    | Naming { index: 0, name: "a" }
 0x9f7 | 01 01 62    | Naming { index: 1, name: "b" }
 0x9fa | 1e          | function 30 local name section
 0x9fb | 01          | 1 count
 0x9fc | 00 05 76 61 | Naming { index: 0, name: "value" }
       | 6c 75 65   
 0xa03 | 20          | function 32 local name section
 0xa04 | 02          | 2 count
 0xa05 | 00 08 72 65 | Naming { index: 0, name: "receiver" }
       | 63 65 69 76
       | 65 72      
 0xa0f | 01 08 73 65 | Naming { index: 1, name: "selector" }
       | 6c 65 63 74
       | 6f 72      
 0xa19 | 21          | function 33 local name section
 0xa1a | 01          | 1 count
 0xa1b | 00 05 76 61 | Naming { index: 0, name: "value" }
       | 6c 75 65   
 0xa22 | 22          | function 34 local name section
 0xa23 | 03          | 3 count
 0xa24 | 00 06 6d 65 | Naming { index: 0, name: "method" }
       | 74 68 6f 64
 0xa2c | 01 08 72 65 | Naming { index: 1, name: "receiver" }
       | 63 65 69 76
       | 65 72      
 0xa36 | 02 07 63 6f | Naming { index: 2, name: "context" }
       | 6e 74 65 78
       | 74         
 0xa3f | 24          | function 36 local name section
 0xa40 | 05          | 5 count
 0xa41 | 00 07 63 6f | Naming { index: 0, name: "context" }
       | 6e 74 65 78
       | 74         
 0xa4a | 01 06 6d 65 | Naming { index: 1, name: "method" }
       | 74 68 6f 64
 0xa52 | 02 02 70 63 | Naming { index: 2, name: "pc" }
 0xa56 | 03 08 62 79 | Naming { index: 3, name: "bytecode" }
       | 74 65 63 6f
       | 64 65      
 0xa60 | 04 09 62 79 | Naming { index: 4, name: "bytecodes" }
       | 74 65 63 6f
       | 64 65 73   
 0xa6b | 25          | function 37 local name section
 0xa6c | 01          | 1 count
 0xa6d | 00 08 62 79 | Naming { index: 0, name: "bytecode" }
       | 74 65 63 6f
       | 64 65      
 0xa77 | 26          | function 38 local name section
 0xa78 | 01          | 1 count
 0xa79 | 00 07 63 6f | Naming { index: 0, name: "context" }
       | 6e 74 65 78
       | 74         
 0xa82 | 03 15       | label section
 0xa84 | 01          | 1 count
 0xa85 | 24          | function 36 label name section
 0xa86 | 01          | 1 count
 0xa87 | 00 10 69 6e | Naming { index: 0, name: "interpreter_loop" }
       | 74 65 72 70
       | 72 65 74 65
       | 72 5f 6c 6f
       | 6f 70      
 0xa99 | 04 6b       | type name section
 0xa9b | 09          | 9 count
 0xa9c | 00 0b 4f 62 | Naming { index: 0, name: "ObjectArray" }
       | 6a 65 63 74
       | 41 72 72 61
       | 79         
 0xaa9 | 01 09 42 79 | Naming { index: 1, name: "ByteArray" }
       | 74 65 41 72
       | 72 61 79   
 0xab4 | 02 0c 53 71 | Naming { index: 2, name: "SqueakObject" }
       | 75 65 61 6b
       | 4f 62 6a 65
       | 63 74      
 0xac2 | 03 0e 56 61 | Naming { index: 3, name: "VariableObject" }
       | 72 69 61 62
       | 6c 65 4f 62
       | 6a 65 63 74
 0xad2 | 04 06 53 79 | Naming { index: 4, name: "Symbol" }
       | 6d 62 6f 6c
 0xada | 05 05 43 6c | Naming { index: 5, name: "Class" }
       | 61 73 73   
 0xae1 | 06 0a 44 69 | Naming { index: 6, name: "Dictionary" }
       | 63 74 69 6f
       | 6e 61 72 79
 0xaed | 07 0e 43 6f | Naming { index: 7, name: "CompiledMethod" }
       | 6d 70 69 6c
       | 65 64 4d 65
       | 74 68 6f 64
 0xafd | 08 07 43 6f | Naming { index: 8, name: "Context" }
       | 6e 74 65 78
       | 74         
 0xb06 | 07 a2 02    | global name section
 0xb09 | 14          | 20 count
 0xb0a | 00 0b 6f 62 | Naming { index: 0, name: "objectClass" }
       | 6a 65 63 74
       | 43 6c 61 73
       | 73         
 0xb17 | 01 0a 63 6c | Naming { index: 1, name: "classClass" }
       | 61 73 73 43
       | 6c 61 73 73
 0xb23 | 02 0b 6d 65 | Naming { index: 2, name: "methodClass" }
       | 74 68 6f 64
       | 43 6c 61 73
       | 73         
 0xb30 | 03 0c 63 6f | Naming { index: 3, name: "contextClass" }
       | 6e 74 65 78
       | 74 43 6c 61
       | 73 73      
 0xb3e | 04 0b 73 79 | Naming { index: 4, name: "symbolClass" }
       | 6d 62 6f 6c
       | 43 6c 61 73
       | 73         
 0xb4b | 05 11 73 6d | Naming { index: 5, name: "smallIntegerClass" }
       | 61 6c 6c 49
       | 6e 74 65 67
       | 65 72 43 6c
       | 61 73 73   
 0xb5e | 06 09 6e 69 | Naming { index: 6, name: "nilObject" }
       | 6c 4f 62 6a
       | 65 63 74   
 0xb69 | 07 0a 74 72 | Naming { index: 7, name: "trueObject" }
       | 75 65 4f 62
       | 6a 65 63 74
 0xb75 | 08 0b 66 61 | Naming { index: 8, name: "falseObject" }
       | 6c 73 65 4f
       | 62 6a 65 63
       | 74         
 0xb82 | 09 0c 70 6c | Naming { index: 9, name: "plusSelector" }
       | 75 73 53 65
       | 6c 65 63 74
       | 6f 72      
 0xb90 | 0a 0d 74 69 | Naming { index: 10, name: "timesSelector" }
       | 6d 65 73 53
       | 65 6c 65 63
       | 74 6f 72   
 0xb9f | 0b 0f 73 71 | Naming { index: 11, name: "squaredSelector" }
       | 75 61 72 65
       | 64 53 65 6c
       | 65 63 74 6f
       | 72         
 0xbb0 | 0c 12 72 65 | Naming { index: 12, name: "reportToJSSelector" }
       | 70 6f 72 74
       | 54 6f 4a 53
       | 53 65 6c 65
       | 63 74 6f 72
 0xbc4 | 0d 0d 61 63 | Naming { index: 13, name: "activeContext" }
       | 74 69 76 65
       | 43 6f 6e 74
       | 65 78 74   
 0xbd3 | 0e 0d 63 75 | Naming { index: 14, name: "currentMethod" }
       | 72 72 65 6e
       | 74 4d 65 74
       | 68 6f 64   
 0xbe2 | 0f 0f 63 75 | Naming { index: 15, name: "currentReceiver" }
       | 72 72 65 6e
       | 74 52 65 63
       | 65 69 76 65
       | 72         
 0xbf3 | 10 10 6e 65 | Naming { index: 16, name: "nextIdentityHash" }
       | 78 74 49 64
       | 65 6e 74 69
       | 74 79 48 61
       | 73 68      
 0xc05 | 11 0b 66 69 | Naming { index: 17, name: "firstObject" }
       | 72 73 74 4f
       | 62 6a 65 63
       | 74         
 0xc12 | 12 0a 6c 61 | Naming { index: 18, name: "lastObject" }
       | 73 74 4f 62
       | 6a 65 63 74
 0xc1e | 13 0b 6f 62 | Naming { index: 19, name: "objectCount" }
       | 6a 65 63 74
       | 43 6f 75 6e
       | 74         
 0xc2b | 0b 2d       | tag name section
 0xc2d | 03          | 3 count
 0xc2e | 00 06 52 65 | Naming { index: 0, name: "Return" }
       | 74 75 72 6e
 0xc36 | 01 0f 50 72 | Naming { index: 1, name: "PrimitiveFailed" }
       | 69 6d 69 74
       | 69 76 65 46
       | 61 69 6c 65
       | 64         
 0xc47 | 02 11 44 6f | Naming { index: 2, name: "DoesNotUnderstand" }
       | 65 73 4e 6f
       | 74 55 6e 64
       | 65 72 73 74
       | 61 6e 64   

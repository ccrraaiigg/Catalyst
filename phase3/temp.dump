    0x0 | 00 61 73 6d | version 1 (Module)
        | 01 00 00 00
    0x8 | 01 d8 04    | type section
    0xb | 28          | 40 count
--- rec group 0 (explicit) ---
    0xc | 4e 12       | 
    0xe | 5e 6d 01    | [type 0] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Array(ArrayType(FieldType { element_type: Val(Ref(eqref)), mutable: true })), shared: false } }
   0x11 | 5e 78 01    | [type 1] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Array(ArrayType(FieldType { element_type: I8, mutable: true })), shared: false } }
   0x14 | 5e 7f 01    | [type 2] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Array(ArrayType(FieldType { element_type: Val(I32), mutable: true })), shared: false } }
   0x17 | 50 00 5f 03 | [type 3] SubType { is_final: false, supertype_idx: None, composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }] }), shared: false } }
        | 6d 01 7f 01
        | 6d 01      
   0x21 | 50 01 03 5f | [type 4] SubType { is_final: false, supertype_idx: Some(CoreTypeIndex { kind: "module", index: 3 }), composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref((ref (module 0)))), mutable: false }] }), shared: false } }
        | 04 6d 01 7f
        | 01 6d 01 64
        | 00 00      
   0x2f | 50 01 03 5f | [type 5] SubType { is_final: false, supertype_idx: Some(CoreTypeIndex { kind: "module", index: 3 }), composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref((ref (module 1)))), mutable: false }] }), shared: false } }
        | 04 6d 01 7f
        | 01 6d 01 64
        | 01 00      
   0x3d | 50 01 03 5f | [type 6] SubType { is_final: false, supertype_idx: Some(CoreTypeIndex { kind: "module", index: 3 }), composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref((ref (module 2)))), mutable: false }] }), shared: false } }
        | 04 6d 01 7f
        | 01 6d 01 64
        | 02 00      
   0x4b | 50 01 03 5f | [type 7] SubType { is_final: false, supertype_idx: Some(CoreTypeIndex { kind: "module", index: 3 }), composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref((ref eq))), mutable: true }] }), shared: false } }
        | 04 6d 01 7f
        | 01 6d 01 64
        | 6d 01      
   0x59 | 50 01 07 5f | [type 8] SubType { is_final: false, supertype_idx: Some(CoreTypeIndex { kind: "module", index: 7 }), composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref((ref eq))), mutable: true }] }), shared: false } }
        | 04 6d 01 7f
        | 01 6d 01 64
        | 6d 01      
   0x67 | 50 01 03 5f | [type 9] SubType { is_final: false, supertype_idx: Some(CoreTypeIndex { kind: "module", index: 3 }), composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref((ref (module 4)))), mutable: false }, FieldType { element_type: Val(Ref((ref (module 4)))), mutable: false }, FieldType { element_type: Val(I32), mutable: true }] }), shared: false } }
        | 06 6d 01 7f
        | 01 6d 01 64
        | 04 00 64 04
        | 00 7f 01   
   0x7a | 50 01 03 5f | [type 10] SubType { is_final: false, supertype_idx: Some(CoreTypeIndex { kind: "module", index: 3 }), composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref((ref (module 9)))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }] }), shared: false } }
        | 06 6d 01 7f
        | 01 6d 01 6d
        | 01 64 09 01
        | 7f 01      
   0x8c | 50 01 0a 5f | [type 11] SubType { is_final: false, supertype_idx: Some(CoreTypeIndex { kind: "module", index: 10 }), composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref((ref (module 9)))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref((ref (module 4)))), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 5)))), mutable: true }] }), shared: false } }
        | 08 6d 01 7f
        | 01 6d 01 6d
        | 01 64 09 01
        | 7f 01 64 04
        | 01 63 05 01
   0xa4 | 50 01 0b 5f | [type 12] SubType { is_final: false, supertype_idx: Some(CoreTypeIndex { kind: "module", index: 11 }), composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref((ref (module 9)))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref((ref (module 4)))), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 5)))), mutable: true }, FieldType { element_type: Val(Ref((ref (module 4)))), mutable: true }, FieldType { element_type: Val(Ref((ref (module 8)))), mutable: true }, FieldType { element_type: Val(Ref((ref (module 9)))), mutable: true }, FieldType { element_type: Val(Ref((ref (module 4)))), mutable: true }] }), shared: false } }
        | 0c 6d 01 7f
        | 01 6d 01 6d
        | 01 64 09 01
        | 7f 01 64 04
        | 01 63 05 01
        | 64 04 01 64
        | 08 01 64 09
        | 01 64 04 01
   0xc8 | 50 01 0b 5f | [type 13] SubType { is_final: false, supertype_idx: Some(CoreTypeIndex { kind: "module", index: 11 }), composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref((ref (module 9)))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref((ref (module 4)))), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 5)))), mutable: true }, FieldType { element_type: Val(Ref((ref (module 12)))), mutable: true }] }), shared: false } }
        | 09 6d 01 7f
        | 01 6d 01 6d
        | 01 64 09 01
        | 7f 01 64 04
        | 01 63 05 01
        | 64 0c 01   
   0xe3 | 50 01 07 5f | [type 14] SubType { is_final: false, supertype_idx: Some(CoreTypeIndex { kind: "module", index: 7 }), composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref((ref eq))), mutable: true }, FieldType { element_type: Val(Ref((ref (module 4)))), mutable: false }, FieldType { element_type: Val(I32), mutable: false }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(I32), mutable: false }, FieldType { element_type: Val(I32), mutable: true }] }), shared: false } }
        | 0a 6d 01 7f
        | 01 6d 01 64
        | 6d 01 64 04
        | 00 7f 00 7f
        | 01 7f 01 7f
        | 00 7f 01   
   0xfe | 50 01 03 5f | [type 15] SubType { is_final: false, supertype_idx: Some(CoreTypeIndex { kind: "module", index: 3 }), composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 15)))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 14)))), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref((ref (module 4)))), mutable: true }, FieldType { element_type: Val(Ref((ref (module 4)))), mutable: true }, FieldType { element_type: Val(Ref((ref (module 4)))), mutable: true }] }), shared: false } }
        | 0b 6d 01 7f
        | 01 6d 01 63
        | 0f 01 7f 01
        | 7f 01 63 0e
        | 01 6d 01 64
        | 04 01 64 04
        | 01 64 04 01
  0x11e | 5f 04 6d 01 | [type 16] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref((ref eq))), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 14)))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }] }), shared: false } }
        | 64 6d 01 63
        | 0e 01 7f 01
  0x12a | 5f 0e 63 0f | [type 17] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref((ref null (module 15)))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref((ref (module 0)))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 12)))), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 12)))), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 12)))), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 12)))), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 12)))), mutable: true }] }), shared: false } }
        | 01 7f 01 64
        | 00 01 7f 01
        | 7f 01 7f 01
        | 7f 01 6d 01
        | 6d 01 63 0c
        | 01 63 0c 01
        | 63 0c 01 63
        | 0c 01 63 0c
        | 01         
--- rec group 1 (implicit) ---
  0x14f | 60 01 64 08 | [type 18] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 8)))], results: [] }), shared: false } }
        | 00         
--- rec group 2 (implicit) ---
  0x154 | 60 01 7f 00 | [type 19] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [I32], results: [] }), shared: false } }
--- rec group 3 (implicit) ---
  0x158 | 60 02 6d 7f | [type 20] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref(eqref), I32], results: [] }), shared: false } }
        | 00         
--- rec group 4 (implicit) ---
  0x15d | 60 03 7f 7f | [type 21] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [I32, I32, I32], results: [] }), shared: false } }
        | 7f 00      
--- rec group 5 (implicit) ---
  0x163 | 60 02 64 11 | [type 22] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 17))), Ref((ref (module 0)))], results: [Ref((ref (module 4)))] }), shared: false } }
        | 64 00 01 64
        | 04         
--- rec group 6 (implicit) ---
  0x16c | 60 02 64 11 | [type 23] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 17))), Ref((ref (module 1)))], results: [Ref((ref (module 5)))] }), shared: false } }
        | 64 01 01 64
        | 05         
--- rec group 7 (implicit) ---
  0x175 | 60 02 64 11 | [type 24] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 17))), Ref((ref (module 2)))], results: [Ref((ref (module 6)))] }), shared: false } }
        | 64 02 01 64
        | 06         
--- rec group 8 (implicit) ---
  0x17e | 60 01 64 11 | [type 25] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 17)))], results: [Ref((ref (module 9)))] }), shared: false } }
        | 01 64 09   
--- rec group 9 (implicit) ---
  0x185 | 60 02 64 11 | [type 26] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 17))), Ref((ref (module 0)))], results: [] }), shared: false } }
        | 64 00 00   
--- rec group 10 (implicit) ---
  0x18c | 60 02 64 11 | [type 27] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 17))), Ref((ref (module 12)))], results: [] }), shared: false } }
        | 64 0c 00   
--- rec group 11 (implicit) ---
  0x193 | 60 02 64 11 | [type 28] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 17))), Ref((ref (module 13)))], results: [] }), shared: false } }
        | 64 0d 00   
--- rec group 12 (implicit) ---
  0x19a | 60 01 64 11 | [type 29] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 17)))], results: [Ref((ref (module 4)))] }), shared: false } }
        | 01 64 04   
--- rec group 13 (implicit) ---
  0x1a1 | 60 03 64 11 | [type 30] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 17))), I32, Ref((ref (module 8)))], results: [Ref((ref (module 12)))] }), shared: false } }
        | 7f 64 08 01
        | 64 0c      
--- rec group 14 (implicit) ---
  0x1ab | 60 02 64 11 | [type 31] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 17))), Ref((ref (module 12)))], results: [Ref((ref eq))] }), shared: false } }
        | 64 0c 01 64
        | 6d         
--- rec group 15 (implicit) ---
  0x1b4 | 60 02 64 11 | [type 32] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 17))), Ref((ref (module 1)))], results: [Ref((ref (module 8)))] }), shared: false } }
        | 64 01 01 64
        | 08         
--- rec group 16 (implicit) ---
  0x1bd | 60 00 01 64 | [type 33] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [], results: [Ref((ref (module 17)))] }), shared: false } }
        | 11         
--- rec group 17 (implicit) ---
  0x1c2 | 60 01 6d 01 | [type 34] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref(eqref)], results: [Ref((ref eq))] }), shared: false } }
        | 64 6d      
--- rec group 18 (implicit) ---
  0x1c8 | 60 02 6d 6d | [type 35] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref(eqref), Ref(eqref)], results: [] }), shared: false } }
        | 00         
--- rec group 19 (implicit) ---
  0x1cd | 60 01 6d 01 | [type 36] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref(eqref)], results: [Ref(eqref)] }), shared: false } }
        | 6d         
--- rec group 20 (implicit) ---
  0x1d2 | 60 02 6d 7f | [type 37] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref(eqref), I32], results: [Ref(eqref)] }), shared: false } }
        | 01 6d      
--- rec group 21 (implicit) ---
  0x1d8 | 60 02 6d 7f | [type 38] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref(eqref), I32], results: [I32] }), shared: false } }
        | 01 7f      
--- rec group 22 (implicit) ---
  0x1de | 60 02 64 00 | [type 39] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 0))), I32], results: [Ref(eqref)] }), shared: false } }
        | 7f 01 6d   
--- rec group 23 (implicit) ---
  0x1e5 | 60 02 64 01 | [type 40] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 1))), I32], results: [I32] }), shared: false } }
        | 7f 01 7f   
--- rec group 24 (implicit) ---
  0x1ec | 60 01 6d 01 | [type 41] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref(eqref)], results: [I32] }), shared: false } }
        | 7f         
--- rec group 25 (implicit) ---
  0x1f1 | 60 01 64 01 | [type 42] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 1)))], results: [I32] }), shared: false } }
        | 01 7f      
--- rec group 26 (implicit) ---
  0x1f7 | 60 01 64 11 | [type 43] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 17)))], results: [I32] }), shared: false } }
        | 01 7f      
--- rec group 27 (implicit) ---
  0x1fd | 60 02 64 0f | [type 44] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 15))), Ref(eqref)], results: [] }), shared: false } }
        | 6d 00      
--- rec group 28 (implicit) ---
  0x203 | 60 01 63 0f | [type 45] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref null (module 15)))], results: [Ref(eqref)] }), shared: false } }
        | 01 6d      
--- rec group 29 (implicit) ---
  0x209 | 60 02 64 11 | [type 46] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 17))), Ref(eqref)], results: [Ref(eqref)] }), shared: false } }
        | 6d 01 6d   
--- rec group 30 (implicit) ---
  0x210 | 60 03 64 11 | [type 47] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 17))), Ref(eqref), Ref(eqref)], results: [Ref((ref null (module 14)))] }), shared: false } }
        | 6d 6d 01 63
        | 0e         
--- rec group 31 (implicit) ---
  0x219 | 60 03 64 11 | [type 48] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 17))), Ref(eqref), Ref((ref (module 12)))], results: [Ref((ref null (module 14)))] }), shared: false } }
        | 6d 64 0c 01
        | 63 0e      
--- rec group 32 (implicit) ---
  0x223 | 60 04 64 11 | [type 49] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 17))), Ref((ref (module 8))), Ref((ref eq)), Ref((ref null (module 14)))], results: [] }), shared: false } }
        | 64 08 64 6d
        | 63 0e 00   
--- rec group 33 (implicit) ---
  0x22e | 60 04 64 11 | [type 50] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 17))), Ref(eqref), Ref((ref null (module 14))), Ref(eqref)], results: [Ref((ref (module 15)))] }), shared: false } }
        | 6d 63 0e 6d
        | 01 64 0f   
--- rec group 34 (implicit) ---
  0x239 | 60 01 7f 01 | [type 51] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [I32], results: [Ref((ref i31))] }), shared: false } }
        | 64 6c      
--- rec group 35 (implicit) ---
  0x23f | 60 01 63 0e | [type 52] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref null (module 14)))], results: [I32] }), shared: false } }
        | 01 7f      
--- rec group 36 (implicit) ---
  0x245 | 60 02 63 0f | [type 53] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref null (module 15))), I32], results: [I32] }), shared: false } }
        | 7f 01 7f   
--- rec group 37 (implicit) ---
  0x24c | 60 02 63 0e | [type 54] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref null (module 14))), I32], results: [] }), shared: false } }
        | 7f 00      
--- rec group 38 (implicit) ---
  0x252 | 60 02 64 11 | [type 55] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 17))), Ref((ref null (module 15)))], results: [Ref(eqref)] }), shared: false } }
        | 63 0f 01 6d
--- rec group 39 (implicit) ---
  0x25a | 60 03 64 11 | [type 56] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 17))), Ref((ref (module 15))), I32], results: [I32] }), shared: false } }
        | 64 0f 7f 01
        | 7f         
  0x263 | 02 39       | import section
  0x265 | 03          | 3 count
  0x266 | 03 65 6e 76 | import [func 0] Import { module: "env", name: "reportResult", ty: Func(19) }
        | 0c 72 65 70
        | 6f 72 74 52
        | 65 73 75 6c
        | 74 00 13   
  0x279 | 03 65 6e 76 | import [func 1] Import { module: "env", name: "translateMethod", ty: Func(20) }
        | 0f 74 72 61
        | 6e 73 6c 61
        | 74 65 4d 65
        | 74 68 6f 64
        | 00 14      
  0x28f | 03 65 6e 76 | import [func 2] Import { module: "env", name: "debugLog", ty: Func(21) }
        | 08 64 65 62
        | 75 67 4c 6f
        | 67 00 15   
  0x29e | 03 2c       | func section
  0x2a0 | 2b          | 43 count
  0x2a1 | 16          | [func 3] type 22
  0x2a2 | 17          | [func 4] type 23
  0x2a3 | 18          | [func 5] type 24
  0x2a4 | 19          | [func 6] type 25
  0x2a5 | 1a          | [func 7] type 26
  0x2a6 | 1b          | [func 8] type 27
  0x2a7 | 1c          | [func 9] type 28
  0x2a8 | 1d          | [func 10] type 29
  0x2a9 | 1e          | [func 11] type 30
  0x2aa | 1f          | [func 12] type 31
  0x2ab | 20          | [func 13] type 32
  0x2ac | 21          | [func 14] type 33
  0x2ad | 22          | [func 15] type 34
  0x2ae | 14          | [func 16] type 20
  0x2af | 23          | [func 17] type 35
  0x2b0 | 24          | [func 18] type 36
  0x2b1 | 24          | [func 19] type 36
  0x2b2 | 24          | [func 20] type 36
  0x2b3 | 25          | [func 21] type 37
  0x2b4 | 24          | [func 22] type 36
  0x2b5 | 26          | [func 23] type 38
  0x2b6 | 27          | [func 24] type 39
  0x2b7 | 28          | [func 25] type 40
  0x2b8 | 29          | [func 26] type 41
  0x2b9 | 2a          | [func 27] type 42
  0x2ba | 2b          | [func 28] type 43
  0x2bb | 2c          | [func 29] type 44
  0x2bc | 2d          | [func 30] type 45
  0x2bd | 2d          | [func 31] type 45
  0x2be | 2e          | [func 32] type 46
  0x2bf | 2f          | [func 33] type 47
  0x2c0 | 30          | [func 34] type 48
  0x2c1 | 31          | [func 35] type 49
  0x2c2 | 32          | [func 36] type 50
  0x2c3 | 33          | [func 37] type 51
  0x2c4 | 29          | [func 38] type 41
  0x2c5 | 34          | [func 39] type 52
  0x2c6 | 35          | [func 40] type 53
  0x2c7 | 36          | [func 41] type 54
  0x2c8 | 37          | [func 42] type 55
  0x2c9 | 2b          | [func 43] type 43
  0x2ca | 38          | [func 44] type 56
  0x2cb | 2b          | [func 45] type 43
  0x2cc | 04 04       | table section
  0x2ce | 01          | 1 count
  0x2cf | 70 00 64    | [table 0] Table { ty: TableType { element_type: funcref, table64: false, initial: 100, maximum: None, shared: false }, init: RefNull }
  0x2d2 | 05 03       | memory section
  0x2d4 | 01          | 1 count
  0x2d5 | 00 01       | [memory 0] MemoryType { memory64: false, shared: false, initial: 1, maximum: None, page_size_log2: None }
  0x2d7 | 0d 03       | tag section
  0x2d9 | 01          | 1 count
  0x2da | 00 12       | [tag 0] TagType { kind: Exception, func_type_idx: 18 }
  0x2dc | 06 07       | global section
  0x2de | 01          | 1 count
  0x2df | 7f 01       | [global 0] GlobalType { content_type: I32, mutable: true, shared: false }
  0x2e1 | 41 80 08    | i32_const value:1024
  0x2e4 | 0b          | end
  0x2e5 | 07 d5 02    | export section
  0x2e8 | 13          | 19 count
  0x2e9 | 05 62 79 74 | export Export { name: "bytes", kind: Memory, index: 0 }
        | 65 73 02 00
  0x2f1 | 0d 66 75 6e | export Export { name: "functionTable", kind: Table, index: 0 }
        | 63 74 69 6f
        | 6e 54 61 62
        | 6c 65 01 00
  0x301 | 0a 69 6e 69 | export Export { name: "initialize", kind: Func, index: 45 }
        | 74 69 61 6c
        | 69 7a 65 00
        | 2d         
  0x30e | 0f 6d 65 74 | export Export { name: "methodBytecodes", kind: Func, index: 15 }
        | 68 6f 64 42
        | 79 74 65 63
        | 6f 64 65 73
        | 00 0f      
  0x320 | 16 73 65 74 | export Export { name: "setMethodFunctionIndex", kind: Func, index: 16 }
        | 4d 65 74 68
        | 6f 64 46 75
        | 6e 63 74 69
        | 6f 6e 49 6e
        | 64 65 78 00
        | 10         
  0x339 | 0d 6f 6e 43 | export Export { name: "onContextPush", kind: Func, index: 17 }
        | 6f 6e 74 65
        | 78 74 50 75
        | 73 68 00 11
  0x349 | 0e 70 6f 70 | export Export { name: "popFromContext", kind: Func, index: 18 }
        | 46 72 6f 6d
        | 43 6f 6e 74
        | 65 78 74 00
        | 12         
  0x35a | 13 76 61 6c | export Export { name: "valueOfSmallInteger", kind: Func, index: 38 }
        | 75 65 4f 66
        | 53 6d 61 6c
        | 6c 49 6e 74
        | 65 67 65 72
        | 00 26      
  0x370 | 14 73 6d 61 | export Export { name: "smallIntegerForValue", kind: Func, index: 37 }
        | 6c 6c 49 6e
        | 74 65 67 65
        | 72 46 6f 72
        | 56 61 6c 75
        | 65 00 25   
  0x387 | 0d 63 6c 61 | export Export { name: "classOfObject", kind: Func, index: 32 }
        | 73 73 4f 66
        | 4f 62 6a 65
        | 63 74 00 20
  0x397 | 0f 63 6f 6e | export Export { name: "contextReceiver", kind: Func, index: 19 }
        | 74 65 78 74
        | 52 65 63 65
        | 69 76 65 72
        | 00 13      
  0x3a9 | 0e 6d 65 74 | export Export { name: "methodLiterals", kind: Func, index: 20 }
        | 68 6f 64 4c
        | 69 74 65 72
        | 61 6c 73 00
        | 14         
  0x3ba | 10 63 6f 6e | export Export { name: "contextLiteralAt", kind: Func, index: 21 }
        | 74 65 78 74
        | 4c 69 74 65
        | 72 61 6c 41
        | 74 00 15   
  0x3cd | 0d 63 6f 6e | export Export { name: "contextMethod", kind: Func, index: 22 }
        | 74 65 78 74
        | 4d 65 74 68
        | 6f 64 00 16
  0x3dd | 0b 62 79 74 | export Export { name: "byteArrayAt", kind: Func, index: 25 }
        | 65 41 72 72
        | 61 79 41 74
        | 00 19      
  0x3eb | 0f 62 79 74 | export Export { name: "byteArrayLength", kind: Func, index: 26 }
        | 65 41 72 72
        | 61 79 4c 65
        | 6e 67 74 68
        | 00 1a      
  0x3fd | 15 63 6f 70 | export Export { name: "copyByteArrayToMemory", kind: Func, index: 27 }
        | 79 42 79 74
        | 65 41 72 72
        | 61 79 54 6f
        | 4d 65 6d 6f
        | 72 79 00 1b
  0x415 | 19 63 72 65 | export Export { name: "createMinimalObjectMemory", kind: Func, index: 43 }
        | 61 74 65 4d
        | 69 6e 69 6d
        | 61 6c 4f 62
        | 6a 65 63 74
        | 4d 65 6d 6f
        | 72 79 00 2b
  0x431 | 09 69 6e 74 | export Export { name: "interpret", kind: Func, index: 45 }
        | 65 72 70 72
        | 65 74 00 2d
  0x43d | 0a cb 19    | code section
  0x440 | 2b          | 43 count
============== func 3 ====================
  0x441 | 0f          | size of function
  0x442 | 00          | 0 local blocks
  0x443 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x445 | 20 00       | local_get local_index:0
  0x447 | 10 1c       | call function_index:28
  0x449 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x44b | 20 01       | local_get local_index:1
  0x44d | fb 00 04    | struct_new struct_type_index:4
  0x450 | 0b          | end
============== func 4 ====================
  0x451 | 0f          | size of function
  0x452 | 00          | 0 local blocks
  0x453 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x455 | 20 00       | local_get local_index:0
  0x457 | 10 1c       | call function_index:28
  0x459 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x45b | 20 01       | local_get local_index:1
  0x45d | fb 00 05    | struct_new struct_type_index:5
  0x460 | 0b          | end
============== func 5 ====================
  0x461 | 0f          | size of function
  0x462 | 00          | 0 local blocks
  0x463 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x465 | 20 00       | local_get local_index:0
  0x467 | 10 1c       | call function_index:28
  0x469 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x46b | 20 01       | local_get local_index:1
  0x46d | fb 00 06    | struct_new struct_type_index:6
  0x470 | 0b          | end
============== func 6 ====================
  0x471 | 25          | size of function
  0x472 | 00          | 0 local blocks
  0x473 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x475 | 20 00       | local_get local_index:0
  0x477 | 10 1c       | call function_index:28
  0x479 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x47b | 20 00       | local_get local_index:0
  0x47d | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x47f | 41 00       | i32_const value:0
  0x481 | fb 06 00    | array_new array_type_index:0
  0x484 | 10 03       | call function_index:3
  0x486 | 20 00       | local_get local_index:0
  0x488 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x48a | 41 00       | i32_const value:0
  0x48c | fb 06 00    | array_new array_type_index:0
  0x48f | 10 03       | call function_index:3
  0x491 | 41 00       | i32_const value:0
  0x493 | fb 00 09    | struct_new struct_type_index:9
  0x496 | 0b          | end
============== func 7 ====================
  0x497 | 5d          | size of function
  0x498 | 03          | 3 local blocks
  0x499 | 02 6d       | 2 locals of type Ref(eqref)
  0x49b | 02 7f       | 2 locals of type I32
  0x49d | 01 64 11    | 1 locals of type Ref((ref (module 17)))
  0x4a0 | 20 01       | local_get local_index:1
  0x4a2 | fb 0f       | array_len
  0x4a4 | 41 01       | i32_const value:1
  0x4a6 | 6b          | i32_sub
  0x4a7 | 21 04       | local_set local_index:4
  0x4a9 | 41 00       | i32_const value:0
  0x4ab | 21 05       | local_set local_index:5
  0x4ad | 20 00       | local_get local_index:0
  0x4af | fb 02 11 08 | struct_get struct_type_index:17 field_index:8
  0x4b3 | 21 02       | local_set local_index:2
  0x4b5 | 03 40       | loop blockty:Empty
  0x4b7 | 20 05       | local_get local_index:5
  0x4b9 | 20 04       | local_get local_index:4
  0x4bb | 46          | i32_eq
  0x4bc | 04 40       | if blockty:Empty
  0x4be | 0f          | return
  0x4bf | 0b          | end
  0x4c0 | 20 01       | local_get local_index:1
  0x4c2 | 20 05       | local_get local_index:5
  0x4c4 | fb 0b 00    | array_get array_type_index:0
  0x4c7 | 21 03       | local_set local_index:3
  0x4c9 | 02 64 11    | block blockty:Type(Ref((ref (module 17))))
  0x4cc | 20 00       | local_get local_index:0
  0x4ce | 21 06       | local_set local_index:6
  0x4d0 | 20 02       | local_get local_index:2
  0x4d2 | fb 16 03    | ref_cast_non_null hty:Concrete(Module(3))
  0x4d5 | 20 03       | local_get local_index:3
  0x4d7 | fb 05 03 02 | struct_set struct_type_index:3 field_index:2
  0x4db | 20 06       | local_get local_index:6
  0x4dd | 0b          | end
  0x4de | 20 03       | local_get local_index:3
  0x4e0 | fb 05 11 08 | struct_set struct_type_index:17 field_index:8
  0x4e4 | 20 05       | local_get local_index:5
  0x4e6 | 41 01       | i32_const value:1
  0x4e8 | 6a          | i32_add
  0x4e9 | 21 05       | local_set local_index:5
  0x4eb | 20 03       | local_get local_index:3
  0x4ed | 21 02       | local_set local_index:2
  0x4ef | 41 01       | i32_const value:1
  0x4f1 | 0d 00       | br_if relative_depth:0
  0x4f3 | 0b          | end
  0x4f4 | 0b          | end
============== func 8 ====================
  0x4f5 | 40          | size of function
  0x4f6 | 00          | 0 local blocks
  0x4f7 | 20 00       | local_get local_index:0
  0x4f9 | 20 01       | local_get local_index:1
  0x4fb | fb 02 0c 00 | struct_get struct_type_index:12 field_index:0
  0x4ff | 20 01       | local_get local_index:1
  0x501 | fb 02 0c 03 | struct_get struct_type_index:12 field_index:3
  0x505 | 20 01       | local_get local_index:1
  0x507 | fb 02 0c 04 | struct_get struct_type_index:12 field_index:4
  0x50b | 20 01       | local_get local_index:1
  0x50d | fb 02 0c 06 | struct_get struct_type_index:12 field_index:6
  0x511 | 20 01       | local_get local_index:1
  0x513 | fb 02 0c 07 | struct_get struct_type_index:12 field_index:7
  0x517 | 20 01       | local_get local_index:1
  0x519 | fb 02 0c 08 | struct_get struct_type_index:12 field_index:8
  0x51d | 20 01       | local_get local_index:1
  0x51f | fb 02 0c 09 | struct_get struct_type_index:12 field_index:9
  0x523 | 20 01       | local_get local_index:1
  0x525 | fb 02 0c 0a | struct_get struct_type_index:12 field_index:10
  0x529 | 20 01       | local_get local_index:1
  0x52b | fb 02 0c 0b | struct_get struct_type_index:12 field_index:11
  0x52f | fb 08 00 09 | array_new_fixed array_type_index:0 array_size:9
  0x533 | 10 07       | call function_index:7
  0x535 | 0b          | end
============== func 9 ====================
  0x536 | 38          | size of function
  0x537 | 00          | 0 local blocks
  0x538 | 20 00       | local_get local_index:0
  0x53a | 20 01       | local_get local_index:1
  0x53c | fb 02 0d 00 | struct_get struct_type_index:13 field_index:0
  0x540 | 20 01       | local_get local_index:1
  0x542 | fb 02 0d 03 | struct_get struct_type_index:13 field_index:3
  0x546 | 20 01       | local_get local_index:1
  0x548 | fb 02 0d 04 | struct_get struct_type_index:13 field_index:4
  0x54c | 20 01       | local_get local_index:1
  0x54e | fb 02 0d 06 | struct_get struct_type_index:13 field_index:6
  0x552 | 20 01       | local_get local_index:1
  0x554 | fb 02 0d 07 | struct_get struct_type_index:13 field_index:7
  0x558 | 20 01       | local_get local_index:1
  0x55a | fb 02 0d 08 | struct_get struct_type_index:13 field_index:8
  0x55e | fb 08 00 06 | array_new_fixed array_type_index:0 array_size:6
  0x562 | 10 07       | call function_index:7
  0x564 | 20 00       | local_get local_index:0
  0x566 | 20 01       | local_get local_index:1
  0x568 | fb 02 0d 08 | struct_get struct_type_index:13 field_index:8
  0x56c | 10 08       | call function_index:8
  0x56e | 0b          | end
============== func 10 ====================
  0x56f | 0d          | size of function
  0x570 | 00          | 0 local blocks
  0x571 | 20 00       | local_get local_index:0
  0x573 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x575 | 41 00       | i32_const value:0
  0x577 | fb 06 00    | array_new array_type_index:0
  0x57a | 10 03       | call function_index:3
  0x57c | 0b          | end
============== func 11 ====================
  0x57d | 29          | size of function
  0x57e | 00          | 0 local blocks
  0x57f | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x581 | 20 00       | local_get local_index:0
  0x583 | 10 1c       | call function_index:28
  0x585 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x587 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x589 | 20 00       | local_get local_index:0
  0x58b | 10 06       | call function_index:6
  0x58d | 20 01       | local_get local_index:1
  0x58f | 20 00       | local_get local_index:0
  0x591 | 10 0a       | call function_index:10
  0x593 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x595 | 20 00       | local_get local_index:0
  0x597 | 10 0a       | call function_index:10
  0x599 | 20 02       | local_get local_index:2
  0x59b | 20 00       | local_get local_index:0
  0x59d | 10 06       | call function_index:6
  0x59f | 20 00       | local_get local_index:0
  0x5a1 | 10 0a       | call function_index:10
  0x5a3 | fb 00 0c    | struct_new struct_type_index:12
  0x5a6 | 0b          | end
============== func 12 ====================
  0x5a7 | 26          | size of function
  0x5a8 | 00          | 0 local blocks
  0x5a9 | 20 00       | local_get local_index:0
  0x5ab | fb 02 11 0c | struct_get struct_type_index:17 field_index:12
  0x5af | 20 00       | local_get local_index:0
  0x5b1 | 10 1c       | call function_index:28
  0x5b3 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x5b5 | 20 00       | local_get local_index:0
  0x5b7 | fb 02 11 0d | struct_get struct_type_index:17 field_index:13
  0x5bb | 20 00       | local_get local_index:0
  0x5bd | 10 06       | call function_index:6
  0x5bf | 41 98 01    | i32_const value:152
  0x5c2 | 20 00       | local_get local_index:0
  0x5c4 | 10 0a       | call function_index:10
  0x5c6 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x5c8 | 20 01       | local_get local_index:1
  0x5ca | fb 00 0d    | struct_new struct_type_index:13
  0x5cd | 0b          | end
============== func 13 ====================
  0x5ce | 0f          | size of function
  0x5cf | 00          | 0 local blocks
  0x5d0 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x5d2 | 20 00       | local_get local_index:0
  0x5d4 | 10 1c       | call function_index:28
  0x5d6 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x5d8 | 20 01       | local_get local_index:1
  0x5da | fb 00 08    | struct_new struct_type_index:8
  0x5dd | 0b          | end
============== func 14 ====================
  0x5de | c3 05       | size of function
  0x5e0 | 04          | 4 local blocks
  0x5e1 | 01 7f       | 1 locals of type I32
  0x5e3 | 01 6d       | 1 locals of type Ref(eqref)
  0x5e5 | 01 64 11    | 1 locals of type Ref((ref (module 17)))
  0x5e8 | 07 64 0c    | 7 locals of type Ref((ref (module 12)))
  0x5eb | 41 80 02    | i32_const value:256
  0x5ee | 21 00       | local_set local_index:0
  0x5f0 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x5f2 | 41 01       | i32_const value:1
  0x5f4 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x5f6 | fb 00 03    | struct_new struct_type_index:3
  0x5f9 | 21 01       | local_set local_index:1
  0x5fb | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x5fd | 41 01       | i32_const value:1
  0x5ff | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x601 | 41 00       | i32_const value:0
  0x603 | fb 06 00    | array_new array_type_index:0
  0x606 | 41 00       | i32_const value:0
  0x608 | 41 e8 07    | i32_const value:1000
  0x60b | 20 00       | local_get local_index:0
  0x60d | 41 e9 07    | i32_const value:1001
  0x610 | 20 01       | local_get local_index:1
  0x612 | 20 01       | local_get local_index:1
  0x614 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x616 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x618 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x61a | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x61c | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x61e | fb 00 11    | struct_new struct_type_index:17
  0x621 | 21 02       | local_set local_index:2
  0x623 | 20 02       | local_get local_index:2
  0x625 | 41 02       | i32_const value:2
  0x627 | 20 02       | local_get local_index:2
  0x629 | 41 cf 00    | i32_const value:79
  0x62c | 41 e2 00    | i32_const value:98
  0x62f | 41 ea 00    | i32_const value:106
  0x632 | 41 e5 00    | i32_const value:101
  0x635 | 41 e3 00    | i32_const value:99
  0x638 | 41 f4 00    | i32_const value:116
  0x63b | fb 08 01 06 | array_new_fixed array_type_index:1 array_size:6
  0x63f | 10 0d       | call function_index:13
  0x641 | 10 0b       | call function_index:11
  0x643 | 21 03       | local_set local_index:3
  0x645 | 20 02       | local_get local_index:2
  0x647 | 20 03       | local_get local_index:3
  0x649 | fb 05 11 0a | struct_set struct_type_index:17 field_index:10
  0x64d | 20 02       | local_get local_index:2
  0x64f | 41 02       | i32_const value:2
  0x651 | 20 02       | local_get local_index:2
  0x653 | 41 c2 00    | i32_const value:66
  0x656 | 41 e5 00    | i32_const value:101
  0x659 | 41 e8 00    | i32_const value:104
  0x65c | 41 e1 00    | i32_const value:97
  0x65f | 41 f6 00    | i32_const value:118
  0x662 | 41 e9 00    | i32_const value:105
  0x665 | 41 ef 00    | i32_const value:111
  0x668 | 41 f2 00    | i32_const value:114
  0x66b | fb 08 01 08 | array_new_fixed array_type_index:1 array_size:8
  0x66f | 10 0d       | call function_index:13
  0x671 | 10 0b       | call function_index:11
  0x673 | 21 04       | local_set local_index:4
  0x675 | 20 02       | local_get local_index:2
  0x677 | 41 02       | i32_const value:2
  0x679 | 20 02       | local_get local_index:2
  0x67b | 41 c3 00    | i32_const value:67
  0x67e | 41 ec 00    | i32_const value:108
  0x681 | 41 e1 00    | i32_const value:97
  0x684 | 41 f3 00    | i32_const value:115
  0x687 | 41 f3 00    | i32_const value:115
  0x68a | 41 c4 00    | i32_const value:68
  0x68d | 41 e5 00    | i32_const value:101
  0x690 | 41 f3 00    | i32_const value:115
  0x693 | 41 e3 00    | i32_const value:99
  0x696 | 41 f2 00    | i32_const value:114
  0x699 | 41 e9 00    | i32_const value:105
  0x69c | 41 f0 00    | i32_const value:112
  0x69f | 41 f4 00    | i32_const value:116
  0x6a2 | 41 e9 00    | i32_const value:105
  0x6a5 | 41 ef 00    | i32_const value:111
  0x6a8 | 41 ee 00    | i32_const value:110
  0x6ab | fb 08 01 10 | array_new_fixed array_type_index:1 array_size:16
  0x6af | 10 0d       | call function_index:13
  0x6b1 | 10 0b       | call function_index:11
  0x6b3 | 21 05       | local_set local_index:5
  0x6b5 | 20 02       | local_get local_index:2
  0x6b7 | 20 05       | local_get local_index:5
  0x6b9 | fb 05 11 0d | struct_set struct_type_index:17 field_index:13
  0x6bd | 20 02       | local_get local_index:2
  0x6bf | 41 02       | i32_const value:2
  0x6c1 | 20 02       | local_get local_index:2
  0x6c3 | 41 cd 00    | i32_const value:77
  0x6c6 | 41 e5 00    | i32_const value:101
  0x6c9 | 41 f4 00    | i32_const value:116
  0x6cc | 41 e1 00    | i32_const value:97
  0x6cf | 41 e3 00    | i32_const value:99
  0x6d2 | 41 ec 00    | i32_const value:108
  0x6d5 | 41 e1 00    | i32_const value:97
  0x6d8 | 41 f3 00    | i32_const value:115
  0x6db | 41 f3 00    | i32_const value:115
  0x6de | fb 08 01 09 | array_new_fixed array_type_index:1 array_size:9
  0x6e2 | 10 0d       | call function_index:13
  0x6e4 | 10 0b       | call function_index:11
  0x6e6 | 21 07       | local_set local_index:7
  0x6e8 | 20 02       | local_get local_index:2
  0x6ea | 20 07       | local_get local_index:7
  0x6ec | fb 05 11 0c | struct_set struct_type_index:17 field_index:12
  0x6f0 | 20 02       | local_get local_index:2
  0x6f2 | 41 02       | i32_const value:2
  0x6f4 | 20 02       | local_get local_index:2
  0x6f6 | 41 c3 00    | i32_const value:67
  0x6f9 | 41 ec 00    | i32_const value:108
  0x6fc | 41 e1 00    | i32_const value:97
  0x6ff | 41 f3 00    | i32_const value:115
  0x702 | 41 f3 00    | i32_const value:115
  0x705 | fb 08 01 05 | array_new_fixed array_type_index:1 array_size:5
  0x709 | 10 0d       | call function_index:13
  0x70b | 10 0b       | call function_index:11
  0x70d | 21 06       | local_set local_index:6
  0x70f | 20 02       | local_get local_index:2
  0x711 | 41 02       | i32_const value:2
  0x713 | 20 02       | local_get local_index:2
  0x715 | 41 d3 00    | i32_const value:83
  0x718 | 41 f9 00    | i32_const value:121
  0x71b | 41 ed 00    | i32_const value:109
  0x71e | 41 e2 00    | i32_const value:98
  0x721 | 41 ef 00    | i32_const value:111
  0x724 | 41 ec 00    | i32_const value:108
  0x727 | fb 08 01 06 | array_new_fixed array_type_index:1 array_size:6
  0x72b | 10 0d       | call function_index:13
  0x72d | 10 0b       | call function_index:11
  0x72f | 21 08       | local_set local_index:8
  0x731 | 20 02       | local_get local_index:2
  0x733 | 41 02       | i32_const value:2
  0x735 | 20 02       | local_get local_index:2
  0x737 | 41 d3 00    | i32_const value:83
  0x73a | 41 ed 00    | i32_const value:109
  0x73d | 41 e1 00    | i32_const value:97
  0x740 | 41 ec 00    | i32_const value:108
  0x743 | 41 ec 00    | i32_const value:108
  0x746 | 41 c9 00    | i32_const value:73
  0x749 | 41 ee 00    | i32_const value:110
  0x74c | 41 f4 00    | i32_const value:116
  0x74f | 41 e5 00    | i32_const value:101
  0x752 | 41 e7 00    | i32_const value:103
  0x755 | 41 e5 00    | i32_const value:101
  0x758 | 41 e8 00    | i32_const value:104
  0x75b | fb 08 01 0c | array_new_fixed array_type_index:1 array_size:12
  0x75f | 10 0d       | call function_index:13
  0x761 | 10 0b       | call function_index:11
  0x763 | 21 09       | local_set local_index:9
  0x765 | 20 02       | local_get local_index:2
  0x767 | 20 09       | local_get local_index:9
  0x769 | fb 05 11 09 | struct_set struct_type_index:17 field_index:9
  0x76d | 20 03       | local_get local_index:3
  0x76f | 20 02       | local_get local_index:2
  0x771 | 20 03       | local_get local_index:3
  0x773 | 10 0c       | call function_index:12
  0x775 | fb 05 0c 00 | struct_set struct_type_index:12 field_index:0
  0x779 | 20 03       | local_get local_index:3
  0x77b | fb 02 0c 09 | struct_get struct_type_index:12 field_index:9
  0x77f | 20 08       | local_get local_index:8
  0x781 | fb 05 08 00 | struct_set struct_type_index:8 field_index:0
  0x785 | 20 04       | local_get local_index:4
  0x787 | 20 02       | local_get local_index:2
  0x789 | 20 04       | local_get local_index:4
  0x78b | 10 0c       | call function_index:12
  0x78d | fb 05 0c 00 | struct_set struct_type_index:12 field_index:0
  0x791 | 20 04       | local_get local_index:4
  0x793 | 20 03       | local_get local_index:3
  0x795 | fb 05 0c 03 | struct_set struct_type_index:12 field_index:3
  0x799 | 20 04       | local_get local_index:4
  0x79b | fb 02 0c 09 | struct_get struct_type_index:12 field_index:9
  0x79f | 20 08       | local_get local_index:8
  0x7a1 | fb 05 08 00 | struct_set struct_type_index:8 field_index:0
  0x7a5 | 20 05       | local_get local_index:5
  0x7a7 | 20 02       | local_get local_index:2
  0x7a9 | 20 05       | local_get local_index:5
  0x7ab | 10 0c       | call function_index:12
  0x7ad | fb 05 0c 00 | struct_set struct_type_index:12 field_index:0
  0x7b1 | 20 05       | local_get local_index:5
  0x7b3 | 20 04       | local_get local_index:4
  0x7b5 | fb 05 0c 03 | struct_set struct_type_index:12 field_index:3
  0x7b9 | 20 05       | local_get local_index:5
  0x7bb | fb 02 0c 09 | struct_get struct_type_index:12 field_index:9
  0x7bf | 20 08       | local_get local_index:8
  0x7c1 | fb 05 08 00 | struct_set struct_type_index:8 field_index:0
  0x7c5 | 20 06       | local_get local_index:6
  0x7c7 | 20 02       | local_get local_index:2
  0x7c9 | 20 06       | local_get local_index:6
  0x7cb | 10 0c       | call function_index:12
  0x7cd | fb 05 0c 00 | struct_set struct_type_index:12 field_index:0
  0x7d1 | 20 06       | local_get local_index:6
  0x7d3 | 20 05       | local_get local_index:5
  0x7d5 | fb 05 0c 03 | struct_set struct_type_index:12 field_index:3
  0x7d9 | 20 04       | local_get local_index:4
  0x7db | fb 02 0c 09 | struct_get struct_type_index:12 field_index:9
  0x7df | 20 08       | local_get local_index:8
  0x7e1 | fb 05 08 00 | struct_set struct_type_index:8 field_index:0
  0x7e5 | 20 07       | local_get local_index:7
  0x7e7 | 20 02       | local_get local_index:2
  0x7e9 | 20 07       | local_get local_index:7
  0x7eb | 10 0c       | call function_index:12
  0x7ed | fb 05 0c 00 | struct_set struct_type_index:12 field_index:0
  0x7f1 | 20 07       | local_get local_index:7
  0x7f3 | 20 03       | local_get local_index:3
  0x7f5 | fb 05 0c 03 | struct_set struct_type_index:12 field_index:3
  0x7f9 | 20 07       | local_get local_index:7
  0x7fb | fb 02 0c 09 | struct_get struct_type_index:12 field_index:9
  0x7ff | 20 08       | local_get local_index:8
  0x801 | fb 05 08 00 | struct_set struct_type_index:8 field_index:0
  0x805 | 20 08       | local_get local_index:8
  0x807 | 20 02       | local_get local_index:2
  0x809 | 20 08       | local_get local_index:8
  0x80b | 10 0c       | call function_index:12
  0x80d | fb 05 0c 00 | struct_set struct_type_index:12 field_index:0
  0x811 | 20 08       | local_get local_index:8
  0x813 | 20 03       | local_get local_index:3
  0x815 | fb 05 0c 03 | struct_set struct_type_index:12 field_index:3
  0x819 | 20 08       | local_get local_index:8
  0x81b | fb 02 0c 09 | struct_get struct_type_index:12 field_index:9
  0x81f | 20 08       | local_get local_index:8
  0x821 | fb 05 08 00 | struct_set struct_type_index:8 field_index:0
  0x825 | 20 09       | local_get local_index:9
  0x827 | 20 02       | local_get local_index:2
  0x829 | 20 09       | local_get local_index:9
  0x82b | 10 0c       | call function_index:12
  0x82d | fb 05 0c 00 | struct_set struct_type_index:12 field_index:0
  0x831 | 20 09       | local_get local_index:9
  0x833 | 20 03       | local_get local_index:3
  0x835 | fb 05 0c 03 | struct_set struct_type_index:12 field_index:3
  0x839 | 20 09       | local_get local_index:9
  0x83b | fb 02 0c 09 | struct_get struct_type_index:12 field_index:9
  0x83f | 20 08       | local_get local_index:8
  0x841 | fb 05 08 00 | struct_set struct_type_index:8 field_index:0
  0x845 | 20 02       | local_get local_index:2
  0x847 | 20 03       | local_get local_index:3
  0x849 | fb 02 0c 00 | struct_get struct_type_index:12 field_index:0
  0x84d | fb 16 0d    | ref_cast_non_null hty:Concrete(Module(13))
  0x850 | 10 09       | call function_index:9
  0x852 | 20 02       | local_get local_index:2
  0x854 | 20 04       | local_get local_index:4
  0x856 | fb 02 0c 00 | struct_get struct_type_index:12 field_index:0
  0x85a | fb 16 0d    | ref_cast_non_null hty:Concrete(Module(13))
  0x85d | 10 09       | call function_index:9
  0x85f | 20 02       | local_get local_index:2
  0x861 | 20 05       | local_get local_index:5
  0x863 | fb 02 0c 00 | struct_get struct_type_index:12 field_index:0
  0x867 | fb 16 0d    | ref_cast_non_null hty:Concrete(Module(13))
  0x86a | 10 09       | call function_index:9
  0x86c | 20 02       | local_get local_index:2
  0x86e | 20 06       | local_get local_index:6
  0x870 | fb 02 0c 00 | struct_get struct_type_index:12 field_index:0
  0x874 | fb 16 0d    | ref_cast_non_null hty:Concrete(Module(13))
  0x877 | 10 09       | call function_index:9
  0x879 | 20 02       | local_get local_index:2
  0x87b | 20 07       | local_get local_index:7
  0x87d | fb 02 0c 00 | struct_get struct_type_index:12 field_index:0
  0x881 | fb 16 0d    | ref_cast_non_null hty:Concrete(Module(13))
  0x884 | 10 09       | call function_index:9
  0x886 | 20 02       | local_get local_index:2
  0x888 | 20 08       | local_get local_index:8
  0x88a | fb 02 0c 00 | struct_get struct_type_index:12 field_index:0
  0x88e | fb 16 0d    | ref_cast_non_null hty:Concrete(Module(13))
  0x891 | 10 09       | call function_index:9
  0x893 | 20 02       | local_get local_index:2
  0x895 | 20 09       | local_get local_index:9
  0x897 | fb 02 0c 00 | struct_get struct_type_index:12 field_index:0
  0x89b | fb 16 0d    | ref_cast_non_null hty:Concrete(Module(13))
  0x89e | 10 09       | call function_index:9
  0x8a0 | 20 02       | local_get local_index:2
  0x8a2 | 0b          | end
============== func 15 ====================
  0x8a3 | 0b          | size of function
  0x8a4 | 00          | 0 local blocks
  0x8a5 | 20 00       | local_get local_index:0
  0x8a7 | fb 16 0e    | ref_cast_non_null hty:Concrete(Module(14))
  0x8aa | fb 02 0e 03 | struct_get struct_type_index:14 field_index:3
  0x8ae | 0b          | end
============== func 16 ====================
  0x8af | 0d          | size of function
  0x8b0 | 00          | 0 local blocks
  0x8b1 | 20 00       | local_get local_index:0
  0x8b3 | fb 16 0e    | ref_cast_non_null hty:Concrete(Module(14))
  0x8b6 | 20 01       | local_get local_index:1
  0x8b8 | fb 05 0e 07 | struct_set struct_type_index:14 field_index:7
  0x8bc | 0b          | end
============== func 17 ====================
  0x8bd | 0b          | size of function
  0x8be | 00          | 0 local blocks
  0x8bf | 20 00       | local_get local_index:0
  0x8c1 | fb 16 0f    | ref_cast_non_null hty:Concrete(Module(15))
  0x8c4 | 20 01       | local_get local_index:1
  0x8c6 | 10 1d       | call function_index:29
  0x8c8 | 0b          | end
============== func 18 ====================
  0x8c9 | 09          | size of function
  0x8ca | 00          | 0 local blocks
  0x8cb | 20 00       | local_get local_index:0
  0x8cd | fb 16 0f    | ref_cast_non_null hty:Concrete(Module(15))
  0x8d0 | 10 1e       | call function_index:30
  0x8d2 | 0b          | end
============== func 19 ====================
  0x8d3 | 0b          | size of function
  0x8d4 | 00          | 0 local blocks
  0x8d5 | 20 00       | local_get local_index:0
  0x8d7 | fb 16 0f    | ref_cast_non_null hty:Concrete(Module(15))
  0x8da | fb 02 0f 07 | struct_get struct_type_index:15 field_index:7
  0x8de | 0b          | end
============== func 20 ====================
  0x8df | 0b          | size of function
  0x8e0 | 00          | 0 local blocks
  0x8e1 | 20 00       | local_get local_index:0
  0x8e3 | fb 16 0e    | ref_cast_non_null hty:Concrete(Module(14))
  0x8e6 | fb 02 0e 04 | struct_get struct_type_index:14 field_index:4
  0x8ea | 0b          | end
============== func 21 ====================
  0x8eb | 16          | size of function
  0x8ec | 00          | 0 local blocks
  0x8ed | 20 00       | local_get local_index:0
  0x8ef | fb 16 0f    | ref_cast_non_null hty:Concrete(Module(15))
  0x8f2 | fb 02 0f 06 | struct_get struct_type_index:15 field_index:6
  0x8f6 | fb 02 0e 04 | struct_get struct_type_index:14 field_index:4
  0x8fa | fb 16 71    | ref_cast_non_null hty:Abstract { shared: false, ty: None }
  0x8fd | 20 01       | local_get local_index:1
  0x8ff | 10 18       | call function_index:24
  0x901 | 0b          | end
============== func 22 ====================
  0x902 | 0b          | size of function
  0x903 | 00          | 0 local blocks
  0x904 | 20 00       | local_get local_index:0
  0x906 | fb 16 0f    | ref_cast_non_null hty:Concrete(Module(15))
  0x909 | fb 02 0f 06 | struct_get struct_type_index:15 field_index:6
  0x90d | 0b          | end
============== func 23 ====================
  0x90e | 25          | size of function
  0x90f | 01          | 1 local blocks
  0x910 | 01 7f       | 1 locals of type I32
  0x912 | 20 00       | local_get local_index:0
  0x914 | fb 16 6a    | ref_cast_non_null hty:Abstract { shared: false, ty: Array }
  0x917 | fb 0f       | array_len
  0x919 | 21 02       | local_set local_index:2
  0x91b | 20 01       | local_get local_index:1
  0x91d | 41 00       | i32_const value:0
  0x91f | 48          | i32_lt_s
  0x920 | 04 40       | if blockty:Empty
  0x922 | 41 00       | i32_const value:0
  0x924 | 0f          | return
  0x925 | 0b          | end
  0x926 | 20 01       | local_get local_index:1
  0x928 | 20 02       | local_get local_index:2
  0x92a | 4f          | i32_ge_u
  0x92b | 04 40       | if blockty:Empty
  0x92d | 41 00       | i32_const value:0
  0x92f | 0f          | return
  0x930 | 0b          | end
  0x931 | 41 01       | i32_const value:1
  0x933 | 0b          | end
============== func 24 ====================
  0x934 | 1b          | size of function
  0x935 | 00          | 0 local blocks
  0x936 | 20 00       | local_get local_index:0
  0x938 | fb 16 00    | ref_cast_non_null hty:Concrete(Module(0))
  0x93b | 20 01       | local_get local_index:1
  0x93d | 10 17       | call function_index:23
  0x93f | 45          | i32_eqz
  0x940 | 04 40       | if blockty:Empty
  0x942 | 41 7f       | i32_const value:-1
  0x944 | fb 1c       | ref_i31
  0x946 | 0f          | return
  0x947 | 0b          | end
  0x948 | 20 00       | local_get local_index:0
  0x94a | 20 01       | local_get local_index:1
  0x94c | fb 0b 00    | array_get array_type_index:0
  0x94f | 0b          | end
============== func 25 ====================
  0x950 | 16          | size of function
  0x951 | 00          | 0 local blocks
  0x952 | 20 00       | local_get local_index:0
  0x954 | 20 01       | local_get local_index:1
  0x956 | 10 17       | call function_index:23
  0x958 | 45          | i32_eqz
  0x959 | 04 40       | if blockty:Empty
  0x95b | 41 7f       | i32_const value:-1
  0x95d | 0f          | return
  0x95e | 0b          | end
  0x95f | 20 00       | local_get local_index:0
  0x961 | 20 01       | local_get local_index:1
  0x963 | fb 0c 01    | array_get_s array_type_index:1
  0x966 | 0b          | end
============== func 26 ====================
  0x967 | 09          | size of function
  0x968 | 00          | 0 local blocks
  0x969 | 20 00       | local_get local_index:0
  0x96b | fb 16 01    | ref_cast_non_null hty:Concrete(Module(1))
  0x96e | fb 0f       | array_len
  0x970 | 0b          | end
============== func 27 ====================
  0x971 | 40          | size of function
  0x972 | 01          | 1 local blocks
  0x973 | 02 7f       | 2 locals of type I32
  0x975 | 20 00       | local_get local_index:0
  0x977 | d1          | ref_is_null
  0x978 | 04 40       | if blockty:Empty
  0x97a | 41 00       | i32_const value:0
  0x97c | 0f          | return
  0x97d | 0b          | end
  0x97e | 20 00       | local_get local_index:0
  0x980 | d4          | ref_as_non_null
  0x981 | fb 0f       | array_len
  0x983 | 21 01       | local_set local_index:1
  0x985 | 41 00       | i32_const value:0
  0x987 | 21 02       | local_set local_index:2
  0x989 | 03 40       | loop blockty:Empty
  0x98b | 20 02       | local_get local_index:2
  0x98d | 20 01       | local_get local_index:1
  0x98f | 4f          | i32_ge_u
  0x990 | 04 40       | if blockty:Empty
  0x992 | 23 00       | global_get global_index:0
  0x994 | 0f          | return
  0x995 | 0b          | end
  0x996 | 23 00       | global_get global_index:0
  0x998 | 20 02       | local_get local_index:2
  0x99a | 6a          | i32_add
  0x99b | 20 00       | local_get local_index:0
  0x99d | d4          | ref_as_non_null
  0x99e | 20 02       | local_get local_index:2
  0x9a0 | fb 0d 01    | array_get_u array_type_index:1
  0x9a3 | 3a 00 00    | i32_store8 memarg:MemArg { align: 0, max_align: 0, offset: 0, memory: 0 }
  0x9a6 | 20 02       | local_get local_index:2
  0x9a8 | 41 01       | i32_const value:1
  0x9aa | 6a          | i32_add
  0x9ab | 21 02       | local_set local_index:2
  0x9ad | 0c 00       | br relative_depth:0
  0x9af | 0b          | end
  0x9b0 | 00          | unreachable
  0x9b1 | 0b          | end
============== func 28 ====================
  0x9b2 | 17          | size of function
  0x9b3 | 00          | 0 local blocks
  0x9b4 | 20 00       | local_get local_index:0
  0x9b6 | 20 00       | local_get local_index:0
  0x9b8 | fb 02 11 06 | struct_get struct_type_index:17 field_index:6
  0x9bc | 41 01       | i32_const value:1
  0x9be | 6a          | i32_add
  0x9bf | fb 05 11 06 | struct_set struct_type_index:17 field_index:6
  0x9c3 | 20 00       | local_get local_index:0
  0x9c5 | fb 02 11 06 | struct_get struct_type_index:17 field_index:6
  0x9c9 | 0b          | end
============== func 29 ====================
  0x9ca | 3e          | size of function
  0x9cb | 02          | 2 local blocks
  0x9cc | 01 64 04    | 1 locals of type Ref((ref (module 4)))
  0x9cf | 01 7f       | 1 locals of type I32
  0x9d1 | 20 00       | local_get local_index:0
  0x9d3 | fb 02 0f 0a | struct_get struct_type_index:15 field_index:10
  0x9d7 | 21 02       | local_set local_index:2
  0x9d9 | 20 00       | local_get local_index:0
  0x9db | fb 02 0f 05 | struct_get struct_type_index:15 field_index:5
  0x9df | 21 03       | local_set local_index:3
  0x9e1 | 20 03       | local_get local_index:3
  0x9e3 | 20 02       | local_get local_index:2
  0x9e5 | fb 02 04 03 | struct_get struct_type_index:4 field_index:3
  0x9e9 | fb 0f       | array_len
  0x9eb | 4f          | i32_ge_u
  0x9ec | 04 40       | if blockty:Empty
  0x9ee | 0f          | return
  0x9ef | 0b          | end
  0x9f0 | 20 02       | local_get local_index:2
  0x9f2 | fb 02 04 03 | struct_get struct_type_index:4 field_index:3
  0x9f6 | 20 03       | local_get local_index:3
  0x9f8 | 20 01       | local_get local_index:1
  0x9fa | fb 0e 00    | array_set array_type_index:0
  0x9fd | 20 00       | local_get local_index:0
  0x9ff | 20 03       | local_get local_index:3
  0xa01 | 41 01       | i32_const value:1
  0xa03 | 6a          | i32_add
  0xa04 | fb 05 0f 05 | struct_set struct_type_index:15 field_index:5
  0xa08 | 0b          | end
============== func 30 ====================
  0xa09 | 3c          | size of function
  0xa0a | 02          | 2 local blocks
  0xa0b | 01 64 04    | 1 locals of type Ref((ref (module 4)))
  0xa0e | 01 7f       | 1 locals of type I32
  0xa10 | 20 00       | local_get local_index:0
  0xa12 | fb 02 0f 0a | struct_get struct_type_index:15 field_index:10
  0xa16 | 21 01       | local_set local_index:1
  0xa18 | 20 00       | local_get local_index:0
  0xa1a | fb 02 0f 05 | struct_get struct_type_index:15 field_index:5
  0xa1e | 21 02       | local_set local_index:2
  0xa20 | 20 02       | local_get local_index:2
  0xa22 | 41 00       | i32_const value:0
  0xa24 | 4d          | i32_le_u
  0xa25 | 04 40       | if blockty:Empty
  0xa27 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0xa29 | 0f          | return
  0xa2a | 0b          | end
  0xa2b | 20 00       | local_get local_index:0
  0xa2d | 20 02       | local_get local_index:2
  0xa2f | 41 01       | i32_const value:1
  0xa31 | 6b          | i32_sub
  0xa32 | fb 05 0f 05 | struct_set struct_type_index:15 field_index:5
  0xa36 | 20 01       | local_get local_index:1
  0xa38 | fb 02 04 03 | struct_get struct_type_index:4 field_index:3
  0xa3c | 20 02       | local_get local_index:2
  0xa3e | 41 01       | i32_const value:1
  0xa40 | 6b          | i32_sub
  0xa41 | fb 0b 00    | array_get array_type_index:0
  0xa44 | 0f          | return
  0xa45 | 0b          | end
============== func 31 ====================
  0xa46 | 31          | size of function
  0xa47 | 02          | 2 local blocks
  0xa48 | 01 64 04    | 1 locals of type Ref((ref (module 4)))
  0xa4b | 01 7f       | 1 locals of type I32
  0xa4d | 20 00       | local_get local_index:0
  0xa4f | fb 02 0f 0a | struct_get struct_type_index:15 field_index:10
  0xa53 | 21 01       | local_set local_index:1
  0xa55 | 20 00       | local_get local_index:0
  0xa57 | fb 02 0f 05 | struct_get struct_type_index:15 field_index:5
  0xa5b | 21 02       | local_set local_index:2
  0xa5d | 20 02       | local_get local_index:2
  0xa5f | 41 00       | i32_const value:0
  0xa61 | 4d          | i32_le_u
  0xa62 | 04 40       | if blockty:Empty
  0xa64 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0xa66 | 0f          | return
  0xa67 | 0b          | end
  0xa68 | 20 01       | local_get local_index:1
  0xa6a | fb 02 04 03 | struct_get struct_type_index:4 field_index:3
  0xa6e | 20 02       | local_get local_index:2
  0xa70 | 41 01       | i32_const value:1
  0xa72 | 6b          | i32_sub
  0xa73 | fb 0b 00    | array_get array_type_index:0
  0xa76 | 0f          | return
  0xa77 | 0b          | end
============== func 32 ====================
  0xa78 | 1a          | size of function
  0xa79 | 00          | 0 local blocks
  0xa7a | 20 01       | local_get local_index:1
  0xa7c | fb 14 6c    | ref_test_non_null hty:Abstract { shared: false, ty: I31 }
  0xa7f | 04 6d       | if blockty:Type(Ref(eqref))
  0xa81 | 20 00       | local_get local_index:0
  0xa83 | fb 02 11 09 | struct_get struct_type_index:17 field_index:9
  0xa87 | 05          | else
  0xa88 | 20 01       | local_get local_index:1
  0xa8a | fb 16 03    | ref_cast_non_null hty:Concrete(Module(3))
  0xa8d | fb 02 03 00 | struct_get struct_type_index:3 field_index:0
  0xa91 | 0b          | end
  0xa92 | 0b          | end
============== func 33 ====================
  0xa93 | 95 01       | size of function
  0xa95 | 05          | 5 local blocks
  0xa96 | 02 6d       | 2 locals of type Ref(eqref)
  0xa98 | 01 64 09    | 1 locals of type Ref((ref (module 9)))
  0xa9b | 02 64 04    | 2 locals of type Ref((ref (module 4)))
  0xa9e | 02 7f       | 2 locals of type I32
  0xaa0 | 01 6d       | 1 locals of type Ref(eqref)
  0xaa2 | 20 00       | local_get local_index:0
  0xaa4 | 20 01       | local_get local_index:1
  0xaa6 | 10 20       | call function_index:32
  0xaa8 | fb 17 0c    | ref_cast_nullable hty:Concrete(Module(12))
  0xaab | 21 04       | local_set local_index:4
  0xaad | 03 40       | loop blockty:Empty
  0xaaf | 20 04       | local_get local_index:4
  0xab1 | d1          | ref_is_null
  0xab2 | 04 40       | if blockty:Empty
  0xab4 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0xab6 | 0f          | return
  0xab7 | 0b          | end
  0xab8 | 20 04       | local_get local_index:4
  0xaba | fb 16 0c    | ref_cast_non_null hty:Concrete(Module(12))
  0xabd | fb 02 0c 04 | struct_get struct_type_index:12 field_index:4
  0xac1 | 21 05       | local_set local_index:5
  0xac3 | 20 05       | local_get local_index:5
  0xac5 | d4          | ref_as_non_null
  0xac6 | fb 02 09 03 | struct_get struct_type_index:9 field_index:3
  0xaca | 21 06       | local_set local_index:6
  0xacc | 20 05       | local_get local_index:5
  0xace | d4          | ref_as_non_null
  0xacf | fb 02 09 04 | struct_get struct_type_index:9 field_index:4
  0xad3 | 21 07       | local_set local_index:7
  0xad5 | 20 05       | local_get local_index:5
  0xad7 | d4          | ref_as_non_null
  0xad8 | fb 02 09 05 | struct_get struct_type_index:9 field_index:5
  0xadc | 21 08       | local_set local_index:8
  0xade | 41 00       | i32_const value:0
  0xae0 | 21 09       | local_set local_index:9
  0xae2 | 03 40       | loop blockty:Empty
  0xae4 | 20 09       | local_get local_index:9
  0xae6 | 20 08       | local_get local_index:8
  0xae8 | 4f          | i32_ge_u
  0xae9 | 04 40       | if blockty:Empty
  0xaeb | 20 04       | local_get local_index:4
  0xaed | fb 16 0c    | ref_cast_non_null hty:Concrete(Module(12))
  0xaf0 | fb 02 0c 03 | struct_get struct_type_index:12 field_index:3
  0xaf4 | 21 04       | local_set local_index:4
  0xaf6 | 0c 02       | br relative_depth:2
  0xaf8 | 0b          | end
  0xaf9 | 20 06       | local_get local_index:6
  0xafb | fb 02 04 03 | struct_get struct_type_index:4 field_index:3
  0xaff | 20 09       | local_get local_index:9
  0xb01 | fb 0b 00    | array_get array_type_index:0
  0xb04 | 21 0a       | local_set local_index:10
  0xb06 | 20 0a       | local_get local_index:10
  0xb08 | 20 02       | local_get local_index:2
  0xb0a | d3          | ref_eq
  0xb0b | 04 40       | if blockty:Empty
  0xb0d | 20 07       | local_get local_index:7
  0xb0f | fb 02 04 03 | struct_get struct_type_index:4 field_index:3
  0xb13 | 20 09       | local_get local_index:9
  0xb15 | fb 0b 00    | array_get array_type_index:0
  0xb18 | fb 16 0e    | ref_cast_non_null hty:Concrete(Module(14))
  0xb1b | 0f          | return
  0xb1c | 0b          | end
  0xb1d | 20 09       | local_get local_index:9
  0xb1f | 41 01       | i32_const value:1
  0xb21 | 6a          | i32_add
  0xb22 | 21 09       | local_set local_index:9
  0xb24 | 0c 00       | br relative_depth:0
  0xb26 | 0b          | end
  0xb27 | 0b          | end
  0xb28 | 00          | unreachable
  0xb29 | 0b          | end
============== func 34 ====================
  0xb2a | a4 01       | size of function
  0xb2c | 04          | 4 local blocks
  0xb2d | 01 63 00    | 1 locals of type Ref((ref null (module 0)))
  0xb30 | 03 7f       | 3 locals of type I32
  0xb32 | 01 63 10    | 1 locals of type Ref((ref null (module 16)))
  0xb35 | 01 7f       | 1 locals of type I32
  0xb37 | 20 00       | local_get local_index:0
  0xb39 | fb 02 11 02 | struct_get struct_type_index:17 field_index:2
  0xb3d | 22 03       | local_tee local_index:3
  0xb3f | d1          | ref_is_null
  0xb40 | 04 40       | if blockty:Empty
  0xb42 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0xb44 | 0f          | return
  0xb45 | 0b          | end
  0xb46 | 20 01       | local_get local_index:1
  0xb48 | fb 16 03    | ref_cast_non_null hty:Concrete(Module(3))
  0xb4b | fb 02 03 01 | struct_get struct_type_index:3 field_index:1
  0xb4f | 20 02       | local_get local_index:2
  0xb51 | d4          | ref_as_non_null
  0xb52 | fb 02 0c 01 | struct_get struct_type_index:12 field_index:1
  0xb56 | 6a          | i32_add
  0xb57 | 20 00       | local_get local_index:0
  0xb59 | fb 02 11 05 | struct_get struct_type_index:17 field_index:5
  0xb5d | 70          | i32_rem_u
  0xb5e | 21 06       | local_set local_index:6
  0xb60 | 41 08       | i32_const value:8
  0xb62 | 21 08       | local_set local_index:8
  0xb64 | 03 40       | loop blockty:Empty
  0xb66 | 20 08       | local_get local_index:8
  0xb68 | 41 00       | i32_const value:0
  0xb6a | 4c          | i32_le_s
  0xb6b | 04 40       | if blockty:Empty
  0xb6d | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0xb6f | 0f          | return
  0xb70 | 0b          | end
  0xb71 | 20 03       | local_get local_index:3
  0xb73 | d4          | ref_as_non_null
  0xb74 | 20 06       | local_get local_index:6
  0xb76 | fb 0b 00    | array_get array_type_index:0
  0xb79 | fb 17 10    | ref_cast_nullable hty:Concrete(Module(16))
  0xb7c | 22 07       | local_tee local_index:7
  0xb7e | d1          | ref_is_null
  0xb7f | 04 40       | if blockty:Empty
  0xb81 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0xb83 | 0f          | return
  0xb84 | 0b          | end
  0xb85 | 20 07       | local_get local_index:7
  0xb87 | fb 16 10    | ref_cast_non_null hty:Concrete(Module(16))
  0xb8a | 22 07       | local_tee local_index:7
  0xb8c | fb 02 10 00 | struct_get struct_type_index:16 field_index:0
  0xb90 | 20 01       | local_get local_index:1
  0xb92 | d3          | ref_eq
  0xb93 | 20 07       | local_get local_index:7
  0xb95 | fb 02 10 01 | struct_get struct_type_index:16 field_index:1
  0xb99 | 20 02       | local_get local_index:2
  0xb9b | d3          | ref_eq
  0xb9c | 71          | i32_and
  0xb9d | 04 40       | if blockty:Empty
  0xb9f | 20 07       | local_get local_index:7
  0xba1 | 20 07       | local_get local_index:7
  0xba3 | fb 02 10 03 | struct_get struct_type_index:16 field_index:3
  0xba7 | 41 01       | i32_const value:1
  0xba9 | 6a          | i32_add
  0xbaa | fb 05 10 03 | struct_set struct_type_index:16 field_index:3
  0xbae | 20 07       | local_get local_index:7
  0xbb0 | fb 02 10 02 | struct_get struct_type_index:16 field_index:2
  0xbb4 | 0f          | return
  0xbb5 | 0b          | end
  0xbb6 | 20 06       | local_get local_index:6
  0xbb8 | 41 01       | i32_const value:1
  0xbba | 6a          | i32_add
  0xbbb | 20 00       | local_get local_index:0
  0xbbd | fb 02 11 05 | struct_get struct_type_index:17 field_index:5
  0xbc1 | 70          | i32_rem_u
  0xbc2 | 21 06       | local_set local_index:6
  0xbc4 | 20 08       | local_get local_index:8
  0xbc6 | 41 01       | i32_const value:1
  0xbc8 | 6b          | i32_sub
  0xbc9 | 21 08       | local_set local_index:8
  0xbcb | 0c 00       | br relative_depth:0
  0xbcd | 0b          | end
  0xbce | 00          | unreachable
  0xbcf | 0b          | end
============== func 35 ====================
  0xbd0 | 45          | size of function
  0xbd1 | 03          | 3 local blocks
  0xbd2 | 01 64 00    | 1 locals of type Ref((ref (module 0)))
  0xbd5 | 01 7f       | 1 locals of type I32
  0xbd7 | 01 64 10    | 1 locals of type Ref((ref (module 16)))
  0xbda | 20 00       | local_get local_index:0
  0xbdc | fb 02 11 02 | struct_get struct_type_index:17 field_index:2
  0xbe0 | 21 04       | local_set local_index:4
  0xbe2 | 20 01       | local_get local_index:1
  0xbe4 | fb 16 08    | ref_cast_non_null hty:Concrete(Module(8))
  0xbe7 | fb 02 08 01 | struct_get struct_type_index:8 field_index:1
  0xbeb | 20 02       | local_get local_index:2
  0xbed | fb 16 0b    | ref_cast_non_null hty:Concrete(Module(11))
  0xbf0 | fb 02 0b 01 | struct_get struct_type_index:11 field_index:1
  0xbf4 | 6a          | i32_add
  0xbf5 | 20 00       | local_get local_index:0
  0xbf7 | fb 02 11 05 | struct_get struct_type_index:17 field_index:5
  0xbfb | 70          | i32_rem_u
  0xbfc | 21 05       | local_set local_index:5
  0xbfe | 20 01       | local_get local_index:1
  0xc00 | 20 02       | local_get local_index:2
  0xc02 | 20 03       | local_get local_index:3
  0xc04 | 41 01       | i32_const value:1
  0xc06 | fb 00 10    | struct_new struct_type_index:16
  0xc09 | 21 06       | local_set local_index:6
  0xc0b | 20 04       | local_get local_index:4
  0xc0d | d4          | ref_as_non_null
  0xc0e | 20 05       | local_get local_index:5
  0xc10 | 20 06       | local_get local_index:6
  0xc12 | fb 0e 00    | array_set array_type_index:0
  0xc15 | 0b          | end
============== func 36 ====================
  0xc16 | 40          | size of function
  0xc17 | 00          | 0 local blocks
  0xc18 | 20 00       | local_get local_index:0
  0xc1a | fb 02 11 0b | struct_get struct_type_index:17 field_index:11
  0xc1e | 20 00       | local_get local_index:0
  0xc20 | 10 1c       | call function_index:28
  0xc22 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0xc24 | 20 00       | local_get local_index:0
  0xc26 | fb 02 11 00 | struct_get struct_type_index:17 field_index:0
  0xc2a | 41 00       | i32_const value:0
  0xc2c | 41 00       | i32_const value:0
  0xc2e | 20 02       | local_get local_index:2
  0xc30 | 20 01       | local_get local_index:1
  0xc32 | 20 00       | local_get local_index:0
  0xc34 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0xc36 | 41 00       | i32_const value:0
  0xc38 | fb 06 00    | array_new array_type_index:0
  0xc3b | 10 03       | call function_index:3
  0xc3d | 20 00       | local_get local_index:0
  0xc3f | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0xc41 | 41 00       | i32_const value:0
  0xc43 | fb 06 00    | array_new array_type_index:0
  0xc46 | 10 03       | call function_index:3
  0xc48 | 20 00       | local_get local_index:0
  0xc4a | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0xc4c | 41 14       | i32_const value:20
  0xc4e | fb 06 00    | array_new array_type_index:0
  0xc51 | 10 03       | call function_index:3
  0xc53 | fb 00 0f    | struct_new struct_type_index:15
  0xc56 | 0b          | end
============== func 37 ====================
  0xc57 | 06          | size of function
  0xc58 | 00          | 0 local blocks
  0xc59 | 20 00       | local_get local_index:0
  0xc5b | fb 1c       | ref_i31
  0xc5d | 0b          | end
============== func 38 ====================
  0xc5e | 14          | size of function
  0xc5f | 00          | 0 local blocks
  0xc60 | 20 00       | local_get local_index:0
  0xc62 | fb 14 6c    | ref_test_non_null hty:Abstract { shared: false, ty: I31 }
  0xc65 | 04 7f       | if blockty:Type(I32)
  0xc67 | 20 00       | local_get local_index:0
  0xc69 | fb 16 6c    | ref_cast_non_null hty:Abstract { shared: false, ty: I31 }
  0xc6c | fb 1d       | i31_get_s
  0xc6e | 05          | else
  0xc6f | 41 00       | i32_const value:0
  0xc71 | 0b          | end
  0xc72 | 0b          | end
============== func 39 ====================
  0xc73 | 0b          | size of function
  0xc74 | 00          | 0 local blocks
  0xc75 | 20 00       | local_get local_index:0
  0xc77 | fb 02 0e 07 | struct_get struct_type_index:14 field_index:7
  0xc7b | 41 00       | i32_const value:0
  0xc7d | 4b          | i32_gt_u
  0xc7e | 0b          | end
============== func 40 ====================
  0xc7f | 09          | size of function
  0xc80 | 00          | 0 local blocks
  0xc81 | 20 00       | local_get local_index:0
  0xc83 | 20 01       | local_get local_index:1
  0xc85 | 11 29 00    | call_indirect type_index:41 table_index:0
  0xc88 | 0b          | end
============== func 41 ====================
  0xc89 | 1d          | size of function
  0xc8a | 02          | 2 local blocks
  0xc8b | 01 6d       | 1 locals of type Ref(eqref)
  0xc8d | 03 7f       | 3 locals of type I32
  0xc8f | 20 00       | local_get local_index:0
  0xc91 | fb 02 0e 03 | struct_get struct_type_index:14 field_index:3
  0xc95 | 21 02       | local_set local_index:2
  0xc97 | 20 02       | local_get local_index:2
  0xc99 | fb 16 01    | ref_cast_non_null hty:Concrete(Module(1))
  0xc9c | fb 0f       | array_len
  0xc9e | 21 03       | local_set local_index:3
  0xca0 | 20 00       | local_get local_index:0
  0xca2 | 20 01       | local_get local_index:1
  0xca4 | 10 01       | call function_index:1
  0xca6 | 0b          | end
============== func 42 ====================
  0xca7 | 3c          | size of function
  0xca8 | 02          | 2 local blocks
  0xca9 | 01 63 0f    | 1 locals of type Ref((ref null (module 15)))
  0xcac | 01 6d       | 1 locals of type Ref(eqref)
  0xcae | 20 01       | local_get local_index:1
  0xcb0 | 10 1f       | call function_index:31
  0xcb2 | 21 03       | local_set local_index:3
  0xcb4 | 20 01       | local_get local_index:1
  0xcb6 | fb 02 0f 03 | struct_get struct_type_index:15 field_index:3
  0xcba | 22 02       | local_tee local_index:2
  0xcbc | d1          | ref_is_null
  0xcbd | 45          | i32_eqz
  0xcbe | 04 40       | if blockty:Empty
  0xcc0 | 20 02       | local_get local_index:2
  0xcc2 | d4          | ref_as_non_null
  0xcc3 | 20 03       | local_get local_index:3
  0xcc5 | 10 1d       | call function_index:29
  0xcc7 | 20 02       | local_get local_index:2
  0xcc9 | d4          | ref_as_non_null
  0xcca | 20 02       | local_get local_index:2
  0xccc | d4          | ref_as_non_null
  0xccd | fb 02 0f 04 | struct_get struct_type_index:15 field_index:4
  0xcd1 | 41 01       | i32_const value:1
  0xcd3 | 6a          | i32_add
  0xcd4 | fb 05 0f 04 | struct_set struct_type_index:15 field_index:4
  0xcd8 | 0b          | end
  0xcd9 | 20 00       | local_get local_index:0
  0xcdb | 20 02       | local_get local_index:2
  0xcdd | fb 05 11 00 | struct_set struct_type_index:17 field_index:0
  0xce1 | 20 03       | local_get local_index:3
  0xce3 | 0b          | end
============== func 43 ====================
  0xce4 | c0 03       | size of function
  0xce6 | 05          | 5 local blocks
  0xce7 | 01 64 0e    | 1 locals of type Ref((ref (module 14)))
  0xcea | 01 64 08    | 1 locals of type Ref((ref (module 8)))
  0xced | 01 64 09    | 1 locals of type Ref((ref (module 9)))
  0xcf0 | 01 64 04    | 1 locals of type Ref((ref (module 4)))
  0xcf3 | 01 64 00    | 1 locals of type Ref((ref (module 0)))
  0xcf6 | 20 00       | local_get local_index:0
  0xcf8 | 41 e2 00    | i32_const value:98
  0xcfb | 41 e5 00    | i32_const value:101
  0xcfe | 41 ee 00    | i32_const value:110
  0xd01 | 41 e3 00    | i32_const value:99
  0xd04 | 41 e8 00    | i32_const value:104
  0xd07 | 41 ed 00    | i32_const value:109
  0xd0a | 41 e1 00    | i32_const value:97
  0xd0d | 41 f2 00    | i32_const value:114
  0xd10 | 41 eb 00    | i32_const value:107
  0xd13 | fb 08 01 08 | array_new_fixed array_type_index:1 array_size:8
  0xd17 | 10 0d       | call function_index:13
  0xd19 | 21 02       | local_set local_index:2
  0xd1b | 20 00       | local_get local_index:0
  0xd1d | 20 00       | local_get local_index:0
  0xd1f | 41 e4 00    | i32_const value:100
  0xd22 | fb 1c       | ref_i31
  0xd24 | 20 00       | local_get local_index:0
  0xd26 | fb 02 11 0a | struct_get struct_type_index:17 field_index:10
  0xd2a | 20 00       | local_get local_index:0
  0xd2c | 10 1c       | call function_index:28
  0xd2e | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0xd30 | 20 00       | local_get local_index:0
  0xd32 | 41 f0 00    | i32_const value:112
  0xd35 | 41 d0 01    | i32_const value:208
  0xd38 | 41 fc 00    | i32_const value:124
  0xd3b | fb 08 01 03 | array_new_fixed array_type_index:1 array_size:3
  0xd3f | 10 04       | call function_index:4
  0xd41 | 20 00       | local_get local_index:0
  0xd43 | 20 02       | local_get local_index:2
  0xd45 | fb 08 00 01 | array_new_fixed array_type_index:0 array_size:1
  0xd49 | 10 03       | call function_index:3
  0xd4b | 41 00       | i32_const value:0
  0xd4d | 41 00       | i32_const value:0
  0xd4f | 41 00       | i32_const value:0
  0xd51 | 20 00       | local_get local_index:0
  0xd53 | fb 02 11 04 | struct_get struct_type_index:17 field_index:4
  0xd57 | 41 00       | i32_const value:0
  0xd59 | fb 00 0e    | struct_new struct_type_index:14
  0xd5c | 20 02       | local_get local_index:2
  0xd5e | 10 24       | call function_index:36
  0xd60 | fb 05 11 00 | struct_set struct_type_index:17 field_index:0
  0xd64 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0xd66 | 41 04       | i32_const value:4
  0xd68 | fb 06 00    | array_new array_type_index:0
  0xd6b | 21 05       | local_set local_index:5
  0xd6d | 20 05       | local_get local_index:5
  0xd6f | 41 00       | i32_const value:0
  0xd71 | 41 00       | i32_const value:0
  0xd73 | 10 25       | call function_index:37
  0xd75 | d4          | ref_as_non_null
  0xd76 | fb 0e 00    | array_set array_type_index:0
  0xd79 | 20 05       | local_get local_index:5
  0xd7b | 41 01       | i32_const value:1
  0xd7d | 41 01       | i32_const value:1
  0xd7f | 10 25       | call function_index:37
  0xd81 | fb 0e 00    | array_set array_type_index:0
  0xd84 | 20 05       | local_get local_index:5
  0xd86 | 41 02       | i32_const value:2
  0xd88 | 41 02       | i32_const value:2
  0xd8a | 10 25       | call function_index:37
  0xd8c | fb 0e 00    | array_set array_type_index:0
  0xd8f | 20 05       | local_get local_index:5
  0xd91 | 41 03       | i32_const value:3
  0xd93 | 41 03       | i32_const value:3
  0xd95 | 10 25       | call function_index:37
  0xd97 | fb 0e 00    | array_set array_type_index:0
  0xd9a | 20 00       | local_get local_index:0
  0xd9c | fb 02 11 0a | struct_get struct_type_index:17 field_index:10
  0xda0 | 20 00       | local_get local_index:0
  0xda2 | 10 1c       | call function_index:28
  0xda4 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0xda6 | 41 f0 00    | i32_const value:112
  0xda9 | 41 21       | i32_const value:33
  0xdab | 41 b0 01    | i32_const value:176
  0xdae | 41 22       | i32_const value:34
  0xdb0 | 41 b8 01    | i32_const value:184
  0xdb3 | 41 22       | i32_const value:34
  0xdb5 | 41 b0 01    | i32_const value:176
  0xdb8 | 41 23       | i32_const value:35
  0xdba | 41 b8 01    | i32_const value:184
  0xdbd | 41 23       | i32_const value:35
  0xdbf | 41 b0 01    | i32_const value:176
  0xdc2 | 41 22       | i32_const value:34
  0xdc4 | 41 b8 01    | i32_const value:184
  0xdc7 | 41 21       | i32_const value:33
  0xdc9 | 41 b0 01    | i32_const value:176
  0xdcc | 41 22       | i32_const value:34
  0xdce | 41 b8 01    | i32_const value:184
  0xdd1 | 41 22       | i32_const value:34
  0xdd3 | 41 b0 01    | i32_const value:176
  0xdd6 | 41 23       | i32_const value:35
  0xdd8 | 41 b8 01    | i32_const value:184
  0xddb | 41 23       | i32_const value:35
  0xddd | 41 b0 01    | i32_const value:176
  0xde0 | 41 22       | i32_const value:34
  0xde2 | 41 b8 01    | i32_const value:184
  0xde5 | 41 21       | i32_const value:33
  0xde7 | 41 b0 01    | i32_const value:176
  0xdea | 41 22       | i32_const value:34
  0xdec | 41 b8 01    | i32_const value:184
  0xdef | 41 22       | i32_const value:34
  0xdf1 | 41 b0 01    | i32_const value:176
  0xdf4 | 41 23       | i32_const value:35
  0xdf6 | 41 b8 01    | i32_const value:184
  0xdf9 | 41 23       | i32_const value:35
  0xdfb | 41 b0 01    | i32_const value:176
  0xdfe | 41 22       | i32_const value:34
  0xe00 | 41 b8 01    | i32_const value:184
  0xe03 | 41 21       | i32_const value:33
  0xe05 | 41 b0 01    | i32_const value:176
  0xe08 | 41 22       | i32_const value:34
  0xe0a | 41 b8 01    | i32_const value:184
  0xe0d | 41 22       | i32_const value:34
  0xe0f | 41 b0 01    | i32_const value:176
  0xe12 | 41 23       | i32_const value:35
  0xe14 | 41 b8 01    | i32_const value:184
  0xe17 | 41 23       | i32_const value:35
  0xe19 | 41 b0 01    | i32_const value:176
  0xe1c | 41 22       | i32_const value:34
  0xe1e | 41 b8 01    | i32_const value:184
  0xe21 | 41 21       | i32_const value:33
  0xe23 | 41 b0 01    | i32_const value:176
  0xe26 | 41 22       | i32_const value:34
  0xe28 | 41 b8 01    | i32_const value:184
  0xe2b | 41 22       | i32_const value:34
  0xe2d | 41 b0 01    | i32_const value:176
  0xe30 | 41 23       | i32_const value:35
  0xe32 | 41 b8 01    | i32_const value:184
  0xe35 | 41 23       | i32_const value:35
  0xe37 | 41 b0 01    | i32_const value:176
  0xe3a | 41 22       | i32_const value:34
  0xe3c | 41 b8 01    | i32_const value:184
  0xe3f | 41 fc 00    | i32_const value:124
  0xe42 | fb 08 01 3e | array_new_fixed array_type_index:1 array_size:62
  0xe46 | 20 00       | local_get local_index:0
  0xe48 | 20 05       | local_get local_index:5
  0xe4a | 10 03       | call function_index:3
  0xe4c | 41 00       | i32_const value:0
  0xe4e | 41 00       | i32_const value:0
  0xe50 | 41 00       | i32_const value:0
  0xe52 | 20 00       | local_get local_index:0
  0xe54 | fb 02 11 04 | struct_get struct_type_index:17 field_index:4
  0xe58 | 41 00       | i32_const value:0
  0xe5a | fb 00 0e    | struct_new struct_type_index:14
  0xe5d | 21 01       | local_set local_index:1
  0xe5f | 20 00       | local_get local_index:0
  0xe61 | 10 06       | call function_index:6
  0xe63 | 21 03       | local_set local_index:3
  0xe65 | 20 00       | local_get local_index:0
  0xe67 | fb 02 11 09 | struct_get struct_type_index:17 field_index:9
  0xe6b | 20 03       | local_get local_index:3
  0xe6d | fb 05 0c 04 | struct_set struct_type_index:12 field_index:4
  0xe71 | 20 03       | local_get local_index:3
  0xe73 | fb 02 09 03 | struct_get struct_type_index:9 field_index:3
  0xe77 | fb 02 04 03 | struct_get struct_type_index:4 field_index:3
  0xe7b | 41 00       | i32_const value:0
  0xe7d | 20 02       | local_get local_index:2
  0xe7f | fb 0e 00    | array_set array_type_index:0
  0xe82 | 20 03       | local_get local_index:3
  0xe84 | fb 02 09 04 | struct_get struct_type_index:9 field_index:4
  0xe88 | fb 02 04 03 | struct_get struct_type_index:4 field_index:3
  0xe8c | 41 00       | i32_const value:0
  0xe8e | 20 01       | local_get local_index:1
  0xe90 | fb 0e 00    | array_set array_type_index:0
  0xe93 | 20 03       | local_get local_index:3
  0xe95 | 41 01       | i32_const value:1
  0xe97 | fb 05 09 05 | struct_set struct_type_index:9 field_index:5
  0xe9b | 20 01       | local_get local_index:1
  0xe9d | 41 01       | i32_const value:1
  0xe9f | fb 05 0e 09 | struct_set struct_type_index:14 field_index:9
  0xea3 | 41 01       | i32_const value:1
  0xea5 | 0b          | end
============== func 44 ====================
  0xea6 | 9a 02       | size of function
  0xea8 | 08          | 8 local blocks
  0xea9 | 03 6d       | 3 locals of type Ref(eqref)
  0xeab | 03 7f       | 3 locals of type I32
  0xead | 01 64 0f    | 1 locals of type Ref((ref (module 15)))
  0xeb0 | 01 64 08    | 1 locals of type Ref((ref (module 8)))
  0xeb3 | 01 63 0e    | 1 locals of type Ref((ref null (module 14)))
  0xeb6 | 01 64 0c    | 1 locals of type Ref((ref (module 12)))
  0xeb9 | 01 7f       | 1 locals of type I32
  0xebb | 01 64 00    | 1 locals of type Ref((ref (module 0)))
  0xebe | 20 01       | local_get local_index:1
  0xec0 | fb 02 0f 07 | struct_get struct_type_index:15 field_index:7
  0xec4 | 21 03       | local_set local_index:3
  0xec6 | 20 01       | local_get local_index:1
  0xec8 | fb 02 0f 06 | struct_get struct_type_index:15 field_index:6
  0xecc | fb 02 0e 04 | struct_get struct_type_index:14 field_index:4
  0xed0 | fb 02 04 03 | struct_get struct_type_index:4 field_index:3
  0xed4 | 21 0e       | local_set local_index:14
  0xed6 | 20 02       | local_get local_index:2
  0xed8 | 41 20       | i32_const value:32
  0xeda | 4f          | i32_ge_u
  0xedb | 20 02       | local_get local_index:2
  0xedd | 41 2f       | i32_const value:47
  0xedf | 4d          | i32_le_u
  0xee0 | 71          | i32_and
  0xee1 | 04 40       | if blockty:Empty
  0xee3 | 20 02       | local_get local_index:2
  0xee5 | 41 20       | i32_const value:32
  0xee7 | 6b          | i32_sub
  0xee8 | 21 0d       | local_set local_index:13
  0xeea | 20 01       | local_get local_index:1
  0xeec | 20 0e       | local_get local_index:14
  0xeee | 20 0d       | local_get local_index:13
  0xef0 | fb 0b 00    | array_get array_type_index:0
  0xef3 | 10 1d       | call function_index:29
  0xef5 | 41 00       | i32_const value:0
  0xef7 | 0f          | return
  0xef8 | 0b          | end
  0xef9 | 20 02       | local_get local_index:2
  0xefb | 41 f0 00    | i32_const value:112
  0xefe | 46          | i32_eq
  0xeff | 04 40       | if blockty:Empty
  0xf01 | 20 01       | local_get local_index:1
  0xf03 | 20 03       | local_get local_index:3
  0xf05 | 10 1d       | call function_index:29
  0xf07 | 41 00       | i32_const value:0
  0xf09 | 0f          | return
  0xf0a | 0b          | end
  0xf0b | 20 02       | local_get local_index:2
  0xf0d | 41 b8 01    | i32_const value:184
  0xf10 | 46          | i32_eq
  0xf11 | 04 40       | if blockty:Empty
  0xf13 | 20 01       | local_get local_index:1
  0xf15 | 20 01       | local_get local_index:1
  0xf17 | 10 1e       | call function_index:30
  0xf19 | 10 26       | call function_index:38
  0xf1b | 20 01       | local_get local_index:1
  0xf1d | 10 1e       | call function_index:30
  0xf1f | 10 26       | call function_index:38
  0xf21 | 6c          | i32_mul
  0xf22 | 10 25       | call function_index:37
  0xf24 | d4          | ref_as_non_null
  0xf25 | 10 1d       | call function_index:29
  0xf27 | 41 00       | i32_const value:0
  0xf29 | 0f          | return
  0xf2a | 0b          | end
  0xf2b | 20 02       | local_get local_index:2
  0xf2d | 41 b0 01    | i32_const value:176
  0xf30 | 46          | i32_eq
  0xf31 | 04 40       | if blockty:Empty
  0xf33 | 20 01       | local_get local_index:1
  0xf35 | 20 01       | local_get local_index:1
  0xf37 | 10 1e       | call function_index:30
  0xf39 | 10 26       | call function_index:38
  0xf3b | 20 01       | local_get local_index:1
  0xf3d | 10 1e       | call function_index:30
  0xf3f | 10 26       | call function_index:38
  0xf41 | 6a          | i32_add
  0xf42 | 10 25       | call function_index:37
  0xf44 | 10 1d       | call function_index:29
  0xf46 | 41 00       | i32_const value:0
  0xf48 | 0f          | return
  0xf49 | 0b          | end
  0xf4a | 20 02       | local_get local_index:2
  0xf4c | 41 fc 00    | i32_const value:124
  0xf4f | 46          | i32_eq
  0xf50 | 04 40       | if blockty:Empty
  0xf52 | 41 01       | i32_const value:1
  0xf54 | 0f          | return
  0xf55 | 0b          | end
  0xf56 | 20 02       | local_get local_index:2
  0xf58 | 41 d0 01    | i32_const value:208
  0xf5b | 46          | i32_eq
  0xf5c | 04 40       | if blockty:Empty
  0xf5e | 20 01       | local_get local_index:1
  0xf60 | 10 1e       | call function_index:30
  0xf62 | 21 03       | local_set local_index:3
  0xf64 | 20 02       | local_get local_index:2
  0xf66 | 41 0f       | i32_const value:15
  0xf68 | 71          | i32_and
  0xf69 | 21 0d       | local_set local_index:13
  0xf6b | 20 0e       | local_get local_index:14
  0xf6d | 20 0d       | local_get local_index:13
  0xf6f | fb 0b 00    | array_get array_type_index:0
  0xf72 | fb 16 08    | ref_cast_non_null hty:Concrete(Module(8))
  0xf75 | 21 0a       | local_set local_index:10
  0xf77 | 20 00       | local_get local_index:0
  0xf79 | 20 03       | local_get local_index:3
  0xf7b | 10 20       | call function_index:32
  0xf7d | fb 16 0c    | ref_cast_non_null hty:Concrete(Module(12))
  0xf80 | 21 0c       | local_set local_index:12
  0xf82 | 20 00       | local_get local_index:0
  0xf84 | 20 0a       | local_get local_index:10
  0xf86 | 20 0c       | local_get local_index:12
  0xf88 | 10 22       | call function_index:34
  0xf8a | 22 0b       | local_tee local_index:11
  0xf8c | d1          | ref_is_null
  0xf8d | 04 40       | if blockty:Empty
  0xf8f | 20 00       | local_get local_index:0
  0xf91 | 20 03       | local_get local_index:3
  0xf93 | 20 0a       | local_get local_index:10
  0xf95 | 10 21       | call function_index:33
  0xf97 | 22 0b       | local_tee local_index:11
  0xf99 | d1          | ref_is_null
  0xf9a | 04 40       | if blockty:Empty
  0xf9c | 20 0a       | local_get local_index:10
  0xf9e | 08 00       | throw tag_index:0
  0xfa0 | 0b          | end
  0xfa1 | 20 00       | local_get local_index:0
  0xfa3 | 20 0a       | local_get local_index:10
  0xfa5 | 20 0c       | local_get local_index:12
  0xfa7 | 20 0b       | local_get local_index:11
  0xfa9 | 10 23       | call function_index:35
  0xfab | 0b          | end
  0xfac | 20 00       | local_get local_index:0
  0xfae | 20 00       | local_get local_index:0
  0xfb0 | 20 03       | local_get local_index:3
  0xfb2 | 20 0b       | local_get local_index:11
  0xfb4 | 20 0a       | local_get local_index:10
  0xfb6 | 10 24       | call function_index:36
  0xfb8 | fb 05 11 00 | struct_set struct_type_index:17 field_index:0
  0xfbc | 41 00       | i32_const value:0
  0xfbe | 0f          | return
  0xfbf | 0b          | end
  0xfc0 | 00          | unreachable
  0xfc1 | 0b          | end
============== func 45 ====================
  0xfc2 | c7 02       | size of function
  0xfc4 | 07          | 7 local blocks
  0xfc5 | 01 63 0f    | 1 locals of type Ref((ref null (module 15)))
  0xfc8 | 01 63 0e    | 1 locals of type Ref((ref null (module 14)))
  0xfcb | 02 7f       | 2 locals of type I32
  0xfcd | 02 6d       | 2 locals of type Ref(eqref)
  0xfcf | 01 7f       | 1 locals of type I32
  0xfd1 | 01 64 01    | 1 locals of type Ref((ref (module 1)))
  0xfd4 | 01 7f       | 1 locals of type I32
  0xfd6 | 02 40       | block blockty:Empty
  0xfd8 | 03 40       | loop blockty:Empty
  0xfda | 20 00       | local_get local_index:0
  0xfdc | fb 02 11 00 | struct_get struct_type_index:17 field_index:0
  0xfe0 | 22 01       | local_tee local_index:1
  0xfe2 | d1          | ref_is_null
  0xfe3 | 04 40       | if blockty:Empty
  0xfe5 | 0c 02       | br relative_depth:2
  0xfe7 | 0b          | end
  0xfe8 | 20 01       | local_get local_index:1
  0xfea | d4          | ref_as_non_null
  0xfeb | fb 02 0f 07 | struct_get struct_type_index:15 field_index:7
  0xfef | 21 05       | local_set local_index:5
  0xff1 | 20 01       | local_get local_index:1
  0xff3 | d4          | ref_as_non_null
  0xff4 | fb 02 0f 06 | struct_get struct_type_index:15 field_index:6
  0xff8 | 22 02       | local_tee local_index:2
  0xffa | fb 02 0e 06 | struct_get struct_type_index:14 field_index:6
  0xffe | 41 01       | i32_const value:1
 0x1000 | 6a          | i32_add
 0x1001 | 21 07       | local_set local_index:7
 0x1003 | 20 02       | local_get local_index:2
 0x1005 | 20 07       | local_get local_index:7
 0x1007 | fb 05 0e 06 | struct_set struct_type_index:14 field_index:6
 0x100b | 20 07       | local_get local_index:7
 0x100d | 20 02       | local_get local_index:2
 0x100f | fb 02 0e 08 | struct_get struct_type_index:14 field_index:8
 0x1013 | 46          | i32_eq
 0x1014 | 20 00       | local_get local_index:0
 0x1016 | fb 02 11 01 | struct_get struct_type_index:17 field_index:1
 0x101a | 71          | i32_and
 0x101b | 04 40       | if blockty:Empty
 0x101d | 20 02       | local_get local_index:2
 0x101f | fb 02 0e 09 | struct_get struct_type_index:14 field_index:9
 0x1023 | 04 40       | if blockty:Empty
 0x1025 | 20 02       | local_get local_index:2
 0x1027 | 10 27       | call function_index:39
 0x1029 | 45          | i32_eqz
 0x102a | 04 40       | if blockty:Empty
 0x102c | 20 02       | local_get local_index:2
 0x102e | 20 05       | local_get local_index:5
 0x1030 | fb 16 03    | ref_cast_non_null hty:Concrete(Module(3))
 0x1033 | fb 02 03 01 | struct_get struct_type_index:3 field_index:1
 0x1037 | 10 29       | call function_index:41
 0x1039 | 0b          | end
 0x103a | 0b          | end
 0x103b | 0b          | end
 0x103c | 20 02       | local_get local_index:2
 0x103e | d4          | ref_as_non_null
 0x103f | 10 27       | call function_index:39
 0x1041 | 04 40       | if blockty:Empty
 0x1043 | 20 02       | local_get local_index:2
 0x1045 | fb 02 0e 07 | struct_get struct_type_index:14 field_index:7
 0x1049 | 21 09       | local_set local_index:9
 0x104b | 20 01       | local_get local_index:1
 0x104d | d4          | ref_as_non_null
 0x104e | 20 09       | local_get local_index:9
 0x1050 | 10 28       | call function_index:40
 0x1052 | 04 40       | if blockty:Empty
 0x1054 | 20 02       | local_get local_index:2
 0x1056 | 41 00       | i32_const value:0
 0x1058 | fb 05 0e 07 | struct_set struct_type_index:14 field_index:7
 0x105c | 0c 02       | br relative_depth:2
 0x105e | 05          | else
 0x105f | 20 00       | local_get local_index:0
 0x1061 | 20 01       | local_get local_index:1
 0x1063 | d4          | ref_as_non_null
 0x1064 | 10 2a       | call function_index:42
 0x1066 | 21 06       | local_set local_index:6
 0x1068 | 0b          | end
 0x1069 | 0c 01       | br relative_depth:1
 0x106b | 0b          | end
 0x106c | 20 02       | local_get local_index:2
 0x106e | fb 02 0e 03 | struct_get struct_type_index:14 field_index:3
 0x1072 | fb 16 05    | ref_cast_non_null hty:Concrete(Module(5))
 0x1075 | fb 02 05 03 | struct_get struct_type_index:5 field_index:3
 0x1079 | 21 08       | local_set local_index:8
 0x107b | 03 40       | loop blockty:Empty
 0x107d | 20 00       | local_get local_index:0
 0x107f | fb 02 11 00 | struct_get struct_type_index:17 field_index:0
 0x1083 | 22 01       | local_tee local_index:1
 0x1085 | d1          | ref_is_null
 0x1086 | 0d 01       | br_if relative_depth:1
 0x1088 | 20 01       | local_get local_index:1
 0x108a | d4          | ref_as_non_null
 0x108b | fb 02 0f 04 | struct_get struct_type_index:15 field_index:4
 0x108f | 21 04       | local_set local_index:4
 0x1091 | 20 01       | local_get local_index:1
 0x1093 | d4          | ref_as_non_null
 0x1094 | fb 02 0f 06 | struct_get struct_type_index:15 field_index:6
 0x1098 | 22 02       | local_tee local_index:2
 0x109a | fb 02 0e 03 | struct_get struct_type_index:14 field_index:3
 0x109e | fb 16 05    | ref_cast_non_null hty:Concrete(Module(5))
 0x10a1 | fb 02 05 03 | struct_get struct_type_index:5 field_index:3
 0x10a5 | 22 08       | local_tee local_index:8
 0x10a7 | fb 0f       | array_len
 0x10a9 | 20 04       | local_get local_index:4
 0x10ab | 4d          | i32_le_u
 0x10ac | 04 40       | if blockty:Empty
 0x10ae | 20 00       | local_get local_index:0
 0x10b0 | 20 01       | local_get local_index:1
 0x10b2 | d4          | ref_as_non_null
 0x10b3 | 10 2a       | call function_index:42
 0x10b5 | 21 06       | local_set local_index:6
 0x10b7 | 0c 01       | br relative_depth:1
 0x10b9 | 0b          | end
 0x10ba | 20 08       | local_get local_index:8
 0x10bc | 20 04       | local_get local_index:4
 0x10be | fb 0d 01    | array_get_u array_type_index:1
 0x10c1 | 21 03       | local_set local_index:3
 0x10c3 | 20 00       | local_get local_index:0
 0x10c5 | 20 01       | local_get local_index:1
 0x10c7 | d4          | ref_as_non_null
 0x10c8 | 20 03       | local_get local_index:3
 0x10ca | 10 2c       | call function_index:44
 0x10cc | 04 40       | if blockty:Empty
 0x10ce | 20 00       | local_get local_index:0
 0x10d0 | 20 01       | local_get local_index:1
 0x10d2 | d4          | ref_as_non_null
 0x10d3 | 10 2a       | call function_index:42
 0x10d5 | 21 06       | local_set local_index:6
 0x10d7 | 0c 01       | br relative_depth:1
 0x10d9 | 0b          | end
 0x10da | 20 00       | local_get local_index:0
 0x10dc | fb 02 11 00 | struct_get struct_type_index:17 field_index:0
 0x10e0 | 20 01       | local_get local_index:1
 0x10e2 | d3          | ref_eq
 0x10e3 | 04 40       | if blockty:Empty
 0x10e5 | 20 01       | local_get local_index:1
 0x10e7 | d4          | ref_as_non_null
 0x10e8 | 20 04       | local_get local_index:4
 0x10ea | 41 01       | i32_const value:1
 0x10ec | 6a          | i32_add
 0x10ed | fb 05 0f 04 | struct_set struct_type_index:15 field_index:4
 0x10f1 | 05          | else
 0x10f2 | 20 00       | local_get local_index:0
 0x10f4 | fb 02 11 00 | struct_get struct_type_index:17 field_index:0
 0x10f8 | d4          | ref_as_non_null
 0x10f9 | fb 02 0f 04 | struct_get struct_type_index:15 field_index:4
 0x10fd | 45          | i32_eqz
 0x10fe | 04 40       | if blockty:Empty
 0x1100 | 0c 03       | br relative_depth:3
 0x1102 | 0b          | end
 0x1103 | 0b          | end
 0x1104 | 0c 00       | br relative_depth:0
 0x1106 | 0b          | end
 0x1107 | 0b          | end
 0x1108 | 0b          | end
 0x1109 | 00          | unreachable
 0x110a | 0b          | end
 0x110b | 00 ab 14    | custom section
 0x110e | 04 6e 61 6d | name: "name"
        | 65         
 0x1113 | 01 92 06    | function name section
 0x1116 | 2e          | 46 count
 0x1117 | 00 0c 72 65 | Naming { index: 0, name: "reportResult" }
        | 70 6f 72 74
        | 52 65 73 75
        | 6c 74      
 0x1125 | 01 0f 74 72 | Naming { index: 1, name: "translateMethod" }
        | 61 6e 73 6c
        | 61 74 65 4d
        | 65 74 68 6f
        | 64         
 0x1136 | 02 08 64 65 | Naming { index: 2, name: "debugLog" }
        | 62 75 67 4c
        | 6f 67      
 0x1140 | 03 08 6e 65 | Naming { index: 3, name: "newArray" }
        | 77 41 72 72
        | 61 79      
 0x114a | 04 0c 6e 65 | Naming { index: 4, name: "newByteArray" }
        | 77 42 79 74
        | 65 41 72 72
        | 61 79      
 0x1158 | 05 0c 6e 65 | Naming { index: 5, name: "newWordArray" }
        | 77 57 6f 72
        | 64 41 72 72
        | 61 79      
 0x1166 | 06 0d 6e 65 | Naming { index: 6, name: "newDictionary" }
        | 77 44 69 63
        | 74 69 6f 6e
        | 61 72 79   
 0x1175 | 07 0b 6c 69 | Naming { index: 7, name: "linkObjects" }
        | 6e 6b 4f 62
        | 6a 65 63 74
        | 73         
 0x1182 | 08 10 6c 69 | Naming { index: 8, name: "linkClassObjects" }
        | 6e 6b 43 6c
        | 61 73 73 4f
        | 62 6a 65 63
        | 74 73      
 0x1194 | 09 14 6c 69 | Naming { index: 9, name: "linkMetaclassObjects" }
        | 6e 6b 4d 65
        | 74 61 63 6c
        | 61 73 73 4f
        | 62 6a 65 63
        | 74 73      
 0x11aa | 0a 0d 6e 65 | Naming { index: 10, name: "newEmptyArray" }
        | 77 45 6d 70
        | 74 79 41 72
        | 72 61 79   
 0x11b9 | 0b 18 6e 65 | Naming { index: 11, name: "newClassOfFormatWithName" }
        | 77 43 6c 61
        | 73 73 4f 66
        | 46 6f 72 6d
        | 61 74 57 69
        | 74 68 4e 61
        | 6d 65      
 0x11d3 | 0c 14 6e 65 | Naming { index: 12, name: "newMetaclassForClass" }
        | 77 4d 65 74
        | 61 63 6c 61
        | 73 73 46 6f
        | 72 43 6c 61
        | 73 73      
 0x11e9 | 0d 12 6e 65 | Naming { index: 13, name: "newSymbolFromBytes" }
        | 77 53 79 6d
        | 62 6f 6c 46
        | 72 6f 6d 42
        | 79 74 65 73
 0x11fd | 0e 0a 69 6e | Naming { index: 14, name: "initialize" }
        | 69 74 69 61
        | 6c 69 7a 65
 0x1209 | 0f 0f 6d 65 | Naming { index: 15, name: "methodBytecodes" }
        | 74 68 6f 64
        | 42 79 74 65
        | 63 6f 64 65
        | 73         
 0x121a | 10 16 73 65 | Naming { index: 16, name: "setMethodFunctionIndex" }
        | 74 4d 65 74
        | 68 6f 64 46
        | 75 6e 63 74
        | 69 6f 6e 49
        | 6e 64 65 78
 0x1232 | 11 0d 6f 6e | Naming { index: 17, name: "onContextPush" }
        | 43 6f 6e 74
        | 65 78 74 50
        | 75 73 68   
 0x1241 | 12 0e 70 6f | Naming { index: 18, name: "popFromContext" }
        | 70 46 72 6f
        | 6d 43 6f 6e
        | 74 65 78 74
 0x1251 | 13 0f 63 6f | Naming { index: 19, name: "contextReceiver" }
        | 6e 74 65 78
        | 74 52 65 63
        | 65 69 76 65
        | 72         
 0x1262 | 14 0e 6d 65 | Naming { index: 20, name: "methodLiterals" }
        | 74 68 6f 64
        | 4c 69 74 65
        | 72 61 6c 73
 0x1272 | 15 10 63 6f | Naming { index: 21, name: "contextLiteralAt" }
        | 6e 74 65 78
        | 74 4c 69 74
        | 65 72 61 6c
        | 41 74      
 0x1284 | 16 0d 63 6f | Naming { index: 22, name: "contextMethod" }
        | 6e 74 65 78
        | 74 4d 65 74
        | 68 6f 64   
 0x1293 | 17 0b 61 72 | Naming { index: 23, name: "arrayOkayAt" }
        | 72 61 79 4f
        | 6b 61 79 41
        | 74         
 0x12a0 | 18 0d 6f 62 | Naming { index: 24, name: "objectArrayAt" }
        | 6a 65 63 74
        | 41 72 72 61
        | 79 41 74   
 0x12af | 19 0b 62 79 | Naming { index: 25, name: "byteArrayAt" }
        | 74 65 41 72
        | 72 61 79 41
        | 74         
 0x12bc | 1a 0f 62 79 | Naming { index: 26, name: "byteArrayLength" }
        | 74 65 41 72
        | 72 61 79 4c
        | 65 6e 67 74
        | 68         
 0x12cd | 1b 15 63 6f | Naming { index: 27, name: "copyByteArrayToMemory" }
        | 70 79 42 79
        | 74 65 41 72
        | 72 61 79 54
        | 6f 4d 65 6d
        | 6f 72 79   
 0x12e4 | 1c 10 6e 65 | Naming { index: 28, name: "nextIdentityHash" }
        | 78 74 49 64
        | 65 6e 74 69
        | 74 79 48 61
        | 73 68      
 0x12f6 | 1d 0b 70 75 | Naming { index: 29, name: "pushOnStack" }
        | 73 68 4f 6e
        | 53 74 61 63
        | 6b         
 0x1303 | 1e 0c 70 6f | Naming { index: 30, name: "popFromStack" }
        | 70 46 72 6f
        | 6d 53 74 61
        | 63 6b      
 0x1311 | 1f 0a 74 6f | Naming { index: 31, name: "topOfStack" }
        | 70 4f 66 53
        | 74 61 63 6b
 0x131d | 20 0d 63 6c | Naming { index: 32, name: "classOfObject" }
        | 61 73 73 4f
        | 66 4f 62 6a
        | 65 63 74   
 0x132c | 21 0c 6c 6f | Naming { index: 33, name: "lookupMethod" }
        | 6f 6b 75 70
        | 4d 65 74 68
        | 6f 64      
 0x133a | 22 13 6c 6f | Naming { index: 34, name: "lookupInMethodCache" }
        | 6f 6b 75 70
        | 49 6e 4d 65
        | 74 68 6f 64
        | 43 61 63 68
        | 65         
 0x134f | 23 12 73 74 | Naming { index: 35, name: "storeInMethodCache" }
        | 6f 72 65 49
        | 6e 4d 65 74
        | 68 6f 64 43
        | 61 63 68 65
 0x1363 | 24 0a 6e 65 | Naming { index: 36, name: "newContext" }
        | 77 43 6f 6e
        | 74 65 78 74
 0x136f | 25 14 73 6d | Naming { index: 37, name: "smallIntegerForValue" }
        | 61 6c 6c 49
        | 6e 74 65 67
        | 65 72 46 6f
        | 72 56 61 6c
        | 75 65      
 0x1385 | 26 13 76 61 | Naming { index: 38, name: "valueOfSmallInteger" }
        | 6c 75 65 4f
        | 66 53 6d 61
        | 6c 6c 49 6e
        | 74 65 67 65
        | 72         
 0x139a | 27 0c 69 73 | Naming { index: 39, name: "isTranslated" }
        | 54 72 61 6e
        | 73 6c 61 74
        | 65 64      
 0x13a8 | 28 17 65 78 | Naming { index: 40, name: "executeTranslatedMethod" }
        | 65 63 75 74
        | 65 54 72 61
        | 6e 73 6c 61
        | 74 65 64 4d
        | 65 74 68 6f
        | 64         
 0x13c1 | 29 18 74 72 | Naming { index: 41, name: "triggerMethodTranslation" }
        | 69 67 67 65
        | 72 4d 65 74
        | 68 6f 64 54
        | 72 61 6e 73
        | 6c 61 74 69
        | 6f 6e      
 0x13db | 2a 12 68 61 | Naming { index: 42, name: "handleMethodReturn" }
        | 6e 64 6c 65
        | 4d 65 74 68
        | 6f 64 52 65
        | 74 75 72 6e
 0x13ef | 2b 19 63 72 | Naming { index: 43, name: "createMinimalObjectMemory" }
        | 65 61 74 65
        | 4d 69 6e 69
        | 6d 61 6c 4f
        | 62 6a 65 63
        | 74 4d 65 6d
        | 6f 72 79   
 0x140a | 2c 11 69 6e | Naming { index: 44, name: "interpretBytecode" }
        | 74 65 72 70
        | 72 65 74 42
        | 79 74 65 63
        | 6f 64 65   
 0x141d | 2d 09 69 6e | Naming { index: 45, name: "interpret" }
        | 74 65 72 70
        | 72 65 74   
 0x1428 | 02 ef 0a    | local section
 0x142b | 2b          | 43 count
 0x142c | 03          | function 3 local name section
 0x142d | 02          | 2 count
 0x142e | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x1432 | 01 05 61 72 | Naming { index: 1, name: "array" }
        | 72 61 79   
 0x1439 | 04          | function 4 local name section
 0x143a | 02          | 2 count
 0x143b | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x143f | 01 05 61 72 | Naming { index: 1, name: "array" }
        | 72 61 79   
 0x1446 | 05          | function 5 local name section
 0x1447 | 02          | 2 count
 0x1448 | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x144c | 01 05 61 72 | Naming { index: 1, name: "array" }
        | 72 61 79   
 0x1453 | 06          | function 6 local name section
 0x1454 | 01          | 1 count
 0x1455 | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x1459 | 07          | function 7 local name section
 0x145a | 07          | 7 count
 0x145b | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x145f | 01 07 6f 62 | Naming { index: 1, name: "objects" }
        | 6a 65 63 74
        | 73         
 0x1468 | 02 0e 70 72 | Naming { index: 2, name: "previousObject" }
        | 65 76 69 6f
        | 75 73 4f 62
        | 6a 65 63 74
 0x1478 | 03 0a 6e 65 | Naming { index: 3, name: "nextObject" }
        | 78 74 4f 62
        | 6a 65 63 74
 0x1484 | 04 05 6c 69 | Naming { index: 4, name: "limit" }
        | 6d 69 74   
 0x148b | 05 05 69 6e | Naming { index: 5, name: "index" }
        | 64 65 78   
 0x1492 | 06 07 73 63 | Naming { index: 6, name: "scratch" }
        | 72 61 74 63
        | 68         
 0x149b | 08          | function 8 local name section
 0x149c | 02          | 2 count
 0x149d | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x14a1 | 01 05 63 6c | Naming { index: 1, name: "class" }
        | 61 73 73   
 0x14a8 | 09          | function 9 local name section
 0x14a9 | 02          | 2 count
 0x14aa | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x14ae | 01 09 6d 65 | Naming { index: 1, name: "metaclass" }
        | 74 61 63 6c
        | 61 73 73   
 0x14b9 | 0a          | function 10 local name section
 0x14ba | 01          | 1 count
 0x14bb | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x14bf | 0b          | function 11 local name section
 0x14c0 | 03          | 3 count
 0x14c1 | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x14c5 | 01 06 66 6f | Naming { index: 1, name: "format" }
        | 72 6d 61 74
 0x14cd | 02 04 6e 61 | Naming { index: 2, name: "name" }
        | 6d 65      
 0x14d3 | 0c          | function 12 local name section
 0x14d4 | 02          | 2 count
 0x14d5 | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x14d9 | 01 05 63 6c | Naming { index: 1, name: "class" }
        | 61 73 73   
 0x14e0 | 0d          | function 13 local name section
 0x14e1 | 02          | 2 count
 0x14e2 | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x14e6 | 01 05 62 79 | Naming { index: 1, name: "bytes" }
        | 74 65 73   
 0x14ed | 0e          | function 14 local name section
 0x14ee | 0a          | 10 count
 0x14ef | 00 0f 6d 65 | Naming { index: 0, name: "methodCacheSize" }
        | 74 68 6f 64
        | 43 61 63 68
        | 65 53 69 7a
        | 65         
 0x1500 | 01 0b 66 69 | Naming { index: 1, name: "firstObject" }
        | 72 73 74 4f
        | 62 6a 65 63
        | 74         
 0x150d | 02 02 76 6d | Naming { index: 2, name: "vm" }
 0x1511 | 03 0b 63 6c | Naming { index: 3, name: "classObject" }
        | 61 73 73 4f
        | 62 6a 65 63
        | 74         
 0x151e | 04 0d 63 6c | Naming { index: 4, name: "classBehavior" }
        | 61 73 73 42
        | 65 68 61 76
        | 69 6f 72   
 0x152d | 05 15 63 6c | Naming { index: 5, name: "classClassDescription" }
        | 61 73 73 43
        | 6c 61 73 73
        | 44 65 73 63
        | 72 69 70 74
        | 69 6f 6e   
 0x1544 | 06 0a 63 6c | Naming { index: 6, name: "classClass" }
        | 61 73 73 43
        | 6c 61 73 73
 0x1550 | 07 0e 63 6c | Naming { index: 7, name: "classMetaclass" }
        | 61 73 73 4d
        | 65 74 61 63
        | 6c 61 73 73
 0x1560 | 08 0b 63 6c | Naming { index: 8, name: "classSymbol" }
        | 61 73 73 53
        | 79 6d 62 6f
        | 6c         
 0x156d | 09 11 63 6c | Naming { index: 9, name: "classSmallInteger" }
        | 61 73 73 53
        | 6d 61 6c 6c
        | 49 6e 74 65
        | 67 65 72   
 0x1580 | 0f          | function 15 local name section
 0x1581 | 01          | 1 count
 0x1582 | 00 06 6d 65 | Naming { index: 0, name: "method" }
        | 74 68 6f 64
 0x158a | 10          | function 16 local name section
 0x158b | 02          | 2 count
 0x158c | 00 06 6d 65 | Naming { index: 0, name: "method" }
        | 74 68 6f 64
 0x1594 | 01 05 69 6e | Naming { index: 1, name: "index" }
        | 64 65 78   
 0x159b | 11          | function 17 local name section
 0x159c | 02          | 2 count
 0x159d | 00 07 63 6f | Naming { index: 0, name: "context" }
        | 6e 74 65 78
        | 74         
 0x15a6 | 01 0c 70 75 | Naming { index: 1, name: "pushedObject" }
        | 73 68 65 64
        | 4f 62 6a 65
        | 63 74      
 0x15b4 | 12          | function 18 local name section
 0x15b5 | 01          | 1 count
 0x15b6 | 00 07 63 6f | Naming { index: 0, name: "context" }
        | 6e 74 65 78
        | 74         
 0x15bf | 13          | function 19 local name section
 0x15c0 | 01          | 1 count
 0x15c1 | 00 07 63 6f | Naming { index: 0, name: "context" }
        | 6e 74 65 78
        | 74         
 0x15ca | 14          | function 20 local name section
 0x15cb | 01          | 1 count
 0x15cc | 00 06 6d 65 | Naming { index: 0, name: "method" }
        | 74 68 6f 64
 0x15d4 | 15          | function 21 local name section
 0x15d5 | 02          | 2 count
 0x15d6 | 00 07 63 6f | Naming { index: 0, name: "context" }
        | 6e 74 65 78
        | 74         
 0x15df | 01 05 69 6e | Naming { index: 1, name: "index" }
        | 64 65 78   
 0x15e6 | 16          | function 22 local name section
 0x15e7 | 01          | 1 count
 0x15e8 | 00 07 63 6f | Naming { index: 0, name: "context" }
        | 6e 74 65 78
        | 74         
 0x15f1 | 17          | function 23 local name section
 0x15f2 | 03          | 3 count
 0x15f3 | 00 05 61 72 | Naming { index: 0, name: "array" }
        | 72 61 79   
 0x15fa | 01 05 69 6e | Naming { index: 1, name: "index" }
        | 64 65 78   
 0x1601 | 02 06 6c 65 | Naming { index: 2, name: "length" }
        | 6e 67 74 68
 0x1609 | 18          | function 24 local name section
 0x160a | 02          | 2 count
 0x160b | 00 05 61 72 | Naming { index: 0, name: "array" }
        | 72 61 79   
 0x1612 | 01 05 69 6e | Naming { index: 1, name: "index" }
        | 64 65 78   
 0x1619 | 19          | function 25 local name section
 0x161a | 02          | 2 count
 0x161b | 00 05 61 72 | Naming { index: 0, name: "array" }
        | 72 61 79   
 0x1622 | 01 05 69 6e | Naming { index: 1, name: "index" }
        | 64 65 78   
 0x1629 | 1a          | function 26 local name section
 0x162a | 01          | 1 count
 0x162b | 00 05 61 72 | Naming { index: 0, name: "array" }
        | 72 61 79   
 0x1632 | 1b          | function 27 local name section
 0x1633 | 03          | 3 count
 0x1634 | 00 01 30    | Naming { index: 0, name: "0" }
 0x1637 | 01 03 6c 65 | Naming { index: 1, name: "len" }
        | 6e         
 0x163c | 02 01 69    | Naming { index: 2, name: "i" }
 0x163f | 1c          | function 28 local name section
 0x1640 | 01          | 1 count
 0x1641 | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x1645 | 1d          | function 29 local name section
 0x1646 | 04          | 4 count
 0x1647 | 00 07 63 6f | Naming { index: 0, name: "context" }
        | 6e 74 65 78
        | 74         
 0x1650 | 01 05 76 61 | Naming { index: 1, name: "value" }
        | 6c 75 65   
 0x1657 | 02 05 73 74 | Naming { index: 2, name: "stack" }
        | 61 63 6b   
 0x165e | 03 02 73 70 | Naming { index: 3, name: "sp" }
 0x1662 | 1e          | function 30 local name section
 0x1663 | 03          | 3 count
 0x1664 | 00 07 63 6f | Naming { index: 0, name: "context" }
        | 6e 74 65 78
        | 74         
 0x166d | 01 05 73 74 | Naming { index: 1, name: "stack" }
        | 61 63 6b   
 0x1674 | 02 02 73 70 | Naming { index: 2, name: "sp" }
 0x1678 | 1f          | function 31 local name section
 0x1679 | 03          | 3 count
 0x167a | 00 07 63 6f | Naming { index: 0, name: "context" }
        | 6e 74 65 78
        | 74         
 0x1683 | 01 05 73 74 | Naming { index: 1, name: "stack" }
        | 61 63 6b   
 0x168a | 02 02 73 70 | Naming { index: 2, name: "sp" }
 0x168e | 20          | function 32 local name section
 0x168f | 02          | 2 count
 0x1690 | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x1694 | 01 03 6f 62 | Naming { index: 1, name: "obj" }
        | 6a         
 0x1699 | 21          | function 33 local name section
 0x169a | 0b          | 11 count
 0x169b | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x169f | 01 08 72 65 | Naming { index: 1, name: "receiver" }
        | 63 65 69 76
        | 65 72      
 0x16a9 | 02 08 73 65 | Naming { index: 2, name: "selector" }
        | 6c 65 63 74
        | 6f 72      
 0x16b3 | 03 05 63 6c | Naming { index: 3, name: "class" }
        | 61 73 73   
 0x16ba | 04 0c 63 75 | Naming { index: 4, name: "currentClass" }
        | 72 72 65 6e
        | 74 43 6c 61
        | 73 73      
 0x16c8 | 05 10 6d 65 | Naming { index: 5, name: "methodDictionary" }
        | 74 68 6f 64
        | 44 69 63 74
        | 69 6f 6e 61
        | 72 79      
 0x16da | 06 04 6b 65 | Naming { index: 6, name: "keys" }
        | 79 73      
 0x16e0 | 07 06 76 61 | Naming { index: 7, name: "values" }
        | 6c 75 65 73
 0x16e8 | 08 05 63 6f | Naming { index: 8, name: "count" }
        | 75 6e 74   
 0x16ef | 09 01 69    | Naming { index: 9, name: "i" }
 0x16f2 | 0a 03 6b 65 | Naming { index: 10, name: "key" }
        | 79         
 0x16f7 | 22          | function 34 local name section
 0x16f8 | 09          | 9 count
 0x16f9 | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x16fd | 01 08 73 65 | Naming { index: 1, name: "selector" }
        | 6c 65 63 74
        | 6f 72      
 0x1707 | 02 0d 72 65 | Naming { index: 2, name: "receiverClass" }
        | 63 65 69 76
        | 65 72 43 6c
        | 61 73 73   
 0x1716 | 03 05 63 61 | Naming { index: 3, name: "cache" }
        | 63 68 65   
 0x171d | 04 09 63 61 | Naming { index: 4, name: "cacheSize" }
        | 63 68 65 53
        | 69 7a 65   
 0x1728 | 05 04 68 61 | Naming { index: 5, name: "hash" }
        | 73 68      
 0x172e | 06 05 69 6e | Naming { index: 6, name: "index" }
        | 64 65 78   
 0x1735 | 07 05 65 6e | Naming { index: 7, name: "entry" }
        | 74 72 79   
 0x173c | 08 0a 70 72 | Naming { index: 8, name: "probeLimit" }
        | 6f 62 65 4c
        | 69 6d 69 74
 0x1748 | 23          | function 35 local name section
 0x1749 | 07          | 7 count
 0x174a | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x174e | 01 08 73 65 | Naming { index: 1, name: "selector" }
        | 6c 65 63 74
        | 6f 72      
 0x1758 | 02 0d 72 65 | Naming { index: 2, name: "receiverClass" }
        | 63 65 69 76
        | 65 72 43 6c
        | 61 73 73   
 0x1767 | 03 06 6d 65 | Naming { index: 3, name: "method" }
        | 74 68 6f 64
 0x176f | 04 05 63 61 | Naming { index: 4, name: "cache" }
        | 63 68 65   
 0x1776 | 05 05 69 6e | Naming { index: 5, name: "index" }
        | 64 65 78   
 0x177d | 06 05 65 6e | Naming { index: 6, name: "entry" }
        | 74 72 79   
 0x1784 | 24          | function 36 local name section
 0x1785 | 04          | 4 count
 0x1786 | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x178a | 01 08 72 65 | Naming { index: 1, name: "receiver" }
        | 63 65 69 76
        | 65 72      
 0x1794 | 02 06 6d 65 | Naming { index: 2, name: "method" }
        | 74 68 6f 64
 0x179c | 03 08 73 65 | Naming { index: 3, name: "selector" }
        | 6c 65 63 74
        | 6f 72      
 0x17a6 | 25          | function 37 local name section
 0x17a7 | 01          | 1 count
 0x17a8 | 00 05 76 61 | Naming { index: 0, name: "value" }
        | 6c 75 65   
 0x17af | 26          | function 38 local name section
 0x17b0 | 01          | 1 count
 0x17b1 | 00 03 6f 62 | Naming { index: 0, name: "obj" }
        | 6a         
 0x17b6 | 27          | function 39 local name section
 0x17b7 | 01          | 1 count
 0x17b8 | 00 06 6d 65 | Naming { index: 0, name: "method" }
        | 74 68 6f 64
 0x17c0 | 28          | function 40 local name section
 0x17c1 | 02          | 2 count
 0x17c2 | 00 07 63 6f | Naming { index: 0, name: "context" }
        | 6e 74 65 78
        | 74         
 0x17cb | 01 0d 66 75 | Naming { index: 1, name: "functionIndex" }
        | 6e 63 74 69
        | 6f 6e 49 6e
        | 64 65 78   
 0x17da | 29          | function 41 local name section
 0x17db | 06          | 6 count
 0x17dc | 00 06 6d 65 | Naming { index: 0, name: "method" }
        | 74 68 6f 64
 0x17e4 | 01 0c 69 64 | Naming { index: 1, name: "identityHash" }
        | 65 6e 74 69
        | 74 79 48 61
        | 73 68      
 0x17f2 | 02 05 73 6c | Naming { index: 2, name: "slots" }
        | 6f 74 73   
 0x17f9 | 03 0e 62 79 | Naming { index: 3, name: "bytecodeLength" }
        | 74 65 63 6f
        | 64 65 4c 65
        | 6e 67 74 68
 0x1809 | 04 12 66 75 | Naming { index: 4, name: "functionIndexIndex" }
        | 6e 63 74 69
        | 6f 6e 49 6e
        | 64 65 78 49
        | 6e 64 65 78
 0x181d | 05 0c 6d 65 | Naming { index: 5, name: "memoryOffset" }
        | 6d 6f 72 79
        | 4f 66 66 73
        | 65 74      
 0x182b | 2a          | function 42 local name section
 0x182c | 04          | 4 count
 0x182d | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x1831 | 01 07 63 6f | Naming { index: 1, name: "context" }
        | 6e 74 65 78
        | 74         
 0x183a | 02 06 73 65 | Naming { index: 2, name: "sender" }
        | 6e 64 65 72
 0x1842 | 03 06 72 65 | Naming { index: 3, name: "result" }
        | 73 75 6c 74
 0x184a | 2b          | function 43 local name section
 0x184b | 06          | 6 count
 0x184c | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x1850 | 01 0f 62 65 | Naming { index: 1, name: "benchmarkMethod" }
        | 6e 63 68 6d
        | 61 72 6b 4d
        | 65 74 68 6f
        | 64         
 0x1861 | 02 11 62 65 | Naming { index: 2, name: "benchmarkSelector" }
        | 6e 63 68 6d
        | 61 72 6b 53
        | 65 6c 65 63
        | 74 6f 72   
 0x1874 | 03 10 6d 65 | Naming { index: 3, name: "methodDictionary" }
        | 74 68 6f 64
        | 44 69 63 74
        | 69 6f 6e 61
        | 72 79      
 0x1886 | 04 17 6c 69 | Naming { index: 4, name: "literalsOfUnboundMethod" }
        | 74 65 72 61
        | 6c 73 4f 66
        | 55 6e 62 6f
        | 75 6e 64 4d
        | 65 74 68 6f
        | 64         
 0x189f | 05 11 62 65 | Naming { index: 5, name: "benchmarkLiterals" }
        | 6e 63 68 6d
        | 61 72 6b 4c
        | 69 74 65 72
        | 61 6c 73   
 0x18b2 | 2c          | function 44 local name section
 0x18b3 | 0f          | 15 count
 0x18b4 | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x18b8 | 01 07 63 6f | Naming { index: 1, name: "context" }
        | 6e 74 65 78
        | 74         
 0x18c1 | 02 08 62 79 | Naming { index: 2, name: "bytecode" }
        | 74 65 63 6f
        | 64 65      
 0x18cb | 03 08 72 65 | Naming { index: 3, name: "receiver" }
        | 63 65 69 76
        | 65 72      
 0x18d5 | 04 06 76 61 | Naming { index: 4, name: "value1" }
        | 6c 75 65 31
 0x18dd | 05 06 76 61 | Naming { index: 5, name: "value2" }
        | 6c 75 65 32
 0x18e5 | 06 04 69 6e | Naming { index: 6, name: "int1" }
        | 74 31      
 0x18eb | 07 04 69 6e | Naming { index: 7, name: "int2" }
        | 74 32      
 0x18f1 | 08 06 72 65 | Naming { index: 8, name: "result" }
        | 73 75 6c 74
 0x18f9 | 09 0a 6e 65 | Naming { index: 9, name: "newContext" }
        | 77 43 6f 6e
        | 74 65 78 74
 0x1905 | 0a 08 73 65 | Naming { index: 10, name: "selector" }
        | 6c 65 63 74
        | 6f 72      
 0x190f | 0b 06 6d 65 | Naming { index: 11, name: "method" }
        | 74 68 6f 64
 0x1917 | 0c 0d 72 65 | Naming { index: 12, name: "receiverClass" }
        | 63 65 69 76
        | 65 72 43 6c
        | 61 73 73   
 0x1926 | 0d 05 69 6e | Naming { index: 13, name: "index" }
        | 64 65 78   
 0x192d | 0e 08 6c 69 | Naming { index: 14, name: "literals" }
        | 74 65 72 61
        | 6c 73      
 0x1937 | 2d          | function 45 local name section
 0x1938 | 0a          | 10 count
 0x1939 | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x193d | 01 07 63 6f | Naming { index: 1, name: "context" }
        | 6e 74 65 78
        | 74         
 0x1946 | 02 06 6d 65 | Naming { index: 2, name: "method" }
        | 74 68 6f 64
 0x194e | 03 08 62 79 | Naming { index: 3, name: "bytecode" }
        | 74 65 63 6f
        | 64 65      
 0x1958 | 04 02 70 63 | Naming { index: 4, name: "pc" }
 0x195c | 05 08 72 65 | Naming { index: 5, name: "receiver" }
        | 63 65 69 76
        | 65 72      
 0x1966 | 06 0b 72 65 | Naming { index: 6, name: "resultValue" }
        | 73 75 6c 74
        | 56 61 6c 75
        | 65         
 0x1973 | 07 0f 69 6e | Naming { index: 7, name: "invocationCount" }
        | 76 6f 63 61
        | 74 69 6f 6e
        | 43 6f 75 6e
        | 74         
 0x1984 | 08 05 73 6c | Naming { index: 8, name: "slots" }
        | 6f 74 73   
 0x198b | 09 0d 66 75 | Naming { index: 9, name: "functionIndex" }
        | 6e 63 74 69
        | 6f 6e 49 6e
        | 64 65 78   
 0x199a | 03 6c       | label section
 0x199c | 05          | 5 count
 0x199d | 07          | function 7 label name section
 0x199e | 01          | 1 count
 0x199f | 00 04 6c 69 | Naming { index: 0, name: "link" }
        | 6e 6b      
 0x19a5 | 1b          | function 27 label name section
 0x19a6 | 01          | 1 count
 0x19a7 | 01 04 63 6f | Naming { index: 1, name: "copy" }
        | 70 79      
 0x19ad | 21          | function 33 label name section
 0x19ae | 02          | 2 count
 0x19af | 00 0e 68 69 | Naming { index: 0, name: "hierarchy_loop" }
        | 65 72 61 72
        | 63 68 79 5f
        | 6c 6f 6f 70
 0x19bf | 02 0b 73 65 | Naming { index: 2, name: "search_loop" }
        | 61 72 63 68
        | 5f 6c 6f 6f
        | 70         
 0x19cc | 22          | function 34 label name section
 0x19cd | 01          | 1 count
 0x19ce | 01 0a 70 72 | Naming { index: 1, name: "probe_loop" }
        | 6f 62 65 5f
        | 6c 6f 6f 70
 0x19da | 2d          | function 45 label name section
 0x19db | 03          | 3 count
 0x19dc | 00 08 66 69 | Naming { index: 0, name: "finished" }
        | 6e 69 73 68
        | 65 64      
 0x19e6 | 01 0e 65 78 | Naming { index: 1, name: "execution_loop" }
        | 65 63 75 74
        | 69 6f 6e 5f
        | 6c 6f 6f 70
 0x19f6 | 08 10 69 6e | Naming { index: 8, name: "interpreter_loop" }
        | 74 65 72 70
        | 72 65 74 65
        | 72 5f 6c 6f
        | 6f 70      
 0x1a08 | 04 e4 01    | type name section
 0x1a0b | 13          | 19 count
 0x1a0c | 00 0b 6f 62 | Naming { index: 0, name: "objectArray" }
        | 6a 65 63 74
        | 41 72 72 61
        | 79         
 0x1a19 | 01 09 62 79 | Naming { index: 1, name: "byteArray" }
        | 74 65 41 72
        | 72 61 79   
 0x1a24 | 02 09 77 6f | Naming { index: 2, name: "wordArray" }
        | 72 64 41 72
        | 72 61 79   
 0x1a2f | 03 06 4f 62 | Naming { index: 3, name: "Object" }
        | 6a 65 63 74
 0x1a37 | 04 05 41 72 | Naming { index: 4, name: "Array" }
        | 72 61 79   
 0x1a3e | 05 09 42 79 | Naming { index: 5, name: "ByteArray" }
        | 74 65 41 72
        | 72 61 79   
 0x1a49 | 06 09 57 6f | Naming { index: 6, name: "WordArray" }
        | 72 64 41 72
        | 72 61 79   
 0x1a54 | 07 0e 56 61 | Naming { index: 7, name: "VariableObject" }
        | 72 69 61 62
        | 6c 65 4f 62
        | 6a 65 63 74
 0x1a64 | 08 06 53 79 | Naming { index: 8, name: "Symbol" }
        | 6d 62 6f 6c
 0x1a6c | 09 0a 44 69 | Naming { index: 9, name: "Dictionary" }
        | 63 74 69 6f
        | 6e 61 72 79
 0x1a78 | 0a 08 42 65 | Naming { index: 10, name: "Behavior" }
        | 68 61 76 69
        | 6f 72      
 0x1a82 | 0b 10 43 6c | Naming { index: 11, name: "ClassDescription" }
        | 61 73 73 44
        | 65 73 63 72
        | 69 70 74 69
        | 6f 6e      
 0x1a94 | 0c 05 43 6c | Naming { index: 12, name: "Class" }
        | 61 73 73   
 0x1a9b | 0d 09 4d 65 | Naming { index: 13, name: "Metaclass" }
        | 74 61 63 6c
        | 61 73 73   
 0x1aa6 | 0e 0e 43 6f | Naming { index: 14, name: "CompiledMethod" }
        | 6d 70 69 6c
        | 65 64 4d 65
        | 74 68 6f 64
 0x1ab6 | 0f 07 43 6f | Naming { index: 15, name: "Context" }
        | 6e 74 65 78
        | 74         
 0x1abf | 10 08 50 49 | Naming { index: 16, name: "PICEntry" }
        | 43 45 6e 74
        | 72 79      
 0x1ac9 | 11 0e 56 69 | Naming { index: 17, name: "VirtualMachine" }
        | 72 74 75 61
        | 6c 4d 61 63
        | 68 69 6e 65
 0x1ad9 | 12 14 6d 65 | Naming { index: 18, name: "messageNotUnderstood" }
        | 73 73 61 67
        | 65 4e 6f 74
        | 55 6e 64 65
        | 72 73 74 6f
        | 6f 64      
 0x1aef | 05 10       | table name section
 0x1af1 | 01          | 1 count
 0x1af2 | 00 0d 66 75 | Naming { index: 0, name: "functionTable" }
        | 6e 63 74 69
        | 6f 6e 54 61
        | 62 6c 65   
 0x1b01 | 06 04       | memory name section
 0x1b03 | 01          | 1 count
 0x1b04 | 00 01 30    | Naming { index: 0, name: "0" }
 0x1b07 | 07 17       | global name section
 0x1b09 | 01          | 1 count
 0x1b0a | 00 14 62 79 | Naming { index: 0, name: "byteArrayCopyPointer" }
        | 74 65 41 72
        | 72 61 79 43
        | 6f 70 79 50
        | 6f 69 6e 74
        | 65 72      
 0x1b20 | 0b 17       | tag name section
 0x1b22 | 01          | 1 count
 0x1b23 | 00 14 6d 65 | Naming { index: 0, name: "messageNotUnderstood" }
        | 73 73 61 67
        | 65 4e 6f 74
        | 55 6e 64 65
        | 72 73 74 6f
        | 6f 64      

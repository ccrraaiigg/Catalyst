    0x0 | 00 61 73 6d | version 1 (Module)
        | 01 00 00 00
    0x8 | 01 ae 05    | type section
    0xb | 2c          | 44 count
--- rec group 0 (explicit) ---
    0xc | 4e 13       | 
    0xe | 5e 6d 01    | [type 0] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Array(ArrayType(FieldType { element_type: Val(Ref(eqref)), mutable: true })), shared: false } }
   0x11 | 5e 78 01    | [type 1] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Array(ArrayType(FieldType { element_type: I8, mutable: true })), shared: false } }
   0x14 | 5e 7f 01    | [type 2] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Array(ArrayType(FieldType { element_type: Val(I32), mutable: true })), shared: false } }
   0x17 | 50 00 5f 03 | [type 3] SubType { is_final: false, supertype_idx: None, composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref((ref eq))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }] }), shared: false } }
        | 64 6d 01 7f
        | 01 6d 01   
   0x22 | 50 01 03 5f | [type 4] SubType { is_final: false, supertype_idx: Some(CoreTypeIndex { kind: "module", index: 3 }), composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref((ref eq))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }] }), shared: false } }
        | 03 64 6d 01
        | 7f 01 6d 01
   0x2e | 50 01 03 5f | [type 5] SubType { is_final: false, supertype_idx: Some(CoreTypeIndex { kind: "module", index: 3 }), composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref((ref eq))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref((ref (module 0)))), mutable: true }] }), shared: false } }
        | 04 64 6d 01
        | 7f 01 6d 01
        | 64 00 01   
   0x3d | 50 01 03 5f | [type 6] SubType { is_final: false, supertype_idx: Some(CoreTypeIndex { kind: "module", index: 3 }), composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref((ref eq))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref((ref (module 1)))), mutable: false }] }), shared: false } }
        | 04 64 6d 01
        | 7f 01 6d 01
        | 64 01 00   
   0x4c | 50 01 03 5f | [type 7] SubType { is_final: false, supertype_idx: Some(CoreTypeIndex { kind: "module", index: 3 }), composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref((ref eq))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref((ref (module 2)))), mutable: false }] }), shared: false } }
        | 04 64 6d 01
        | 7f 01 6d 01
        | 64 02 00   
   0x5b | 50 01 03 5f | [type 8] SubType { is_final: false, supertype_idx: Some(CoreTypeIndex { kind: "module", index: 3 }), composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref((ref eq))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref((ref eq))), mutable: true }] }), shared: false } }
        | 04 64 6d 01
        | 7f 01 6d 01
        | 64 6d 01   
   0x6a | 50 01 08 5f | [type 9] SubType { is_final: false, supertype_idx: Some(CoreTypeIndex { kind: "module", index: 8 }), composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref((ref eq))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref((ref eq))), mutable: true }] }), shared: false } }
        | 04 64 6d 01
        | 7f 01 6d 01
        | 64 6d 01   
   0x79 | 50 01 03 5f | [type 10] SubType { is_final: false, supertype_idx: Some(CoreTypeIndex { kind: "module", index: 3 }), composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref((ref eq))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref((ref (module 5)))), mutable: true }, FieldType { element_type: Val(Ref((ref (module 5)))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }] }), shared: false } }
        | 06 64 6d 01
        | 7f 01 6d 01
        | 64 05 01 64
        | 05 01 7f 01
   0x8d | 50 01 03 5f | [type 11] SubType { is_final: false, supertype_idx: Some(CoreTypeIndex { kind: "module", index: 3 }), composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref((ref eq))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref((ref (module 10)))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }] }), shared: false } }
        | 06 64 6d 01
        | 7f 01 6d 01
        | 6d 01 64 0a
        | 01 7f 01   
   0xa0 | 50 01 0b 5f | [type 12] SubType { is_final: false, supertype_idx: Some(CoreTypeIndex { kind: "module", index: 11 }), composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref((ref eq))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref((ref (module 10)))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref((ref (module 5)))), mutable: true }, FieldType { element_type: Val(Ref((ref (module 6)))), mutable: true }] }), shared: false } }
        | 08 64 6d 01
        | 7f 01 6d 01
        | 6d 01 64 0a
        | 01 7f 01 64
        | 05 01 64 06
        | 01         
   0xb9 | 50 01 0c 5f | [type 13] SubType { is_final: false, supertype_idx: Some(CoreTypeIndex { kind: "module", index: 12 }), composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref((ref eq))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref((ref (module 10)))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref((ref (module 5)))), mutable: true }, FieldType { element_type: Val(Ref((ref (module 6)))), mutable: true }, FieldType { element_type: Val(Ref((ref (module 5)))), mutable: true }, FieldType { element_type: Val(Ref((ref (module 9)))), mutable: true }, FieldType { element_type: Val(Ref((ref (module 10)))), mutable: true }, FieldType { element_type: Val(Ref((ref (module 5)))), mutable: true }] }), shared: false } }
        | 0c 64 6d 01
        | 7f 01 6d 01
        | 6d 01 64 0a
        | 01 7f 01 64
        | 05 01 64 06
        | 01 64 05 01
        | 64 09 01 64
        | 0a 01 64 05
        | 01         
   0xde | 50 01 0c 5f | [type 14] SubType { is_final: false, supertype_idx: Some(CoreTypeIndex { kind: "module", index: 12 }), composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref((ref eq))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref((ref (module 10)))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref((ref (module 5)))), mutable: true }, FieldType { element_type: Val(Ref((ref (module 6)))), mutable: true }, FieldType { element_type: Val(Ref((ref (module 13)))), mutable: true }] }), shared: false } }
        | 09 64 6d 01
        | 7f 01 6d 01
        | 6d 01 64 0a
        | 01 7f 01 64
        | 05 01 64 06
        | 01 64 0d 01
   0xfa | 50 01 08 5f | [type 15] SubType { is_final: false, supertype_idx: Some(CoreTypeIndex { kind: "module", index: 8 }), composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref((ref eq))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref((ref eq))), mutable: true }, FieldType { element_type: Val(Ref((ref (module 5)))), mutable: false }, FieldType { element_type: Val(I32), mutable: false }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(I32), mutable: false }, FieldType { element_type: Val(I32), mutable: true }] }), shared: false } }
        | 0a 64 6d 01
        | 7f 01 6d 01
        | 64 6d 01 64
        | 05 00 7f 00
        | 7f 01 7f 01
        | 7f 00 7f 01
  0x116 | 50 01 03 5f | [type 16] SubType { is_final: false, supertype_idx: Some(CoreTypeIndex { kind: "module", index: 3 }), composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref((ref eq))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 16)))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref((ref (module 15)))), mutable: true }, FieldType { element_type: Val(Ref((ref eq))), mutable: true }, FieldType { element_type: Val(Ref((ref (module 5)))), mutable: true }, FieldType { element_type: Val(Ref((ref (module 5)))), mutable: true }, FieldType { element_type: Val(Ref((ref (module 5)))), mutable: true }] }), shared: false } }
        | 0b 64 6d 01
        | 7f 01 6d 01
        | 63 10 01 7f
        | 01 7f 01 64
        | 0f 01 64 6d
        | 01 64 05 01
        | 64 05 01 64
        | 05 01      
  0x138 | 5f 04 64 6d | [type 17] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref((ref eq))), mutable: true }, FieldType { element_type: Val(Ref((ref eq))), mutable: true }, FieldType { element_type: Val(Ref((ref (module 15)))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }] }), shared: false } }
        | 01 64 6d 01
        | 64 0f 01 7f
        | 01         
  0x145 | 5f 12 63 10 | [type 18] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref((ref null (module 16)))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref((ref (module 0)))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 13)))), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 13)))), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 13)))), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 13)))), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 13)))), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 13)))), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 13)))), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 13)))), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 13)))), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 13)))), mutable: true }] }), shared: false } }
        | 01 7f 01 64
        | 00 01 7f 01
        | 7f 01 7f 01
        | 6d 01 6d 01
        | 63 0d 01 63
        | 0d 01 63 0d
        | 01 63 0d 01
        | 63 0d 01 63
        | 0d 01 63 0d
        | 01 63 0d 01
        | 63 0d 01 63
        | 0d 01      
--- rec group 1 (implicit) ---
  0x177 | 60 02 64 12 | [type 19] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 18))), Ref(eqref)], results: [] }), shared: false } }
        | 6d 00      
--- rec group 2 (implicit) ---
  0x17d | 60 01 64 09 | [type 20] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 9)))], results: [] }), shared: false } }
        | 00         
--- rec group 3 (implicit) ---
  0x182 | 60 00 00    | [type 21] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [], results: [] }), shared: false } }
--- rec group 4 (implicit) ---
  0x185 | 60 00 00    | [type 22] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [], results: [] }), shared: false } }
--- rec group 5 (implicit) ---
  0x188 | 60 01 7f 00 | [type 23] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [I32], results: [] }), shared: false } }
--- rec group 6 (implicit) ---
  0x18c | 60 02 64 6d | [type 24] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref eq)), I32], results: [] }), shared: false } }
        | 7f 00      
--- rec group 7 (implicit) ---
  0x192 | 60 02 64 06 | [type 25] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 6))), Ref((ref (module 6)))], results: [I32] }), shared: false } }
        | 64 06 01 7f
--- rec group 8 (implicit) ---
  0x19a | 60 02 64 09 | [type 26] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 9))), Ref((ref (module 9)))], results: [I32] }), shared: false } }
        | 64 09 01 7f
--- rec group 9 (implicit) ---
  0x1a2 | 60 02 64 12 | [type 27] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 18))), Ref((ref (module 0)))], results: [Ref((ref (module 5)))] }), shared: false } }
        | 64 00 01 64
        | 05         
--- rec group 10 (implicit) ---
  0x1ab | 60 02 64 12 | [type 28] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 18))), Ref((ref (module 1)))], results: [Ref((ref (module 6)))] }), shared: false } }
        | 64 01 01 64
        | 06         
--- rec group 11 (implicit) ---
  0x1b4 | 60 02 64 12 | [type 29] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 18))), Ref((ref (module 2)))], results: [Ref((ref (module 7)))] }), shared: false } }
        | 64 02 01 64
        | 07         
--- rec group 12 (implicit) ---
  0x1bd | 60 01 64 12 | [type 30] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 18)))], results: [Ref((ref (module 10)))] }), shared: false } }
        | 01 64 0a   
--- rec group 13 (implicit) ---
  0x1c4 | 60 04 64 12 | [type 31] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 18))), Ref((ref (module 10))), Ref((ref eq)), Ref((ref eq))], results: [] }), shared: false } }
        | 64 0a 64 6d
        | 64 6d 00   
--- rec group 14 (implicit) ---
  0x1cf | 60 02 64 12 | [type 32] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 18))), Ref((ref (module 0)))], results: [] }), shared: false } }
        | 64 00 00   
--- rec group 15 (implicit) ---
  0x1d6 | 60 01 64 12 | [type 33] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 18)))], results: [Ref((ref (module 5)))] }), shared: false } }
        | 01 64 05   
--- rec group 16 (implicit) ---
  0x1dd | 60 02 64 05 | [type 34] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 5))), Ref((ref eq))], results: [] }), shared: false } }
        | 64 6d 00   
--- rec group 17 (implicit) ---
  0x1e4 | 60 03 64 12 | [type 35] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 18))), Ref((ref null (module 13))), Ref((ref (module 9)))], results: [Ref((ref (module 13)))] }), shared: false } }
        | 63 0d 64 09
        | 01 64 0d   
--- rec group 18 (implicit) ---
  0x1ef | 60 02 64 12 | [type 36] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 18))), Ref((ref (module 1)))], results: [Ref((ref (module 9)))] }), shared: false } }
        | 64 01 01 64
        | 09         
--- rec group 19 (implicit) ---
  0x1f8 | 60 03 64 12 | [type 37] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 18))), Ref((ref (module 0))), Ref((ref (module 19)))], results: [] }), shared: false } }
        | 64 00 64 13
        | 00         
--- rec group 20 (implicit) ---
  0x201 | 60 00 01 64 | [type 38] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [], results: [Ref((ref (module 18)))] }), shared: false } }
        | 12         
--- rec group 21 (implicit) ---
  0x206 | 60 01 64 6d | [type 39] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref eq))], results: [Ref((ref (module 1)))] }), shared: false } }
        | 01 64 01   
--- rec group 22 (implicit) ---
  0x20d | 60 01 64 6d | [type 40] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref eq))], results: [I32] }), shared: false } }
        | 01 7f      
--- rec group 23 (implicit) ---
  0x213 | 60 02 64 6d | [type 41] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref eq)), Ref((ref eq))], results: [] }), shared: false } }
        | 64 6d 00   
--- rec group 24 (implicit) ---
  0x21a | 60 01 64 6d | [type 42] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref eq))], results: [Ref((ref eq))] }), shared: false } }
        | 01 64 6d   
--- rec group 25 (implicit) ---
  0x221 | 60 02 64 6d | [type 43] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref eq)), I32], results: [Ref((ref eq))] }), shared: false } }
        | 7f 01 64 6d
--- rec group 26 (implicit) ---
  0x229 | 60 02 64 6d | [type 44] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref eq)), I32], results: [I32] }), shared: false } }
        | 7f 01 7f   
--- rec group 27 (implicit) ---
  0x230 | 60 02 64 05 | [type 45] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 5))), I32], results: [Ref(eqref)] }), shared: false } }
        | 7f 01 6d   
--- rec group 28 (implicit) ---
  0x237 | 60 02 64 01 | [type 46] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 1))), I32], results: [I32] }), shared: false } }
        | 7f 01 7f   
--- rec group 29 (implicit) ---
  0x23e | 60 01 64 01 | [type 47] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 1)))], results: [I32] }), shared: false } }
        | 01 7f      
--- rec group 30 (implicit) ---
  0x244 | 60 01 64 12 | [type 48] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 18)))], results: [I32] }), shared: false } }
        | 01 7f      
--- rec group 31 (implicit) ---
  0x24a | 60 02 64 10 | [type 49] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 16))), Ref((ref eq))], results: [] }), shared: false } }
        | 64 6d 00   
--- rec group 32 (implicit) ---
  0x251 | 60 01 63 10 | [type 50] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref null (module 16)))], results: [Ref((ref eq))] }), shared: false } }
        | 01 64 6d   
--- rec group 33 (implicit) ---
  0x258 | 60 02 64 12 | [type 51] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 18))), Ref((ref eq))], results: [Ref((ref eq))] }), shared: false } }
        | 64 6d 01 64
        | 6d         
--- rec group 34 (implicit) ---
  0x261 | 60 03 64 12 | [type 52] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 18))), Ref((ref eq)), Ref((ref eq))], results: [Ref((ref null (module 15)))] }), shared: false } }
        | 64 6d 64 6d
        | 01 63 0f   
--- rec group 35 (implicit) ---
  0x26c | 60 03 64 12 | [type 53] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 18))), Ref((ref eq)), Ref((ref (module 13)))], results: [Ref((ref null (module 15)))] }), shared: false } }
        | 64 6d 64 0d
        | 01 63 0f   
--- rec group 36 (implicit) ---
  0x277 | 60 04 64 12 | [type 54] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 18))), Ref((ref (module 9))), Ref((ref eq)), Ref((ref (module 15)))], results: [] }), shared: false } }
        | 64 09 64 6d
        | 64 0f 00   
--- rec group 37 (implicit) ---
  0x282 | 60 04 64 12 | [type 55] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 18))), Ref((ref eq)), Ref((ref (module 15))), Ref((ref eq))], results: [Ref((ref (module 16)))] }), shared: false } }
        | 64 6d 64 0f
        | 64 6d 01 64
        | 10         
--- rec group 38 (implicit) ---
  0x28f | 60 01 7f 01 | [type 56] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [I32], results: [Ref((ref eq))] }), shared: false } }
        | 64 6d      
--- rec group 39 (implicit) ---
  0x295 | 60 01 63 0f | [type 57] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref null (module 15)))], results: [I32] }), shared: false } }
        | 01 7f      
--- rec group 40 (implicit) ---
  0x29b | 60 02 64 10 | [type 58] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 16))), I32], results: [I32] }), shared: false } }
        | 7f 01 7f   
--- rec group 41 (implicit) ---
  0x2a2 | 60 02 64 12 | [type 59] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 18))), Ref((ref null (module 16)))], results: [Ref((ref eq))] }), shared: false } }
        | 63 10 01 64
        | 6d         
--- rec group 42 (implicit) ---
  0x2ab | 60 01 64 12 | [type 60] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 18)))], results: [] }), shared: false } }
        | 00         
--- rec group 43 (implicit) ---
  0x2b0 | 60 03 64 12 | [type 61] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 18))), Ref((ref (module 16))), I32], results: [I32] }), shared: false } }
        | 64 10 7f 01
        | 7f         
  0x2b9 | 02 39       | import section
  0x2bb | 03          | 3 count
  0x2bc | 03 65 6e 76 | import [func 0] Import { module: "env", name: "reportResult", ty: Func(23) }
        | 0c 72 65 70
        | 6f 72 74 52
        | 65 73 75 6c
        | 74 00 17   
  0x2cf | 03 65 6e 76 | import [func 1] Import { module: "env", name: "translateMethod", ty: Func(24) }
        | 0f 74 72 61
        | 6e 73 6c 61
        | 74 65 4d 65
        | 74 68 6f 64
        | 00 18      
  0x2e5 | 03 65 6e 76 | import [func 2] Import { module: "env", name: "debugLog", ty: Func(23) }
        | 08 64 65 62
        | 75 67 4c 6f
        | 67 00 17   
  0x2f4 | 03 31       | func section
  0x2f6 | 30          | 48 count
  0x2f7 | 19          | [func 3] type 25
  0x2f8 | 1a          | [func 4] type 26
  0x2f9 | 1b          | [func 5] type 27
  0x2fa | 1c          | [func 6] type 28
  0x2fb | 1d          | [func 7] type 29
  0x2fc | 1e          | [func 8] type 30
  0x2fd | 1f          | [func 9] type 31
  0x2fe | 20          | [func 10] type 32
  0x2ff | 21          | [func 11] type 33
  0x300 | 22          | [func 12] type 34
  0x301 | 23          | [func 13] type 35
  0x302 | 24          | [func 14] type 36
  0x303 | 25          | [func 15] type 37
  0x304 | 13          | [func 16] type 19
  0x305 | 26          | [func 17] type 38
  0x306 | 27          | [func 18] type 39
  0x307 | 28          | [func 19] type 40
  0x308 | 18          | [func 20] type 24
  0x309 | 29          | [func 21] type 41
  0x30a | 2a          | [func 22] type 42
  0x30b | 2a          | [func 23] type 42
  0x30c | 2a          | [func 24] type 42
  0x30d | 2b          | [func 25] type 43
  0x30e | 2a          | [func 26] type 42
  0x30f | 2c          | [func 27] type 44
  0x310 | 2d          | [func 28] type 45
  0x311 | 2e          | [func 29] type 46
  0x312 | 28          | [func 30] type 40
  0x313 | 2f          | [func 31] type 47
  0x314 | 30          | [func 32] type 48
  0x315 | 31          | [func 33] type 49
  0x316 | 32          | [func 34] type 50
  0x317 | 32          | [func 35] type 50
  0x318 | 33          | [func 36] type 51
  0x319 | 34          | [func 37] type 52
  0x31a | 35          | [func 38] type 53
  0x31b | 36          | [func 39] type 54
  0x31c | 37          | [func 40] type 55
  0x31d | 38          | [func 41] type 56
  0x31e | 28          | [func 42] type 40
  0x31f | 28          | [func 43] type 40
  0x320 | 39          | [func 44] type 57
  0x321 | 3a          | [func 45] type 58
  0x322 | 3b          | [func 46] type 59
  0x323 | 30          | [func 47] type 48
  0x324 | 3c          | [func 48] type 60
  0x325 | 3d          | [func 49] type 61
  0x326 | 30          | [func 50] type 48
  0x327 | 04 04       | table section
  0x329 | 01          | 1 count
  0x32a | 70 00 64    | [table 0] Table { ty: TableType { element_type: funcref, table64: false, initial: 100, maximum: None, shared: false }, init: RefNull }
  0x32d | 05 03       | memory section
  0x32f | 01          | 1 count
  0x330 | 00 01       | [memory 0] MemoryType { memory64: false, shared: false, initial: 1, maximum: None, page_size_log2: None }
  0x332 | 0d 09       | tag section
  0x334 | 04          | 4 count
  0x335 | 00 14       | [tag 0] TagType { kind: Exception, func_type_idx: 20 }
  0x337 | 00 15       | [tag 1] TagType { kind: Exception, func_type_idx: 21 }
  0x339 | 00 16       | [tag 2] TagType { kind: Exception, func_type_idx: 22 }
  0x33b | 00 17       | [tag 3] TagType { kind: Exception, func_type_idx: 23 }
  0x33d | 06 0d       | global section
  0x33f | 02          | 2 count
  0x340 | 63 09 01    | [global 0] GlobalType { content_type: Ref((ref null (module 9))), mutable: true, shared: false }
  0x343 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x345 | 0b          | end
  0x346 | 7f 01       | [global 1] GlobalType { content_type: I32, mutable: true, shared: false }
  0x348 | 41 80 08    | i32_const value:1024
  0x34b | 0b          | end
  0x34c | 07 fa 02    | export section
  0x34f | 14          | 20 count
  0x350 | 05 62 79 74 | export Export { name: "bytes", kind: Memory, index: 0 }
        | 65 73 02 00
  0x358 | 0d 66 75 6e | export Export { name: "functionTable", kind: Table, index: 0 }
        | 63 74 69 6f
        | 6e 54 61 62
        | 6c 65 01 00
  0x368 | 11 6e 65 77 | export Export { name: "newVirtualMachine", kind: Func, index: 17 }
        | 56 69 72 74
        | 75 61 6c 4d
        | 61 63 68 69
        | 6e 65 00 11
  0x37c | 19 63 72 65 | export Export { name: "createMinimalObjectMemory", kind: Func, index: 47 }
        | 61 74 65 4d
        | 69 6e 69 6d
        | 61 6c 4f 62
        | 6a 65 63 74
        | 4d 65 6d 6f
        | 72 79 00 2f
  0x398 | 12 72 65 73 | export Export { name: "resetMinimalMemory", kind: Func, index: 48 }
        | 65 74 4d 69
        | 6e 69 6d 61
        | 6c 4d 65 6d
        | 6f 72 79 00
        | 30         
  0x3ad | 09 69 6e 74 | export Export { name: "interpret", kind: Func, index: 50 }
        | 65 72 70 72
        | 65 74 00 32
  0x3b9 | 0b 62 79 74 | export Export { name: "byteArrayAt", kind: Func, index: 29 }
        | 65 41 72 72
        | 61 79 41 74
        | 00 1d      
  0x3c7 | 0f 62 79 74 | export Export { name: "byteArrayLength", kind: Func, index: 30 }
        | 65 41 72 72
        | 61 79 4c 65
        | 6e 67 74 68
        | 00 1e      
  0x3d9 | 15 63 6f 70 | export Export { name: "copyByteArrayToMemory", kind: Func, index: 31 }
        | 79 42 79 74
        | 65 41 72 72
        | 61 79 54 6f
        | 4d 65 6d 6f
        | 72 79 00 1f
  0x3f1 | 0f 6d 65 74 | export Export { name: "methodBytecodes", kind: Func, index: 18 }
        | 68 6f 64 42
        | 79 74 65 63
        | 6f 64 65 73
        | 00 12      
  0x403 | 16 73 65 74 | export Export { name: "setMethodFunctionIndex", kind: Func, index: 20 }
        | 4d 65 74 68
        | 6f 64 46 75
        | 6e 63 74 69
        | 6f 6e 49 6e
        | 64 65 78 00
        | 14         
  0x41c | 16 67 65 74 | export Export { name: "getMethodFunctionIndex", kind: Func, index: 19 }
        | 4d 65 74 68
        | 6f 64 46 75
        | 6e 63 74 69
        | 6f 6e 49 6e
        | 64 65 78 00
        | 13         
  0x435 | 0d 6f 6e 43 | export Export { name: "onContextPush", kind: Func, index: 21 }
        | 6f 6e 74 65
        | 78 74 50 75
        | 73 68 00 15
  0x445 | 0e 70 6f 70 | export Export { name: "popFromContext", kind: Func, index: 22 }
        | 46 72 6f 6d
        | 43 6f 6e 74
        | 65 78 74 00
        | 16         
  0x456 | 13 76 61 6c | export Export { name: "valueOfSmallInteger", kind: Func, index: 43 }
        | 75 65 4f 66
        | 53 6d 61 6c
        | 6c 49 6e 74
        | 65 67 65 72
        | 00 2b      
  0x46c | 14 73 6d 61 | export Export { name: "smallIntegerForValue", kind: Func, index: 41 }
        | 6c 6c 49 6e
        | 74 65 67 65
        | 72 46 6f 72
        | 56 61 6c 75
        | 65 00 29   
  0x483 | 0d 63 6c 61 | export Export { name: "classOfObject", kind: Func, index: 36 }
        | 73 73 4f 66
        | 4f 62 6a 65
        | 63 74 00 24
  0x493 | 0f 63 6f 6e | export Export { name: "contextReceiver", kind: Func, index: 23 }
        | 74 65 78 74
        | 52 65 63 65
        | 69 76 65 72
        | 00 17      
  0x4a5 | 0e 6d 65 74 | export Export { name: "methodLiterals", kind: Func, index: 24 }
        | 68 6f 64 4c
        | 69 74 65 72
        | 61 6c 73 00
        | 18         
  0x4b6 | 10 63 6f 6e | export Export { name: "contextLiteralAt", kind: Func, index: 25 }
        | 74 65 78 74
        | 4c 69 74 65
        | 72 61 6c 41
        | 74 00 19   
  0x4c9 | 09 05       | element section
  0x4cb | 01          | 1 count
  0x4cc | 03 00 01    | element declared 1 items [indices]
  0x4cf | 10          | item 16
  0x4d0 | 0a f1 22    | code section
  0x4d3 | 30          | 48 count
============== func 3 ====================
  0x4d4 | 6f          | size of function
  0x4d5 | 02          | 2 local blocks
  0x4d6 | 02 64 01    | 2 locals of type Ref((ref (module 1)))
  0x4d9 | 02 7f       | 2 locals of type I32
  0x4db | 20 00       | local_get local_index:0
  0x4dd | 20 01       | local_get local_index:1
  0x4df | d3          | ref_eq
  0x4e0 | 04 7f       | if blockty:Type(I32)
  0x4e2 | 41 01       | i32_const value:1
  0x4e4 | 0f          | return
  0x4e5 | 05          | else
  0x4e6 | 20 00       | local_get local_index:0
  0x4e8 | fb 02 06 03 | struct_get struct_type_index:6 field_index:3
  0x4ec | 21 02       | local_set local_index:2
  0x4ee | 20 01       | local_get local_index:1
  0x4f0 | fb 02 06 03 | struct_get struct_type_index:6 field_index:3
  0x4f4 | 21 03       | local_set local_index:3
  0x4f6 | 20 02       | local_get local_index:2
  0x4f8 | 20 03       | local_get local_index:3
  0x4fa | d3          | ref_eq
  0x4fb | 04 7f       | if blockty:Type(I32)
  0x4fd | 41 01       | i32_const value:1
  0x4ff | 0f          | return
  0x500 | 05          | else
  0x501 | 20 02       | local_get local_index:2
  0x503 | fb 0f       | array_len
  0x505 | 22 04       | local_tee local_index:4
  0x507 | 20 03       | local_get local_index:3
  0x509 | fb 0f       | array_len
  0x50b | 47          | i32_ne
  0x50c | 04 7f       | if blockty:Type(I32)
  0x50e | 41 00       | i32_const value:0
  0x510 | 0f          | return
  0x511 | 05          | else
  0x512 | 03 7f       | loop blockty:Type(I32)
  0x514 | 20 05       | local_get local_index:5
  0x516 | 20 04       | local_get local_index:4
  0x518 | 46          | i32_eq
  0x519 | 04 7f       | if blockty:Type(I32)
  0x51b | 41 01       | i32_const value:1
  0x51d | 0f          | return
  0x51e | 05          | else
  0x51f | 20 02       | local_get local_index:2
  0x521 | 20 05       | local_get local_index:5
  0x523 | fb 0d 01    | array_get_u array_type_index:1
  0x526 | 20 03       | local_get local_index:3
  0x528 | 20 05       | local_get local_index:5
  0x52a | fb 0d 01    | array_get_u array_type_index:1
  0x52d | 47          | i32_ne
  0x52e | 04 7f       | if blockty:Type(I32)
  0x530 | 41 00       | i32_const value:0
  0x532 | 0f          | return
  0x533 | 05          | else
  0x534 | 20 05       | local_get local_index:5
  0x536 | 41 01       | i32_const value:1
  0x538 | 6a          | i32_add
  0x539 | 21 05       | local_set local_index:5
  0x53b | 0c 02       | br relative_depth:2
  0x53d | 0b          | end
  0x53e | 0b          | end
  0x53f | 0b          | end
  0x540 | 0b          | end
  0x541 | 0b          | end
  0x542 | 0b          | end
  0x543 | 0b          | end
============== func 4 ====================
  0x544 | 22          | size of function
  0x545 | 00          | 0 local blocks
  0x546 | 20 00       | local_get local_index:0
  0x548 | 20 01       | local_get local_index:1
  0x54a | d3          | ref_eq
  0x54b | 04 7f       | if blockty:Type(I32)
  0x54d | 41 01       | i32_const value:1
  0x54f | 0f          | return
  0x550 | 05          | else
  0x551 | 20 00       | local_get local_index:0
  0x553 | fb 02 09 03 | struct_get struct_type_index:9 field_index:3
  0x557 | fb 16 06    | ref_cast_non_null hty:Concrete(Module(6))
  0x55a | 20 01       | local_get local_index:1
  0x55c | fb 02 09 03 | struct_get struct_type_index:9 field_index:3
  0x560 | fb 16 06    | ref_cast_non_null hty:Concrete(Module(6))
  0x563 | 10 03       | call function_index:3
  0x565 | 0b          | end
  0x566 | 0b          | end
============== func 5 ====================
  0x567 | 2a          | size of function
  0x568 | 00          | 0 local blocks
  0x569 | 20 00       | local_get local_index:0
  0x56b | fb 02 12 0b | struct_get struct_type_index:18 field_index:11
  0x56f | d1          | ref_is_null
  0x570 | 04 64 6d    | if blockty:Type(Ref((ref eq)))
  0x573 | 41 c7 75    | i32_const value:-1337
  0x576 | fb 1c       | ref_i31
  0x578 | fb 16 6d    | ref_cast_non_null hty:Abstract { shared: false, ty: Eq }
  0x57b | 05          | else
  0x57c | 20 00       | local_get local_index:0
  0x57e | fb 02 12 0b | struct_get struct_type_index:18 field_index:11
  0x582 | fb 16 6d    | ref_cast_non_null hty:Abstract { shared: false, ty: Eq }
  0x585 | 0b          | end
  0x586 | 20 00       | local_get local_index:0
  0x588 | 10 20       | call function_index:32
  0x58a | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x58c | 20 01       | local_get local_index:1
  0x58e | fb 00 05    | struct_new struct_type_index:5
  0x591 | 0b          | end
============== func 6 ====================
  0x592 | 2a          | size of function
  0x593 | 00          | 0 local blocks
  0x594 | 20 00       | local_get local_index:0
  0x596 | fb 02 12 0c | struct_get struct_type_index:18 field_index:12
  0x59a | d1          | ref_is_null
  0x59b | 04 64 6d    | if blockty:Type(Ref((ref eq)))
  0x59e | 41 c7 75    | i32_const value:-1337
  0x5a1 | fb 1c       | ref_i31
  0x5a3 | fb 16 6d    | ref_cast_non_null hty:Abstract { shared: false, ty: Eq }
  0x5a6 | 05          | else
  0x5a7 | 20 00       | local_get local_index:0
  0x5a9 | fb 02 12 0c | struct_get struct_type_index:18 field_index:12
  0x5ad | fb 16 6d    | ref_cast_non_null hty:Abstract { shared: false, ty: Eq }
  0x5b0 | 0b          | end
  0x5b1 | 20 00       | local_get local_index:0
  0x5b3 | 10 20       | call function_index:32
  0x5b5 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x5b7 | 20 01       | local_get local_index:1
  0x5b9 | fb 00 06    | struct_new struct_type_index:6
  0x5bc | 0b          | end
============== func 7 ====================
  0x5bd | 2a          | size of function
  0x5be | 00          | 0 local blocks
  0x5bf | 20 00       | local_get local_index:0
  0x5c1 | fb 02 12 0d | struct_get struct_type_index:18 field_index:13
  0x5c5 | d1          | ref_is_null
  0x5c6 | 04 64 6d    | if blockty:Type(Ref((ref eq)))
  0x5c9 | 41 c7 75    | i32_const value:-1337
  0x5cc | fb 1c       | ref_i31
  0x5ce | fb 16 6d    | ref_cast_non_null hty:Abstract { shared: false, ty: Eq }
  0x5d1 | 05          | else
  0x5d2 | 20 00       | local_get local_index:0
  0x5d4 | fb 02 12 0d | struct_get struct_type_index:18 field_index:13
  0x5d8 | fb 16 6d    | ref_cast_non_null hty:Abstract { shared: false, ty: Eq }
  0x5db | 0b          | end
  0x5dc | 20 00       | local_get local_index:0
  0x5de | 10 20       | call function_index:32
  0x5e0 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x5e2 | 20 01       | local_get local_index:1
  0x5e4 | fb 00 07    | struct_new struct_type_index:7
  0x5e7 | 0b          | end
============== func 8 ====================
  0x5e8 | 40          | size of function
  0x5e9 | 00          | 0 local blocks
  0x5ea | 20 00       | local_get local_index:0
  0x5ec | fb 02 12 08 | struct_get struct_type_index:18 field_index:8
  0x5f0 | d1          | ref_is_null
  0x5f1 | 04 64 6d    | if blockty:Type(Ref((ref eq)))
  0x5f4 | 41 c7 75    | i32_const value:-1337
  0x5f7 | fb 1c       | ref_i31
  0x5f9 | fb 16 6d    | ref_cast_non_null hty:Abstract { shared: false, ty: Eq }
  0x5fc | 05          | else
  0x5fd | 20 00       | local_get local_index:0
  0x5ff | fb 02 12 08 | struct_get struct_type_index:18 field_index:8
  0x603 | fb 16 6d    | ref_cast_non_null hty:Abstract { shared: false, ty: Eq }
  0x606 | 0b          | end
  0x607 | 20 00       | local_get local_index:0
  0x609 | 10 20       | call function_index:32
  0x60b | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x60d | 20 00       | local_get local_index:0
  0x60f | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x611 | 41 0a       | i32_const value:10
  0x613 | fb 06 00    | array_new array_type_index:0
  0x616 | 10 05       | call function_index:5
  0x618 | 20 00       | local_get local_index:0
  0x61a | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x61c | 41 0a       | i32_const value:10
  0x61e | fb 06 00    | array_new array_type_index:0
  0x621 | 10 05       | call function_index:5
  0x623 | 41 00       | i32_const value:0
  0x625 | fb 00 0a    | struct_new struct_type_index:10
  0x628 | 0b          | end
============== func 9 ====================
  0x629 | a5 02       | size of function
  0x62b | 06          | 6 local blocks
  0x62c | 02 64 05    | 2 locals of type Ref((ref (module 5)))
  0x62f | 02 7f       | 2 locals of type I32
  0x631 | 02 64 05    | 2 locals of type Ref((ref (module 5)))
  0x634 | 02 64 00    | 2 locals of type Ref((ref (module 0)))
  0x637 | 01 7f       | 1 locals of type I32
  0x639 | 01 6d       | 1 locals of type Ref(eqref)
  0x63b | 20 01       | local_get local_index:1
  0x63d | fb 02 0a 03 | struct_get struct_type_index:10 field_index:3
  0x641 | 21 04       | local_set local_index:4
  0x643 | 20 01       | local_get local_index:1
  0x645 | fb 02 0a 04 | struct_get struct_type_index:10 field_index:4
  0x649 | 21 05       | local_set local_index:5
  0x64b | 20 01       | local_get local_index:1
  0x64d | fb 02 0a 05 | struct_get struct_type_index:10 field_index:5
  0x651 | 21 06       | local_set local_index:6
  0x653 | 20 04       | local_get local_index:4
  0x655 | fb 02 05 03 | struct_get struct_type_index:5 field_index:3
  0x659 | fb 0f       | array_len
  0x65b | 21 07       | local_set local_index:7
  0x65d | 20 06       | local_get local_index:6
  0x65f | 20 07       | local_get local_index:7
  0x661 | 4f          | i32_ge_u
  0x662 | 04 40       | if blockty:Empty
  0x664 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x666 | 20 07       | local_get local_index:7
  0x668 | 41 0a       | i32_const value:10
  0x66a | 6a          | i32_add
  0x66b | fb 06 00    | array_new array_type_index:0
  0x66e | 21 0a       | local_set local_index:10
  0x670 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x672 | 20 07       | local_get local_index:7
  0x674 | 41 0a       | i32_const value:10
  0x676 | 6a          | i32_add
  0x677 | fb 06 00    | array_new array_type_index:0
  0x67a | 21 0b       | local_set local_index:11
  0x67c | 41 00       | i32_const value:0
  0x67e | 21 0c       | local_set local_index:12
  0x680 | 02 40       | block blockty:Empty
  0x682 | 03 40       | loop blockty:Empty
  0x684 | 20 0c       | local_get local_index:12
  0x686 | 20 06       | local_get local_index:6
  0x688 | 4f          | i32_ge_u
  0x689 | 0d 01       | br_if relative_depth:1
  0x68b | 20 0a       | local_get local_index:10
  0x68d | 20 0c       | local_get local_index:12
  0x68f | 20 04       | local_get local_index:4
  0x691 | fb 02 05 03 | struct_get struct_type_index:5 field_index:3
  0x695 | 20 0c       | local_get local_index:12
  0x697 | fb 0b 00    | array_get array_type_index:0
  0x69a | fb 0e 00    | array_set array_type_index:0
  0x69d | 20 0b       | local_get local_index:11
  0x69f | 20 0c       | local_get local_index:12
  0x6a1 | 20 05       | local_get local_index:5
  0x6a3 | fb 02 05 03 | struct_get struct_type_index:5 field_index:3
  0x6a7 | 20 0c       | local_get local_index:12
  0x6a9 | fb 0b 00    | array_get array_type_index:0
  0x6ac | fb 0e 00    | array_set array_type_index:0
  0x6af | 20 0c       | local_get local_index:12
  0x6b1 | 41 01       | i32_const value:1
  0x6b3 | 6a          | i32_add
  0x6b4 | 21 0c       | local_set local_index:12
  0x6b6 | 0c 00       | br relative_depth:0
  0x6b8 | 0b          | end
  0x6b9 | 0b          | end
  0x6ba | 20 00       | local_get local_index:0
  0x6bc | 20 0a       | local_get local_index:10
  0x6be | 10 05       | call function_index:5
  0x6c0 | 21 08       | local_set local_index:8
  0x6c2 | 20 00       | local_get local_index:0
  0x6c4 | 20 0b       | local_get local_index:11
  0x6c6 | 10 05       | call function_index:5
  0x6c8 | 21 09       | local_set local_index:9
  0x6ca | 20 01       | local_get local_index:1
  0x6cc | 20 08       | local_get local_index:8
  0x6ce | fb 05 0a 03 | struct_set struct_type_index:10 field_index:3
  0x6d2 | 20 01       | local_get local_index:1
  0x6d4 | 20 09       | local_get local_index:9
  0x6d6 | fb 05 0a 04 | struct_set struct_type_index:10 field_index:4
  0x6da | 20 08       | local_get local_index:8
  0x6dc | 21 04       | local_set local_index:4
  0x6de | 20 09       | local_get local_index:9
  0x6e0 | 21 05       | local_set local_index:5
  0x6e2 | 0b          | end
  0x6e3 | 20 02       | local_get local_index:2
  0x6e5 | fb 14 09    | ref_test_non_null hty:Concrete(Module(9))
  0x6e8 | 04 40       | if blockty:Empty
  0x6ea | 41 00       | i32_const value:0
  0x6ec | 21 0c       | local_set local_index:12
  0x6ee | 02 40       | block blockty:Empty
  0x6f0 | 03 40       | loop blockty:Empty
  0x6f2 | 20 0c       | local_get local_index:12
  0x6f4 | 20 06       | local_get local_index:6
  0x6f6 | 4f          | i32_ge_u
  0x6f7 | 0d 01       | br_if relative_depth:1
  0x6f9 | 20 04       | local_get local_index:4
  0x6fb | fb 02 05 03 | struct_get struct_type_index:5 field_index:3
  0x6ff | 20 0c       | local_get local_index:12
  0x701 | fb 0b 00    | array_get array_type_index:0
  0x704 | 21 0d       | local_set local_index:13
  0x706 | 20 0d       | local_get local_index:13
  0x708 | fb 14 09    | ref_test_non_null hty:Concrete(Module(9))
  0x70b | 04 40       | if blockty:Empty
  0x70d | 20 02       | local_get local_index:2
  0x70f | fb 16 09    | ref_cast_non_null hty:Concrete(Module(9))
  0x712 | 20 0d       | local_get local_index:13
  0x714 | fb 16 09    | ref_cast_non_null hty:Concrete(Module(9))
  0x717 | 10 04       | call function_index:4
  0x719 | 04 40       | if blockty:Empty
  0x71b | 0f          | return
  0x71c | 0b          | end
  0x71d | 0b          | end
  0x71e | 20 0c       | local_get local_index:12
  0x720 | 41 01       | i32_const value:1
  0x722 | 6a          | i32_add
  0x723 | 21 0c       | local_set local_index:12
  0x725 | 0c 00       | br relative_depth:0
  0x727 | 0b          | end
  0x728 | 0b          | end
  0x729 | 0b          | end
  0x72a | 20 04       | local_get local_index:4
  0x72c | fb 02 05 03 | struct_get struct_type_index:5 field_index:3
  0x730 | 20 06       | local_get local_index:6
  0x732 | 20 02       | local_get local_index:2
  0x734 | fb 0e 00    | array_set array_type_index:0
  0x737 | 20 05       | local_get local_index:5
  0x739 | fb 02 05 03 | struct_get struct_type_index:5 field_index:3
  0x73d | 20 06       | local_get local_index:6
  0x73f | 20 03       | local_get local_index:3
  0x741 | fb 0e 00    | array_set array_type_index:0
  0x744 | 20 01       | local_get local_index:1
  0x746 | 20 06       | local_get local_index:6
  0x748 | 41 01       | i32_const value:1
  0x74a | 6a          | i32_add
  0x74b | fb 05 0a 05 | struct_set struct_type_index:10 field_index:5
  0x74f | 0b          | end
============== func 10 ====================
  0x750 | 59          | size of function
  0x751 | 03          | 3 local blocks
  0x752 | 02 6d       | 2 locals of type Ref(eqref)
  0x754 | 02 7f       | 2 locals of type I32
  0x756 | 01 64 12    | 1 locals of type Ref((ref (module 18)))
  0x759 | 20 01       | local_get local_index:1
  0x75b | fb 0f       | array_len
  0x75d | 21 04       | local_set local_index:4
  0x75f | 41 00       | i32_const value:0
  0x761 | 21 05       | local_set local_index:5
  0x763 | 03 40       | loop blockty:Empty
  0x765 | 20 05       | local_get local_index:5
  0x767 | 20 04       | local_get local_index:4
  0x769 | 46          | i32_eq
  0x76a | 04 40       | if blockty:Empty
  0x76c | 0f          | return
  0x76d | 0b          | end
  0x76e | 20 01       | local_get local_index:1
  0x770 | 20 05       | local_get local_index:5
  0x772 | fb 0b 00    | array_get array_type_index:0
  0x775 | 22 03       | local_tee local_index:3
  0x777 | d1          | ref_is_null
  0x778 | 45          | i32_eqz
  0x779 | 04 40       | if blockty:Empty
  0x77b | 20 00       | local_get local_index:0
  0x77d | fb 02 12 07 | struct_get struct_type_index:18 field_index:7
  0x781 | 21 02       | local_set local_index:2
  0x783 | 02 64 12    | block blockty:Type(Ref((ref (module 18))))
  0x786 | 20 00       | local_get local_index:0
  0x788 | 21 06       | local_set local_index:6
  0x78a | 20 02       | local_get local_index:2
  0x78c | fb 16 03    | ref_cast_non_null hty:Concrete(Module(3))
  0x78f | 20 03       | local_get local_index:3
  0x791 | fb 05 03 02 | struct_set struct_type_index:3 field_index:2
  0x795 | 20 06       | local_get local_index:6
  0x797 | 0b          | end
  0x798 | 20 03       | local_get local_index:3
  0x79a | fb 05 12 07 | struct_set struct_type_index:18 field_index:7
  0x79e | 20 05       | local_get local_index:5
  0x7a0 | 41 01       | i32_const value:1
  0x7a2 | 6a          | i32_add
  0x7a3 | 21 05       | local_set local_index:5
  0x7a5 | 0c 01       | br relative_depth:1
  0x7a7 | 0b          | end
  0x7a8 | 0b          | end
  0x7a9 | 0b          | end
============== func 11 ====================
  0x7aa | 0d          | size of function
  0x7ab | 00          | 0 local blocks
  0x7ac | 20 00       | local_get local_index:0
  0x7ae | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x7b0 | 41 00       | i32_const value:0
  0x7b2 | fb 06 00    | array_new array_type_index:0
  0x7b5 | 10 05       | call function_index:5
  0x7b7 | 0b          | end
============== func 12 ====================
  0x7b8 | 5b          | size of function
  0x7b9 | 02          | 2 local blocks
  0x7ba | 02 64 00    | 2 locals of type Ref((ref (module 0)))
  0x7bd | 02 7f       | 2 locals of type I32
  0x7bf | 20 00       | local_get local_index:0
  0x7c1 | fb 02 05 03 | struct_get struct_type_index:5 field_index:3
  0x7c5 | 21 03       | local_set local_index:3
  0x7c7 | 41 00       | i32_const value:0
  0x7c9 | 21 04       | local_set local_index:4
  0x7cb | 20 03       | local_get local_index:3
  0x7cd | fb 0f       | array_len
  0x7cf | 21 05       | local_set local_index:5
  0x7d1 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x7d3 | 20 05       | local_get local_index:5
  0x7d5 | 41 01       | i32_const value:1
  0x7d7 | 6a          | i32_add
  0x7d8 | fb 06 00    | array_new array_type_index:0
  0x7db | 21 02       | local_set local_index:2
  0x7dd | 20 05       | local_get local_index:5
  0x7df | 41 00       | i32_const value:0
  0x7e1 | 4b          | i32_gt_u
  0x7e2 | 04 40       | if blockty:Empty
  0x7e4 | 03 40       | loop blockty:Empty
  0x7e6 | 20 02       | local_get local_index:2
  0x7e8 | 20 04       | local_get local_index:4
  0x7ea | 20 03       | local_get local_index:3
  0x7ec | 20 04       | local_get local_index:4
  0x7ee | fb 0b 00    | array_get array_type_index:0
  0x7f1 | fb 0e 00    | array_set array_type_index:0
  0x7f4 | 20 04       | local_get local_index:4
  0x7f6 | 41 01       | i32_const value:1
  0x7f8 | 6a          | i32_add
  0x7f9 | 22 04       | local_tee local_index:4
  0x7fb | 20 05       | local_get local_index:5
  0x7fd | 48          | i32_lt_s
  0x7fe | 0d 00       | br_if relative_depth:0
  0x800 | 0b          | end
  0x801 | 0b          | end
  0x802 | 20 02       | local_get local_index:2
  0x804 | 20 04       | local_get local_index:4
  0x806 | 20 01       | local_get local_index:1
  0x808 | fb 0e 00    | array_set array_type_index:0
  0x80b | 20 00       | local_get local_index:0
  0x80d | 20 02       | local_get local_index:2
  0x80f | fb 05 05 03 | struct_set struct_type_index:5 field_index:3
  0x813 | 0b          | end
============== func 13 ====================
  0x814 | c1 02       | size of function
  0x816 | 03          | 3 local blocks
  0x817 | 01 64 0d    | 1 locals of type Ref((ref (module 13)))
  0x81a | 01 64 0e    | 1 locals of type Ref((ref (module 14)))
  0x81d | 01 7f       | 1 locals of type I32
  0x81f | 41 00       | i32_const value:0
  0x821 | 21 05       | local_set local_index:5
  0x823 | 20 00       | local_get local_index:0
  0x825 | fb 02 12 08 | struct_get struct_type_index:18 field_index:8
  0x829 | d1          | ref_is_null
  0x82a | 04 64 6d    | if blockty:Type(Ref((ref eq)))
  0x82d | 41 01       | i32_const value:1
  0x82f | 21 05       | local_set local_index:5
  0x831 | 41 c7 75    | i32_const value:-1337
  0x834 | fb 1c       | ref_i31
  0x836 | fb 16 6d    | ref_cast_non_null hty:Abstract { shared: false, ty: Eq }
  0x839 | 05          | else
  0x83a | 20 00       | local_get local_index:0
  0x83c | fb 02 12 08 | struct_get struct_type_index:18 field_index:8
  0x840 | fb 16 6d    | ref_cast_non_null hty:Abstract { shared: false, ty: Eq }
  0x843 | 0b          | end
  0x844 | 20 00       | local_get local_index:0
  0x846 | 10 20       | call function_index:32
  0x848 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x84a | 20 01       | local_get local_index:1
  0x84c | 20 00       | local_get local_index:0
  0x84e | 10 08       | call function_index:8
  0x850 | 41 00       | i32_const value:0
  0x852 | 20 00       | local_get local_index:0
  0x854 | 10 0b       | call function_index:11
  0x856 | 20 00       | local_get local_index:0
  0x858 | 41 00       | i32_const value:0
  0x85a | 41 10       | i32_const value:16
  0x85c | fb 06 01    | array_new array_type_index:1
  0x85f | 10 06       | call function_index:6
  0x861 | 20 00       | local_get local_index:0
  0x863 | 10 0b       | call function_index:11
  0x865 | 20 02       | local_get local_index:2
  0x867 | 20 00       | local_get local_index:0
  0x869 | 10 08       | call function_index:8
  0x86b | 20 00       | local_get local_index:0
  0x86d | 10 0b       | call function_index:11
  0x86f | fb 00 0d    | struct_new struct_type_index:13
  0x872 | 21 03       | local_set local_index:3
  0x874 | 20 01       | local_get local_index:1
  0x876 | d1          | ref_is_null
  0x877 | 45          | i32_eqz
  0x878 | 04 40       | if blockty:Empty
  0x87a | 20 01       | local_get local_index:1
  0x87c | fb 02 0d 08 | struct_get struct_type_index:13 field_index:8
  0x880 | 20 03       | local_get local_index:3
  0x882 | 10 0c       | call function_index:12
  0x884 | 0b          | end
  0x885 | 20 00       | local_get local_index:0
  0x887 | fb 02 12 09 | struct_get struct_type_index:18 field_index:9
  0x88b | d1          | ref_is_null
  0x88c | 04 64 6d    | if blockty:Type(Ref((ref eq)))
  0x88f | 41 01       | i32_const value:1
  0x891 | 21 05       | local_set local_index:5
  0x893 | 41 c7 75    | i32_const value:-1337
  0x896 | fb 1c       | ref_i31
  0x898 | fb 16 6d    | ref_cast_non_null hty:Abstract { shared: false, ty: Eq }
  0x89b | 05          | else
  0x89c | 20 00       | local_get local_index:0
  0x89e | fb 02 12 09 | struct_get struct_type_index:18 field_index:9
  0x8a2 | fb 16 6d    | ref_cast_non_null hty:Abstract { shared: false, ty: Eq }
  0x8a5 | 0b          | end
  0x8a6 | 20 00       | local_get local_index:0
  0x8a8 | 10 20       | call function_index:32
  0x8aa | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x8ac | 20 01       | local_get local_index:1
  0x8ae | d1          | ref_is_null
  0x8af | 04 6d       | if blockty:Type(Ref(eqref))
  0x8b1 | 20 00       | local_get local_index:0
  0x8b3 | fb 02 12 0a | struct_get struct_type_index:18 field_index:10
  0x8b7 | 05          | else
  0x8b8 | 20 01       | local_get local_index:1
  0x8ba | fb 02 0d 00 | struct_get struct_type_index:13 field_index:0
  0x8be | 0b          | end
  0x8bf | 20 00       | local_get local_index:0
  0x8c1 | 10 08       | call function_index:8
  0x8c3 | 41 98 01    | i32_const value:152
  0x8c6 | 20 00       | local_get local_index:0
  0x8c8 | 10 0b       | call function_index:11
  0x8ca | 20 00       | local_get local_index:0
  0x8cc | 41 00       | i32_const value:0
  0x8ce | 41 10       | i32_const value:16
  0x8d0 | fb 06 01    | array_new array_type_index:1
  0x8d3 | 10 06       | call function_index:6
  0x8d5 | 20 03       | local_get local_index:3
  0x8d7 | fb 00 0e    | struct_new struct_type_index:14
  0x8da | 21 04       | local_set local_index:4
  0x8dc | 20 03       | local_get local_index:3
  0x8de | 20 04       | local_get local_index:4
  0x8e0 | fb 05 0d 00 | struct_set struct_type_index:13 field_index:0
  0x8e4 | 20 05       | local_get local_index:5
  0x8e6 | 45          | i32_eqz
  0x8e7 | 04 40       | if blockty:Empty
  0x8e9 | 20 00       | local_get local_index:0
  0x8eb | 20 04       | local_get local_index:4
  0x8ed | fb 02 0e 00 | struct_get struct_type_index:14 field_index:0
  0x8f1 | 20 04       | local_get local_index:4
  0x8f3 | fb 02 0e 03 | struct_get struct_type_index:14 field_index:3
  0x8f7 | 20 04       | local_get local_index:4
  0x8f9 | fb 02 0e 04 | struct_get struct_type_index:14 field_index:4
  0x8fd | 20 04       | local_get local_index:4
  0x8ff | fb 02 0e 06 | struct_get struct_type_index:14 field_index:6
  0x903 | 20 04       | local_get local_index:4
  0x905 | fb 02 0e 07 | struct_get struct_type_index:14 field_index:7
  0x909 | 20 04       | local_get local_index:4
  0x90b | fb 02 0e 08 | struct_get struct_type_index:14 field_index:8
  0x90f | fb 08 00 06 | array_new_fixed array_type_index:0 array_size:6
  0x913 | 10 0a       | call function_index:10
  0x915 | 20 00       | local_get local_index:0
  0x917 | 20 03       | local_get local_index:3
  0x919 | fb 02 0d 00 | struct_get struct_type_index:13 field_index:0
  0x91d | 20 03       | local_get local_index:3
  0x91f | fb 02 0d 03 | struct_get struct_type_index:13 field_index:3
  0x923 | 20 03       | local_get local_index:3
  0x925 | fb 02 0d 04 | struct_get struct_type_index:13 field_index:4
  0x929 | 20 03       | local_get local_index:3
  0x92b | fb 02 0d 06 | struct_get struct_type_index:13 field_index:6
  0x92f | 20 03       | local_get local_index:3
  0x931 | fb 02 0d 07 | struct_get struct_type_index:13 field_index:7
  0x935 | 20 03       | local_get local_index:3
  0x937 | fb 02 0d 08 | struct_get struct_type_index:13 field_index:8
  0x93b | 20 03       | local_get local_index:3
  0x93d | fb 02 0d 09 | struct_get struct_type_index:13 field_index:9
  0x941 | 20 03       | local_get local_index:3
  0x943 | fb 02 0d 0a | struct_get struct_type_index:13 field_index:10
  0x947 | 20 03       | local_get local_index:3
  0x949 | fb 02 0d 0b | struct_get struct_type_index:13 field_index:11
  0x94d | fb 08 00 09 | array_new_fixed array_type_index:0 array_size:9
  0x951 | 10 0a       | call function_index:10
  0x953 | 0b          | end
  0x954 | 20 03       | local_get local_index:3
  0x956 | 0b          | end
============== func 14 ====================
  0x957 | 2a          | size of function
  0x958 | 00          | 0 local blocks
  0x959 | 20 00       | local_get local_index:0
  0x95b | fb 02 12 10 | struct_get struct_type_index:18 field_index:16
  0x95f | d1          | ref_is_null
  0x960 | 04 64 6d    | if blockty:Type(Ref((ref eq)))
  0x963 | 41 c7 75    | i32_const value:-1337
  0x966 | fb 1c       | ref_i31
  0x968 | fb 16 6d    | ref_cast_non_null hty:Abstract { shared: false, ty: Eq }
  0x96b | 05          | else
  0x96c | 20 00       | local_get local_index:0
  0x96e | fb 02 12 10 | struct_get struct_type_index:18 field_index:16
  0x972 | fb 16 6d    | ref_cast_non_null hty:Abstract { shared: false, ty: Eq }
  0x975 | 0b          | end
  0x976 | 20 00       | local_get local_index:0
  0x978 | 10 20       | call function_index:32
  0x97a | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x97c | 20 01       | local_get local_index:1
  0x97e | fb 00 09    | struct_new struct_type_index:9
  0x981 | 0b          | end
============== func 15 ====================
  0x982 | 31          | size of function
  0x983 | 01          | 1 local blocks
  0x984 | 02 7f       | 2 locals of type I32
  0x986 | 41 00       | i32_const value:0
  0x988 | 21 03       | local_set local_index:3
  0x98a | 20 01       | local_get local_index:1
  0x98c | fb 0f       | array_len
  0x98e | 21 04       | local_set local_index:4
  0x990 | 03 40       | loop blockty:Empty
  0x992 | 20 03       | local_get local_index:3
  0x994 | 20 04       | local_get local_index:4
  0x996 | 46          | i32_eq
  0x997 | 04 40       | if blockty:Empty
  0x999 | 0f          | return
  0x99a | 05          | else
  0x99b | 20 00       | local_get local_index:0
  0x99d | 20 01       | local_get local_index:1
  0x99f | 20 03       | local_get local_index:3
  0x9a1 | fb 0b 00    | array_get array_type_index:0
  0x9a4 | 20 02       | local_get local_index:2
  0x9a6 | 14 13       | call_ref type_index:19
  0x9a8 | 0b          | end
  0x9a9 | 20 03       | local_get local_index:3
  0x9ab | 41 01       | i32_const value:1
  0x9ad | 6a          | i32_add
  0x9ae | 21 03       | local_set local_index:3
  0x9b0 | 0c 00       | br relative_depth:0
  0x9b2 | 0b          | end
  0x9b3 | 0b          | end
============== func 16 ====================
  0x9b4 | 5a          | size of function
  0x9b5 | 00          | 0 local blocks
  0x9b6 | 20 01       | local_get local_index:1
  0x9b8 | fb 16 0d    | ref_cast_non_null hty:Concrete(Module(13))
  0x9bb | fb 02 0d 08 | struct_get struct_type_index:13 field_index:8
  0x9bf | 20 00       | local_get local_index:0
  0x9c1 | fb 02 12 0b | struct_get struct_type_index:18 field_index:11
  0x9c5 | fb 16 6d    | ref_cast_non_null hty:Abstract { shared: false, ty: Eq }
  0x9c8 | fb 05 05 00 | struct_set struct_type_index:5 field_index:0
  0x9cc | 20 01       | local_get local_index:1
  0x9ce | fb 16 0d    | ref_cast_non_null hty:Concrete(Module(13))
  0x9d1 | fb 02 0d 0b | struct_get struct_type_index:13 field_index:11
  0x9d5 | 20 00       | local_get local_index:0
  0x9d7 | fb 02 12 0b | struct_get struct_type_index:18 field_index:11
  0x9db | fb 16 6d    | ref_cast_non_null hty:Abstract { shared: false, ty: Eq }
  0x9de | fb 05 05 00 | struct_set struct_type_index:5 field_index:0
  0x9e2 | 20 01       | local_get local_index:1
  0x9e4 | fb 16 0d    | ref_cast_non_null hty:Concrete(Module(13))
  0x9e7 | fb 02 0d 00 | struct_get struct_type_index:13 field_index:0
  0x9eb | fb 16 0e    | ref_cast_non_null hty:Concrete(Module(14))
  0x9ee | 20 00       | local_get local_index:0
  0x9f0 | fb 02 12 09 | struct_get struct_type_index:18 field_index:9
  0x9f4 | fb 16 6d    | ref_cast_non_null hty:Abstract { shared: false, ty: Eq }
  0x9f7 | fb 05 0e 00 | struct_set struct_type_index:14 field_index:0
  0x9fb | 20 00       | local_get local_index:0
  0x9fd | 20 01       | local_get local_index:1
  0x9ff | fb 16 0d    | ref_cast_non_null hty:Concrete(Module(13))
  0xa02 | fb 02 0d 08 | struct_get struct_type_index:13 field_index:8
  0xa06 | fb 02 05 03 | struct_get struct_type_index:5 field_index:3
  0xa0a | d2 10       | ref_func function_index:16
  0xa0c | 10 0f       | call function_index:15
  0xa0e | 0b          | end
============== func 17 ====================
  0xa0f | b4 07       | size of function
  0xa11 | 02          | 2 local blocks
  0xa12 | 01 64 12    | 1 locals of type Ref((ref (module 18)))
  0xa15 | 03 64 0d    | 3 locals of type Ref((ref (module 13)))
  0xa18 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0xa1a | 41 01       | i32_const value:1
  0xa1c | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0xa1e | 41 80 02    | i32_const value:256
  0xa21 | fb 06 00    | array_new array_type_index:0
  0xa24 | 41 00       | i32_const value:0
  0xa26 | 41 e8 07    | i32_const value:1000
  0xa29 | 41 01       | i32_const value:1
  0xa2b | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0xa2d | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0xa2f | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0xa31 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0xa33 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0xa35 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0xa37 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0xa39 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0xa3b | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0xa3d | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0xa3f | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0xa41 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0xa43 | fb 00 12    | struct_new struct_type_index:18
  0xa46 | 21 00       | local_set local_index:0
  0xa48 | 20 00       | local_get local_index:0
  0xa4a | 20 00       | local_get local_index:0
  0xa4c | d0 0d       | ref_null hty:Concrete(Module(13))
  0xa4e | 20 00       | local_get local_index:0
  0xa50 | 41 cf 00    | i32_const value:79
  0xa53 | 41 e2 00    | i32_const value:98
  0xa56 | 41 ea 00    | i32_const value:106
  0xa59 | 41 e5 00    | i32_const value:101
  0xa5c | 41 e3 00    | i32_const value:99
  0xa5f | 41 f4 00    | i32_const value:116
  0xa62 | fb 08 01 06 | array_new_fixed array_type_index:1 array_size:6
  0xa66 | 10 0e       | call function_index:14
  0xa68 | 10 0d       | call function_index:13
  0xa6a | fb 05 12 08 | struct_set struct_type_index:18 field_index:8
  0xa6e | 20 00       | local_get local_index:0
  0xa70 | 20 00       | local_get local_index:0
  0xa72 | 20 00       | local_get local_index:0
  0xa74 | fb 02 12 08 | struct_get struct_type_index:18 field_index:8
  0xa78 | 20 00       | local_get local_index:0
  0xa7a | 41 d5 00    | i32_const value:85
  0xa7d | 41 ee 00    | i32_const value:110
  0xa80 | 41 e4 00    | i32_const value:100
  0xa83 | 41 e5 00    | i32_const value:101
  0xa86 | 41 e6 00    | i32_const value:102
  0xa89 | 41 e9 00    | i32_const value:105
  0xa8c | 41 ee 00    | i32_const value:110
  0xa8f | 41 e5 00    | i32_const value:101
  0xa92 | 41 e4 00    | i32_const value:100
  0xa95 | 41 cf 00    | i32_const value:79
  0xa98 | 41 e2 00    | i32_const value:98
  0xa9b | 41 ea 00    | i32_const value:106
  0xa9e | 41 e5 00    | i32_const value:101
  0xaa1 | 41 e3 00    | i32_const value:99
  0xaa4 | 41 f4 00    | i32_const value:116
  0xaa7 | fb 08 01 0f | array_new_fixed array_type_index:1 array_size:15
  0xaab | 10 0e       | call function_index:14
  0xaad | 10 0d       | call function_index:13
  0xaaf | 20 00       | local_get local_index:0
  0xab1 | 10 20       | call function_index:32
  0xab3 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0xab5 | fb 00 04    | struct_new struct_type_index:4
  0xab8 | fb 05 12 06 | struct_set struct_type_index:18 field_index:6
  0xabc | 20 00       | local_get local_index:0
  0xabe | 20 00       | local_get local_index:0
  0xac0 | fb 02 12 06 | struct_get struct_type_index:18 field_index:6
  0xac4 | fb 05 12 07 | struct_set struct_type_index:18 field_index:7
  0xac8 | 20 00       | local_get local_index:0
  0xaca | 20 00       | local_get local_index:0
  0xacc | fb 02 12 08 | struct_get struct_type_index:18 field_index:8
  0xad0 | 20 00       | local_get local_index:0
  0xad2 | 41 c2 00    | i32_const value:66
  0xad5 | 41 e5 00    | i32_const value:101
  0xad8 | 41 e8 00    | i32_const value:104
  0xadb | 41 e1 00    | i32_const value:97
  0xade | 41 f6 00    | i32_const value:118
  0xae1 | 41 e9 00    | i32_const value:105
  0xae4 | 41 ef 00    | i32_const value:111
  0xae7 | 41 f2 00    | i32_const value:114
  0xaea | fb 08 01 08 | array_new_fixed array_type_index:1 array_size:8
  0xaee | 10 0e       | call function_index:14
  0xaf0 | 10 0d       | call function_index:13
  0xaf2 | 21 02       | local_set local_index:2
  0xaf4 | 20 00       | local_get local_index:0
  0xaf6 | 20 02       | local_get local_index:2
  0xaf8 | 20 00       | local_get local_index:0
  0xafa | 41 c3 00    | i32_const value:67
  0xafd | 41 ec 00    | i32_const value:108
  0xb00 | 41 e1 00    | i32_const value:97
  0xb03 | 41 f3 00    | i32_const value:115
  0xb06 | 41 f3 00    | i32_const value:115
  0xb09 | 41 c4 00    | i32_const value:68
  0xb0c | 41 e5 00    | i32_const value:101
  0xb0f | 41 f3 00    | i32_const value:115
  0xb12 | 41 e3 00    | i32_const value:99
  0xb15 | 41 f2 00    | i32_const value:114
  0xb18 | 41 e9 00    | i32_const value:105
  0xb1b | 41 f0 00    | i32_const value:112
  0xb1e | 41 f4 00    | i32_const value:116
  0xb21 | 41 e9 00    | i32_const value:105
  0xb24 | 41 ef 00    | i32_const value:111
  0xb27 | 41 ee 00    | i32_const value:110
  0xb2a | fb 08 01 10 | array_new_fixed array_type_index:1 array_size:16
  0xb2e | 10 0e       | call function_index:14
  0xb30 | 10 0d       | call function_index:13
  0xb32 | 21 01       | local_set local_index:1
  0xb34 | 20 00       | local_get local_index:0
  0xb36 | 20 00       | local_get local_index:0
  0xb38 | 20 01       | local_get local_index:1
  0xb3a | 20 00       | local_get local_index:0
  0xb3c | 41 c3 00    | i32_const value:67
  0xb3f | 41 ec 00    | i32_const value:108
  0xb42 | 41 e1 00    | i32_const value:97
  0xb45 | 41 f3 00    | i32_const value:115
  0xb48 | 41 f3 00    | i32_const value:115
  0xb4b | fb 08 01 05 | array_new_fixed array_type_index:1 array_size:5
  0xb4f | 10 0e       | call function_index:14
  0xb51 | 10 0d       | call function_index:13
  0xb53 | fb 05 12 0a | struct_set struct_type_index:18 field_index:10
  0xb57 | 20 00       | local_get local_index:0
  0xb59 | fb 02 12 08 | struct_get struct_type_index:18 field_index:8
  0xb5d | fb 02 0d 00 | struct_get struct_type_index:13 field_index:0
  0xb61 | fb 16 0e    | ref_cast_non_null hty:Concrete(Module(14))
  0xb64 | 20 00       | local_get local_index:0
  0xb66 | fb 02 12 0a | struct_get struct_type_index:18 field_index:10
  0xb6a | fb 16 6d    | ref_cast_non_null hty:Abstract { shared: false, ty: Eq }
  0xb6d | fb 05 0e 03 | struct_set struct_type_index:14 field_index:3
  0xb71 | 20 00       | local_get local_index:0
  0xb73 | 20 00       | local_get local_index:0
  0xb75 | 20 01       | local_get local_index:1
  0xb77 | 20 00       | local_get local_index:0
  0xb79 | 41 cd 00    | i32_const value:77
  0xb7c | 41 e5 00    | i32_const value:101
  0xb7f | 41 f4 00    | i32_const value:116
  0xb82 | 41 e1 00    | i32_const value:97
  0xb85 | 41 e3 00    | i32_const value:99
  0xb88 | 41 ec 00    | i32_const value:108
  0xb8b | 41 e1 00    | i32_const value:97
  0xb8e | 41 f3 00    | i32_const value:115
  0xb91 | 41 f3 00    | i32_const value:115
  0xb94 | fb 08 01 09 | array_new_fixed array_type_index:1 array_size:9
  0xb98 | 10 0e       | call function_index:14
  0xb9a | 10 0d       | call function_index:13
  0xb9c | fb 05 12 09 | struct_set struct_type_index:18 field_index:9
  0xba0 | 20 00       | local_get local_index:0
  0xba2 | 20 00       | local_get local_index:0
  0xba4 | 20 00       | local_get local_index:0
  0xba6 | 20 00       | local_get local_index:0
  0xba8 | fb 02 12 08 | struct_get struct_type_index:18 field_index:8
  0xbac | 20 00       | local_get local_index:0
  0xbae | 41 c3 00    | i32_const value:67
  0xbb1 | 41 ef 00    | i32_const value:111
  0xbb4 | 41 ec 00    | i32_const value:108
  0xbb7 | 41 ec 00    | i32_const value:108
  0xbba | 41 e5 00    | i32_const value:101
  0xbbd | 41 e3 00    | i32_const value:99
  0xbc0 | 41 f4 00    | i32_const value:116
  0xbc3 | 41 e9 00    | i32_const value:105
  0xbc6 | 41 ef 00    | i32_const value:111
  0xbc9 | 41 ee 00    | i32_const value:110
  0xbcc | fb 08 01 0a | array_new_fixed array_type_index:1 array_size:10
  0xbd0 | 10 0e       | call function_index:14
  0xbd2 | 10 0d       | call function_index:13
  0xbd4 | 20 00       | local_get local_index:0
  0xbd6 | 41 d3 00    | i32_const value:83
  0xbd9 | 41 e5 00    | i32_const value:101
  0xbdc | 41 f1 00    | i32_const value:113
  0xbdf | 41 f5 00    | i32_const value:117
  0xbe2 | 41 e5 00    | i32_const value:101
  0xbe5 | 41 ee 00    | i32_const value:110
  0xbe8 | 41 e3 00    | i32_const value:99
  0xbeb | 41 e5 00    | i32_const value:101
  0xbee | 41 e1 00    | i32_const value:97
  0xbf1 | 41 e2 00    | i32_const value:98
  0xbf4 | 41 ec 00    | i32_const value:108
  0xbf7 | 41 e5 00    | i32_const value:101
  0xbfa | 41 c3 00    | i32_const value:67
  0xbfd | 41 ef 00    | i32_const value:111
  0xc00 | 41 ec 00    | i32_const value:108
  0xc03 | 41 ec 00    | i32_const value:108
  0xc06 | 41 e5 00    | i32_const value:101
  0xc09 | 41 e3 00    | i32_const value:99
  0xc0c | 41 f4 00    | i32_const value:116
  0xc0f | 41 e9 00    | i32_const value:105
  0xc12 | 41 ef 00    | i32_const value:111
  0xc15 | 41 ee 00    | i32_const value:110
  0xc18 | fb 08 01 16 | array_new_fixed array_type_index:1 array_size:22
  0xc1c | 10 0e       | call function_index:14
  0xc1e | 10 0d       | call function_index:13
  0xc20 | 20 00       | local_get local_index:0
  0xc22 | 41 c1 00    | i32_const value:65
  0xc25 | 41 f2 00    | i32_const value:114
  0xc28 | 41 f2 00    | i32_const value:114
  0xc2b | 41 e1 00    | i32_const value:97
  0xc2e | 41 f9 00    | i32_const value:121
  0xc31 | 41 e5 00    | i32_const value:101
  0xc34 | 41 e4 00    | i32_const value:100
  0xc37 | 41 c3 00    | i32_const value:67
  0xc3a | 41 ef 00    | i32_const value:111
  0xc3d | 41 ec 00    | i32_const value:108
  0xc40 | 41 ec 00    | i32_const value:108
  0xc43 | 41 e5 00    | i32_const value:101
  0xc46 | 41 e3 00    | i32_const value:99
  0xc49 | 41 f4 00    | i32_const value:116
  0xc4c | 41 e9 00    | i32_const value:105
  0xc4f | 41 ef 00    | i32_const value:111
  0xc52 | 41 ee 00    | i32_const value:110
  0xc55 | fb 08 01 11 | array_new_fixed array_type_index:1 array_size:17
  0xc59 | 10 0e       | call function_index:14
  0xc5b | 10 0d       | call function_index:13
  0xc5d | 21 03       | local_set local_index:3
  0xc5f | 20 00       | local_get local_index:0
  0xc61 | 20 00       | local_get local_index:0
  0xc63 | 20 03       | local_get local_index:3
  0xc65 | 20 00       | local_get local_index:0
  0xc67 | 41 c1 00    | i32_const value:65
  0xc6a | 41 f2 00    | i32_const value:114
  0xc6d | 41 f2 00    | i32_const value:114
  0xc70 | 41 e1 00    | i32_const value:97
  0xc73 | 41 f9 00    | i32_const value:121
  0xc76 | fb 08 01 05 | array_new_fixed array_type_index:1 array_size:5
  0xc7a | 10 0e       | call function_index:14
  0xc7c | 10 0d       | call function_index:13
  0xc7e | fb 05 12 0b | struct_set struct_type_index:18 field_index:11
  0xc82 | 20 00       | local_get local_index:0
  0xc84 | 20 00       | local_get local_index:0
  0xc86 | 20 03       | local_get local_index:3
  0xc88 | 20 00       | local_get local_index:0
  0xc8a | 41 c2 00    | i32_const value:66
  0xc8d | 41 f9 00    | i32_const value:121
  0xc90 | 41 f4 00    | i32_const value:116
  0xc93 | 41 e5 00    | i32_const value:101
  0xc96 | 41 c1 00    | i32_const value:65
  0xc99 | 41 f2 00    | i32_const value:114
  0xc9c | 41 f2 00    | i32_const value:114
  0xc9f | 41 e1 00    | i32_const value:97
  0xca2 | 41 f9 00    | i32_const value:121
  0xca5 | fb 08 01 09 | array_new_fixed array_type_index:1 array_size:9
  0xca9 | 10 0e       | call function_index:14
  0xcab | 10 0d       | call function_index:13
  0xcad | fb 05 12 0c | struct_set struct_type_index:18 field_index:12
  0xcb1 | 20 00       | local_get local_index:0
  0xcb3 | 20 00       | local_get local_index:0
  0xcb5 | 20 03       | local_get local_index:3
  0xcb7 | 20 00       | local_get local_index:0
  0xcb9 | 41 d7 00    | i32_const value:87
  0xcbc | 41 ef 00    | i32_const value:111
  0xcbf | 41 f2 00    | i32_const value:114
  0xcc2 | 41 e4 00    | i32_const value:100
  0xcc5 | 41 c1 00    | i32_const value:65
  0xcc8 | 41 f2 00    | i32_const value:114
  0xccb | 41 f2 00    | i32_const value:114
  0xcce | 41 e1 00    | i32_const value:97
  0xcd1 | 41 f9 00    | i32_const value:121
  0xcd4 | fb 08 01 09 | array_new_fixed array_type_index:1 array_size:9
  0xcd8 | 10 0e       | call function_index:14
  0xcda | 10 0d       | call function_index:13
  0xcdc | fb 05 12 0d | struct_set struct_type_index:18 field_index:13
  0xce0 | 20 00       | local_get local_index:0
  0xce2 | 20 00       | local_get local_index:0
  0xce4 | 20 00       | local_get local_index:0
  0xce6 | fb 02 12 08 | struct_get struct_type_index:18 field_index:8
  0xcea | 20 00       | local_get local_index:0
  0xcec | 41 d3 00    | i32_const value:83
  0xcef | 41 f9 00    | i32_const value:121
  0xcf2 | 41 ed 00    | i32_const value:109
  0xcf5 | 41 e2 00    | i32_const value:98
  0xcf8 | 41 ef 00    | i32_const value:111
  0xcfb | 41 ec 00    | i32_const value:108
  0xcfe | fb 08 01 06 | array_new_fixed array_type_index:1 array_size:6
  0xd02 | 10 0e       | call function_index:14
  0xd04 | 10 0d       | call function_index:13
  0xd06 | fb 05 12 10 | struct_set struct_type_index:18 field_index:16
  0xd0a | 20 00       | local_get local_index:0
  0xd0c | 20 00       | local_get local_index:0
  0xd0e | fb 02 12 08 | struct_get struct_type_index:18 field_index:8
  0xd12 | fb 16 6d    | ref_cast_non_null hty:Abstract { shared: false, ty: Eq }
  0xd15 | 10 10       | call function_index:16
  0xd17 | 20 00       | local_get local_index:0
  0xd19 | 20 00       | local_get local_index:0
  0xd1b | 20 00       | local_get local_index:0
  0xd1d | fb 02 12 0c | struct_get struct_type_index:18 field_index:12
  0xd21 | 20 00       | local_get local_index:0
  0xd23 | 41 c3 00    | i32_const value:67
  0xd26 | 41 ef 00    | i32_const value:111
  0xd29 | 41 ed 00    | i32_const value:109
  0xd2c | 41 f0 00    | i32_const value:112
  0xd2f | 41 e9 00    | i32_const value:105
  0xd32 | 41 ec 00    | i32_const value:108
  0xd35 | 41 e5 00    | i32_const value:101
  0xd38 | 41 e4 00    | i32_const value:100
  0xd3b | 41 cd 00    | i32_const value:77
  0xd3e | 41 e5 00    | i32_const value:101
  0xd41 | 41 f4 00    | i32_const value:116
  0xd44 | 41 e8 00    | i32_const value:104
  0xd47 | 41 ef 00    | i32_const value:111
  0xd4a | 41 e4 00    | i32_const value:100
  0xd4d | fb 08 01 0e | array_new_fixed array_type_index:1 array_size:14
  0xd51 | 10 0e       | call function_index:14
  0xd53 | 10 0d       | call function_index:13
  0xd55 | fb 05 12 0f | struct_set struct_type_index:18 field_index:15
  0xd59 | 20 00       | local_get local_index:0
  0xd5b | 20 00       | local_get local_index:0
  0xd5d | 20 00       | local_get local_index:0
  0xd5f | fb 02 12 08 | struct_get struct_type_index:18 field_index:8
  0xd63 | 20 00       | local_get local_index:0
  0xd65 | 41 c3 00    | i32_const value:67
  0xd68 | 41 ef 00    | i32_const value:111
  0xd6b | 41 ee 00    | i32_const value:110
  0xd6e | 41 f4 00    | i32_const value:116
  0xd71 | 41 e5 00    | i32_const value:101
  0xd74 | 41 f8 00    | i32_const value:120
  0xd77 | 41 f4 00    | i32_const value:116
  0xd7a | fb 08 01 07 | array_new_fixed array_type_index:1 array_size:7
  0xd7e | 10 0e       | call function_index:14
  0xd80 | 10 0d       | call function_index:13
  0xd82 | fb 05 12 0e | struct_set struct_type_index:18 field_index:14
  0xd86 | 20 00       | local_get local_index:0
  0xd88 | 20 00       | local_get local_index:0
  0xd8a | 20 00       | local_get local_index:0
  0xd8c | fb 02 12 08 | struct_get struct_type_index:18 field_index:8
  0xd90 | 20 00       | local_get local_index:0
  0xd92 | 41 d3 00    | i32_const value:83
  0xd95 | 41 ed 00    | i32_const value:109
  0xd98 | 41 e1 00    | i32_const value:97
  0xd9b | 41 ec 00    | i32_const value:108
  0xd9e | 41 ec 00    | i32_const value:108
  0xda1 | 41 c9 00    | i32_const value:73
  0xda4 | 41 ee 00    | i32_const value:110
  0xda7 | 41 f4 00    | i32_const value:116
  0xdaa | 41 e5 00    | i32_const value:101
  0xdad | 41 e7 00    | i32_const value:103
  0xdb0 | 41 e5 00    | i32_const value:101
  0xdb3 | 41 e8 00    | i32_const value:104
  0xdb6 | fb 08 01 0c | array_new_fixed array_type_index:1 array_size:12
  0xdba | 10 0e       | call function_index:14
  0xdbc | 10 0d       | call function_index:13
  0xdbe | fb 05 12 11 | struct_set struct_type_index:18 field_index:17
  0xdc2 | 20 00       | local_get local_index:0
  0xdc4 | 0b          | end
============== func 18 ====================
  0xdc5 | 12          | size of function
  0xdc6 | 00          | 0 local blocks
  0xdc7 | 20 00       | local_get local_index:0
  0xdc9 | fb 16 0f    | ref_cast_non_null hty:Concrete(Module(15))
  0xdcc | fb 02 0f 03 | struct_get struct_type_index:15 field_index:3
  0xdd0 | fb 16 06    | ref_cast_non_null hty:Concrete(Module(6))
  0xdd3 | fb 02 06 03 | struct_get struct_type_index:6 field_index:3
  0xdd7 | 0b          | end
============== func 19 ====================
  0xdd8 | 0b          | size of function
  0xdd9 | 00          | 0 local blocks
  0xdda | 20 00       | local_get local_index:0
  0xddc | fb 16 0f    | ref_cast_non_null hty:Concrete(Module(15))
  0xddf | fb 02 0f 07 | struct_get struct_type_index:15 field_index:7
  0xde3 | 0b          | end
============== func 20 ====================
  0xde4 | 0d          | size of function
  0xde5 | 00          | 0 local blocks
  0xde6 | 20 00       | local_get local_index:0
  0xde8 | fb 16 0f    | ref_cast_non_null hty:Concrete(Module(15))
  0xdeb | 20 01       | local_get local_index:1
  0xded | fb 05 0f 07 | struct_set struct_type_index:15 field_index:7
  0xdf1 | 0b          | end
============== func 21 ====================
  0xdf2 | 0b          | size of function
  0xdf3 | 00          | 0 local blocks
  0xdf4 | 20 00       | local_get local_index:0
  0xdf6 | fb 16 10    | ref_cast_non_null hty:Concrete(Module(16))
  0xdf9 | 20 01       | local_get local_index:1
  0xdfb | 10 21       | call function_index:33
  0xdfd | 0b          | end
============== func 22 ====================
  0xdfe | 09          | size of function
  0xdff | 00          | 0 local blocks
  0xe00 | 20 00       | local_get local_index:0
  0xe02 | fb 16 10    | ref_cast_non_null hty:Concrete(Module(16))
  0xe05 | 10 22       | call function_index:34
  0xe07 | 0b          | end
============== func 23 ====================
  0xe08 | 0b          | size of function
  0xe09 | 00          | 0 local blocks
  0xe0a | 20 00       | local_get local_index:0
  0xe0c | fb 16 10    | ref_cast_non_null hty:Concrete(Module(16))
  0xe0f | fb 02 10 07 | struct_get struct_type_index:16 field_index:7
  0xe13 | 0b          | end
============== func 24 ====================
  0xe14 | 0b          | size of function
  0xe15 | 00          | 0 local blocks
  0xe16 | 20 00       | local_get local_index:0
  0xe18 | fb 16 0f    | ref_cast_non_null hty:Concrete(Module(15))
  0xe1b | fb 02 0f 04 | struct_get struct_type_index:15 field_index:4
  0xe1f | 0b          | end
============== func 25 ====================
  0xe20 | 14          | size of function
  0xe21 | 00          | 0 local blocks
  0xe22 | 20 00       | local_get local_index:0
  0xe24 | fb 16 10    | ref_cast_non_null hty:Concrete(Module(16))
  0xe27 | fb 02 10 06 | struct_get struct_type_index:16 field_index:6
  0xe2b | fb 02 0f 04 | struct_get struct_type_index:15 field_index:4
  0xe2f | 20 01       | local_get local_index:1
  0xe31 | 10 1c       | call function_index:28
  0xe33 | d4          | ref_as_non_null
  0xe34 | 0b          | end
============== func 26 ====================
  0xe35 | 0b          | size of function
  0xe36 | 00          | 0 local blocks
  0xe37 | 20 00       | local_get local_index:0
  0xe39 | fb 16 10    | ref_cast_non_null hty:Concrete(Module(16))
  0xe3c | fb 02 10 06 | struct_get struct_type_index:16 field_index:6
  0xe40 | 0b          | end
============== func 27 ====================
  0xe41 | 25          | size of function
  0xe42 | 01          | 1 local blocks
  0xe43 | 01 7f       | 1 locals of type I32
  0xe45 | 20 00       | local_get local_index:0
  0xe47 | fb 16 6a    | ref_cast_non_null hty:Abstract { shared: false, ty: Array }
  0xe4a | fb 0f       | array_len
  0xe4c | 21 02       | local_set local_index:2
  0xe4e | 20 01       | local_get local_index:1
  0xe50 | 41 00       | i32_const value:0
  0xe52 | 48          | i32_lt_s
  0xe53 | 04 40       | if blockty:Empty
  0xe55 | 41 00       | i32_const value:0
  0xe57 | 0f          | return
  0xe58 | 0b          | end
  0xe59 | 20 01       | local_get local_index:1
  0xe5b | 20 02       | local_get local_index:2
  0xe5d | 4f          | i32_ge_u
  0xe5e | 04 40       | if blockty:Empty
  0xe60 | 41 00       | i32_const value:0
  0xe62 | 0f          | return
  0xe63 | 0b          | end
  0xe64 | 41 01       | i32_const value:1
  0xe66 | 0b          | end
============== func 28 ====================
  0xe67 | 26          | size of function
  0xe68 | 01          | 1 local blocks
  0xe69 | 01 64 00    | 1 locals of type Ref((ref (module 0)))
  0xe6c | 20 00       | local_get local_index:0
  0xe6e | fb 02 05 03 | struct_get struct_type_index:5 field_index:3
  0xe72 | 21 02       | local_set local_index:2
  0xe74 | 20 02       | local_get local_index:2
  0xe76 | fb 16 00    | ref_cast_non_null hty:Concrete(Module(0))
  0xe79 | 20 01       | local_get local_index:1
  0xe7b | 10 1b       | call function_index:27
  0xe7d | 45          | i32_eqz
  0xe7e | 04 6d       | if blockty:Type(Ref(eqref))
  0xe80 | 20 01       | local_get local_index:1
  0xe82 | 08 03       | throw tag_index:3
  0xe84 | 05          | else
  0xe85 | 20 02       | local_get local_index:2
  0xe87 | 20 01       | local_get local_index:1
  0xe89 | fb 0b 00    | array_get array_type_index:0
  0xe8c | 0b          | end
  0xe8d | 0b          | end
============== func 29 ====================
  0xe8e | 16          | size of function
  0xe8f | 00          | 0 local blocks
  0xe90 | 20 00       | local_get local_index:0
  0xe92 | 20 01       | local_get local_index:1
  0xe94 | 10 1b       | call function_index:27
  0xe96 | 45          | i32_eqz
  0xe97 | 04 40       | if blockty:Empty
  0xe99 | 41 7f       | i32_const value:-1
  0xe9b | 0f          | return
  0xe9c | 0b          | end
  0xe9d | 20 00       | local_get local_index:0
  0xe9f | 20 01       | local_get local_index:1
  0xea1 | fb 0c 01    | array_get_s array_type_index:1
  0xea4 | 0b          | end
============== func 30 ====================
  0xea5 | 09          | size of function
  0xea6 | 00          | 0 local blocks
  0xea7 | 20 00       | local_get local_index:0
  0xea9 | fb 16 01    | ref_cast_non_null hty:Concrete(Module(1))
  0xeac | fb 0f       | array_len
  0xeae | 0b          | end
============== func 31 ====================
  0xeaf | 35          | size of function
  0xeb0 | 01          | 1 local blocks
  0xeb1 | 02 7f       | 2 locals of type I32
  0xeb3 | 20 00       | local_get local_index:0
  0xeb5 | fb 0f       | array_len
  0xeb7 | 21 01       | local_set local_index:1
  0xeb9 | 41 00       | i32_const value:0
  0xebb | 21 02       | local_set local_index:2
  0xebd | 03 40       | loop blockty:Empty
  0xebf | 20 02       | local_get local_index:2
  0xec1 | 20 01       | local_get local_index:1
  0xec3 | 46          | i32_eq
  0xec4 | 04 40       | if blockty:Empty
  0xec6 | 23 01       | global_get global_index:1
  0xec8 | 0f          | return
  0xec9 | 0b          | end
  0xeca | 23 01       | global_get global_index:1
  0xecc | 20 02       | local_get local_index:2
  0xece | 6a          | i32_add
  0xecf | 20 00       | local_get local_index:0
  0xed1 | 20 02       | local_get local_index:2
  0xed3 | fb 0d 01    | array_get_u array_type_index:1
  0xed6 | 3a 00 00    | i32_store8 memarg:MemArg { align: 0, max_align: 0, offset: 0, memory: 0 }
  0xed9 | 20 02       | local_get local_index:2
  0xedb | 41 01       | i32_const value:1
  0xedd | 6a          | i32_add
  0xede | 21 02       | local_set local_index:2
  0xee0 | 0c 00       | br relative_depth:0
  0xee2 | 0b          | end
  0xee3 | 00          | unreachable
  0xee4 | 0b          | end
============== func 32 ====================
  0xee5 | 17          | size of function
  0xee6 | 00          | 0 local blocks
  0xee7 | 20 00       | local_get local_index:0
  0xee9 | 20 00       | local_get local_index:0
  0xeeb | fb 02 12 05 | struct_get struct_type_index:18 field_index:5
  0xeef | 41 01       | i32_const value:1
  0xef1 | 6a          | i32_add
  0xef2 | fb 05 12 05 | struct_set struct_type_index:18 field_index:5
  0xef6 | 20 00       | local_get local_index:0
  0xef8 | fb 02 12 05 | struct_get struct_type_index:18 field_index:5
  0xefc | 0b          | end
============== func 33 ====================
  0xefd | 3e          | size of function
  0xefe | 02          | 2 local blocks
  0xeff | 01 64 05    | 1 locals of type Ref((ref (module 5)))
  0xf02 | 01 7f       | 1 locals of type I32
  0xf04 | 20 00       | local_get local_index:0
  0xf06 | fb 02 10 0a | struct_get struct_type_index:16 field_index:10
  0xf0a | 21 02       | local_set local_index:2
  0xf0c | 20 00       | local_get local_index:0
  0xf0e | fb 02 10 05 | struct_get struct_type_index:16 field_index:5
  0xf12 | 21 03       | local_set local_index:3
  0xf14 | 20 03       | local_get local_index:3
  0xf16 | 20 02       | local_get local_index:2
  0xf18 | fb 02 05 03 | struct_get struct_type_index:5 field_index:3
  0xf1c | fb 0f       | array_len
  0xf1e | 4f          | i32_ge_u
  0xf1f | 04 40       | if blockty:Empty
  0xf21 | 0f          | return
  0xf22 | 0b          | end
  0xf23 | 20 02       | local_get local_index:2
  0xf25 | fb 02 05 03 | struct_get struct_type_index:5 field_index:3
  0xf29 | 20 03       | local_get local_index:3
  0xf2b | 20 01       | local_get local_index:1
  0xf2d | fb 0e 00    | array_set array_type_index:0
  0xf30 | 20 00       | local_get local_index:0
  0xf32 | 20 03       | local_get local_index:3
  0xf34 | 41 01       | i32_const value:1
  0xf36 | 6a          | i32_add
  0xf37 | fb 05 10 05 | struct_set struct_type_index:16 field_index:5
  0xf3b | 0b          | end
============== func 34 ====================
  0xf3c | 3c          | size of function
  0xf3d | 02          | 2 local blocks
  0xf3e | 01 64 05    | 1 locals of type Ref((ref (module 5)))
  0xf41 | 01 7f       | 1 locals of type I32
  0xf43 | 20 00       | local_get local_index:0
  0xf45 | fb 02 10 0a | struct_get struct_type_index:16 field_index:10
  0xf49 | 21 01       | local_set local_index:1
  0xf4b | 20 00       | local_get local_index:0
  0xf4d | fb 02 10 05 | struct_get struct_type_index:16 field_index:5
  0xf51 | 21 02       | local_set local_index:2
  0xf53 | 20 02       | local_get local_index:2
  0xf55 | 41 00       | i32_const value:0
  0xf57 | 46          | i32_eq
  0xf58 | 04 40       | if blockty:Empty
  0xf5a | 08 01       | throw tag_index:1
  0xf5c | 0b          | end
  0xf5d | 20 00       | local_get local_index:0
  0xf5f | 20 02       | local_get local_index:2
  0xf61 | 41 01       | i32_const value:1
  0xf63 | 6b          | i32_sub
  0xf64 | fb 05 10 05 | struct_set struct_type_index:16 field_index:5
  0xf68 | 20 01       | local_get local_index:1
  0xf6a | fb 02 05 03 | struct_get struct_type_index:5 field_index:3
  0xf6e | 20 02       | local_get local_index:2
  0xf70 | 41 01       | i32_const value:1
  0xf72 | 6b          | i32_sub
  0xf73 | fb 0b 00    | array_get array_type_index:0
  0xf76 | d4          | ref_as_non_null
  0xf77 | 0f          | return
  0xf78 | 0b          | end
============== func 35 ====================
  0xf79 | 31          | size of function
  0xf7a | 02          | 2 local blocks
  0xf7b | 01 64 05    | 1 locals of type Ref((ref (module 5)))
  0xf7e | 01 7f       | 1 locals of type I32
  0xf80 | 20 00       | local_get local_index:0
  0xf82 | fb 02 10 0a | struct_get struct_type_index:16 field_index:10
  0xf86 | 21 01       | local_set local_index:1
  0xf88 | 20 00       | local_get local_index:0
  0xf8a | fb 02 10 05 | struct_get struct_type_index:16 field_index:5
  0xf8e | 21 02       | local_set local_index:2
  0xf90 | 20 02       | local_get local_index:2
  0xf92 | 41 00       | i32_const value:0
  0xf94 | 46          | i32_eq
  0xf95 | 04 40       | if blockty:Empty
  0xf97 | 08 01       | throw tag_index:1
  0xf99 | 0b          | end
  0xf9a | 20 01       | local_get local_index:1
  0xf9c | fb 02 05 03 | struct_get struct_type_index:5 field_index:3
  0xfa0 | 20 02       | local_get local_index:2
  0xfa2 | 41 01       | i32_const value:1
  0xfa4 | 6b          | i32_sub
  0xfa5 | fb 0b 00    | array_get array_type_index:0
  0xfa8 | d4          | ref_as_non_null
  0xfa9 | 0f          | return
  0xfaa | 0b          | end
============== func 36 ====================
  0xfab | 1e          | size of function
  0xfac | 00          | 0 local blocks
  0xfad | 20 01       | local_get local_index:1
  0xfaf | fb 14 6c    | ref_test_non_null hty:Abstract { shared: false, ty: I31 }
  0xfb2 | 04 64 6d    | if blockty:Type(Ref((ref eq)))
  0xfb5 | 20 00       | local_get local_index:0
  0xfb7 | fb 02 12 11 | struct_get struct_type_index:18 field_index:17
  0xfbb | fb 16 6d    | ref_cast_non_null hty:Abstract { shared: false, ty: Eq }
  0xfbe | 05          | else
  0xfbf | 20 01       | local_get local_index:1
  0xfc1 | fb 16 03    | ref_cast_non_null hty:Concrete(Module(3))
  0xfc4 | fb 02 03 00 | struct_get struct_type_index:3 field_index:0
  0xfc8 | 0b          | end
  0xfc9 | 0b          | end
============== func 37 ====================
  0xfca | 97 01       | size of function
  0xfcc | 06          | 6 local blocks
  0xfcd | 01 64 6d    | 1 locals of type Ref((ref eq))
  0xfd0 | 01 6d       | 1 locals of type Ref(eqref)
  0xfd2 | 01 64 0a    | 1 locals of type Ref((ref (module 10)))
  0xfd5 | 02 64 05    | 2 locals of type Ref((ref (module 5)))
  0xfd8 | 02 7f       | 2 locals of type I32
  0xfda | 01 64 6d    | 1 locals of type Ref((ref eq))
  0xfdd | 20 00       | local_get local_index:0
  0xfdf | 20 01       | local_get local_index:1
  0xfe1 | 10 24       | call function_index:36
  0xfe3 | 21 04       | local_set local_index:4
  0xfe5 | 03 40       | loop blockty:Empty
  0xfe7 | 20 04       | local_get local_index:4
  0xfe9 | d1          | ref_is_null
  0xfea | 04 40       | if blockty:Empty
  0xfec | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0xfee | 0f          | return
  0xfef | 0b          | end
  0xff0 | 20 04       | local_get local_index:4
  0xff2 | fb 16 0d    | ref_cast_non_null hty:Concrete(Module(13))
  0xff5 | fb 02 0d 04 | struct_get struct_type_index:13 field_index:4
  0xff9 | 21 05       | local_set local_index:5
  0xffb | 20 05       | local_get local_index:5
  0xffd | d4          | ref_as_non_null
  0xffe | fb 02 0a 03 | struct_get struct_type_index:10 field_index:3
 0x1002 | 21 06       | local_set local_index:6
 0x1004 | 20 05       | local_get local_index:5
 0x1006 | d4          | ref_as_non_null
 0x1007 | fb 02 0a 04 | struct_get struct_type_index:10 field_index:4
 0x100b | 21 07       | local_set local_index:7
 0x100d | 20 05       | local_get local_index:5
 0x100f | d4          | ref_as_non_null
 0x1010 | fb 02 0a 05 | struct_get struct_type_index:10 field_index:5
 0x1014 | 21 08       | local_set local_index:8
 0x1016 | 41 00       | i32_const value:0
 0x1018 | 21 09       | local_set local_index:9
 0x101a | 03 40       | loop blockty:Empty
 0x101c | 20 09       | local_get local_index:9
 0x101e | 20 08       | local_get local_index:8
 0x1020 | 4f          | i32_ge_u
 0x1021 | 04 40       | if blockty:Empty
 0x1023 | 20 04       | local_get local_index:4
 0x1025 | fb 16 0d    | ref_cast_non_null hty:Concrete(Module(13))
 0x1028 | fb 02 0d 03 | struct_get struct_type_index:13 field_index:3
 0x102c | 21 04       | local_set local_index:4
 0x102e | 0c 02       | br relative_depth:2
 0x1030 | 0b          | end
 0x1031 | 20 06       | local_get local_index:6
 0x1033 | fb 02 05 03 | struct_get struct_type_index:5 field_index:3
 0x1037 | 20 09       | local_get local_index:9
 0x1039 | fb 0b 00    | array_get array_type_index:0
 0x103c | d4          | ref_as_non_null
 0x103d | 21 0a       | local_set local_index:10
 0x103f | 20 0a       | local_get local_index:10
 0x1041 | 20 02       | local_get local_index:2
 0x1043 | d3          | ref_eq
 0x1044 | 04 40       | if blockty:Empty
 0x1046 | 20 07       | local_get local_index:7
 0x1048 | fb 02 05 03 | struct_get struct_type_index:5 field_index:3
 0x104c | 20 09       | local_get local_index:9
 0x104e | fb 0b 00    | array_get array_type_index:0
 0x1051 | fb 17 0f    | ref_cast_nullable hty:Concrete(Module(15))
 0x1054 | 0f          | return
 0x1055 | 0b          | end
 0x1056 | 20 09       | local_get local_index:9
 0x1058 | 41 01       | i32_const value:1
 0x105a | 6a          | i32_add
 0x105b | 21 09       | local_set local_index:9
 0x105d | 0c 00       | br relative_depth:0
 0x105f | 0b          | end
 0x1060 | 0b          | end
 0x1061 | 00          | unreachable
 0x1062 | 0b          | end
============== func 38 ====================
 0x1063 | a7 01       | size of function
 0x1065 | 04          | 4 local blocks
 0x1066 | 01 63 00    | 1 locals of type Ref((ref null (module 0)))
 0x1069 | 03 7f       | 3 locals of type I32
 0x106b | 01 63 11    | 1 locals of type Ref((ref null (module 17)))
 0x106e | 01 7f       | 1 locals of type I32
 0x1070 | 20 00       | local_get local_index:0
 0x1072 | fb 02 12 02 | struct_get struct_type_index:18 field_index:2
 0x1076 | 22 03       | local_tee local_index:3
 0x1078 | d1          | ref_is_null
 0x1079 | 04 40       | if blockty:Empty
 0x107b | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
 0x107d | 0f          | return
 0x107e | 05          | else
 0x107f | 20 03       | local_get local_index:3
 0x1081 | fb 0f       | array_len
 0x1083 | 21 04       | local_set local_index:4
 0x1085 | 0b          | end
 0x1086 | 20 01       | local_get local_index:1
 0x1088 | fb 16 03    | ref_cast_non_null hty:Concrete(Module(3))
 0x108b | fb 02 03 01 | struct_get struct_type_index:3 field_index:1
 0x108f | 20 02       | local_get local_index:2
 0x1091 | fb 02 0d 01 | struct_get struct_type_index:13 field_index:1
 0x1095 | 6a          | i32_add
 0x1096 | 20 03       | local_get local_index:3
 0x1098 | fb 0f       | array_len
 0x109a | 70          | i32_rem_u
 0x109b | 21 06       | local_set local_index:6
 0x109d | 41 08       | i32_const value:8
 0x109f | 21 08       | local_set local_index:8
 0x10a1 | 03 40       | loop blockty:Empty
 0x10a3 | 20 08       | local_get local_index:8
 0x10a5 | 41 00       | i32_const value:0
 0x10a7 | 4c          | i32_le_s
 0x10a8 | 04 40       | if blockty:Empty
 0x10aa | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
 0x10ac | 0f          | return
 0x10ad | 0b          | end
 0x10ae | 20 03       | local_get local_index:3
 0x10b0 | d4          | ref_as_non_null
 0x10b1 | 20 06       | local_get local_index:6
 0x10b3 | fb 0b 00    | array_get array_type_index:0
 0x10b6 | fb 17 11    | ref_cast_nullable hty:Concrete(Module(17))
 0x10b9 | 22 07       | local_tee local_index:7
 0x10bb | d1          | ref_is_null
 0x10bc | 04 40       | if blockty:Empty
 0x10be | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
 0x10c0 | 0f          | return
 0x10c1 | 0b          | end
 0x10c2 | 20 07       | local_get local_index:7
 0x10c4 | fb 16 11    | ref_cast_non_null hty:Concrete(Module(17))
 0x10c7 | 22 07       | local_tee local_index:7
 0x10c9 | fb 02 11 00 | struct_get struct_type_index:17 field_index:0
 0x10cd | 20 01       | local_get local_index:1
 0x10cf | d3          | ref_eq
 0x10d0 | 20 07       | local_get local_index:7
 0x10d2 | fb 02 11 01 | struct_get struct_type_index:17 field_index:1
 0x10d6 | 20 02       | local_get local_index:2
 0x10d8 | d3          | ref_eq
 0x10d9 | 71          | i32_and
 0x10da | 04 40       | if blockty:Empty
 0x10dc | 20 07       | local_get local_index:7
 0x10de | 20 07       | local_get local_index:7
 0x10e0 | fb 02 11 03 | struct_get struct_type_index:17 field_index:3
 0x10e4 | 41 01       | i32_const value:1
 0x10e6 | 6a          | i32_add
 0x10e7 | fb 05 11 03 | struct_set struct_type_index:17 field_index:3
 0x10eb | 20 07       | local_get local_index:7
 0x10ed | fb 02 11 02 | struct_get struct_type_index:17 field_index:2
 0x10f1 | fb 17 0f    | ref_cast_nullable hty:Concrete(Module(15))
 0x10f4 | 0f          | return
 0x10f5 | 0b          | end
 0x10f6 | 20 06       | local_get local_index:6
 0x10f8 | 41 01       | i32_const value:1
 0x10fa | 6a          | i32_add
 0x10fb | 20 04       | local_get local_index:4
 0x10fd | 70          | i32_rem_u
 0x10fe | 21 06       | local_set local_index:6
 0x1100 | 20 08       | local_get local_index:8
 0x1102 | 41 01       | i32_const value:1
 0x1104 | 6b          | i32_sub
 0x1105 | 21 08       | local_set local_index:8
 0x1107 | 0c 00       | br relative_depth:0
 0x1109 | 0b          | end
 0x110a | 00          | unreachable
 0x110b | 0b          | end
============== func 39 ====================
 0x110c | 42          | size of function
 0x110d | 03          | 3 local blocks
 0x110e | 01 64 00    | 1 locals of type Ref((ref (module 0)))
 0x1111 | 01 7f       | 1 locals of type I32
 0x1113 | 01 64 11    | 1 locals of type Ref((ref (module 17)))
 0x1116 | 20 00       | local_get local_index:0
 0x1118 | fb 02 12 02 | struct_get struct_type_index:18 field_index:2
 0x111c | 21 04       | local_set local_index:4
 0x111e | 20 01       | local_get local_index:1
 0x1120 | fb 16 09    | ref_cast_non_null hty:Concrete(Module(9))
 0x1123 | fb 02 09 01 | struct_get struct_type_index:9 field_index:1
 0x1127 | 20 02       | local_get local_index:2
 0x1129 | fb 16 0c    | ref_cast_non_null hty:Concrete(Module(12))
 0x112c | fb 02 0c 01 | struct_get struct_type_index:12 field_index:1
 0x1130 | 6a          | i32_add
 0x1131 | 20 04       | local_get local_index:4
 0x1133 | fb 0f       | array_len
 0x1135 | 70          | i32_rem_u
 0x1136 | 21 05       | local_set local_index:5
 0x1138 | 20 01       | local_get local_index:1
 0x113a | 20 02       | local_get local_index:2
 0x113c | 20 03       | local_get local_index:3
 0x113e | 41 01       | i32_const value:1
 0x1140 | fb 00 11    | struct_new struct_type_index:17
 0x1143 | 21 06       | local_set local_index:6
 0x1145 | 20 04       | local_get local_index:4
 0x1147 | 20 05       | local_get local_index:5
 0x1149 | 20 06       | local_get local_index:6
 0x114b | fb 0e 00    | array_set array_type_index:0
 0x114e | 0b          | end
============== func 40 ====================
 0x114f | 43          | size of function
 0x1150 | 00          | 0 local blocks
 0x1151 | 20 00       | local_get local_index:0
 0x1153 | fb 02 12 0e | struct_get struct_type_index:18 field_index:14
 0x1157 | fb 16 6d    | ref_cast_non_null hty:Abstract { shared: false, ty: Eq }
 0x115a | 20 00       | local_get local_index:0
 0x115c | 10 20       | call function_index:32
 0x115e | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
 0x1160 | 20 00       | local_get local_index:0
 0x1162 | fb 02 12 00 | struct_get struct_type_index:18 field_index:0
 0x1166 | 41 00       | i32_const value:0
 0x1168 | 41 00       | i32_const value:0
 0x116a | 20 02       | local_get local_index:2
 0x116c | 20 01       | local_get local_index:1
 0x116e | 20 00       | local_get local_index:0
 0x1170 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
 0x1172 | 41 00       | i32_const value:0
 0x1174 | fb 06 00    | array_new array_type_index:0
 0x1177 | 10 05       | call function_index:5
 0x1179 | 20 00       | local_get local_index:0
 0x117b | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
 0x117d | 41 00       | i32_const value:0
 0x117f | fb 06 00    | array_new array_type_index:0
 0x1182 | 10 05       | call function_index:5
 0x1184 | 20 00       | local_get local_index:0
 0x1186 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
 0x1188 | 41 14       | i32_const value:20
 0x118a | fb 06 00    | array_new array_type_index:0
 0x118d | 10 05       | call function_index:5
 0x118f | fb 00 10    | struct_new struct_type_index:16
 0x1192 | 0b          | end
============== func 41 ====================
 0x1193 | 06          | size of function
 0x1194 | 00          | 0 local blocks
 0x1195 | 20 00       | local_get local_index:0
 0x1197 | fb 1c       | ref_i31
 0x1199 | 0b          | end
============== func 42 ====================
 0x119a | 11          | size of function
 0x119b | 00          | 0 local blocks
 0x119c | 20 00       | local_get local_index:0
 0x119e | fb 14 6c    | ref_test_non_null hty:Abstract { shared: false, ty: I31 }
 0x11a1 | 04 7f       | if blockty:Type(I32)
 0x11a3 | 41 01       | i32_const value:1
 0x11a5 | 0f          | return
 0x11a6 | 05          | else
 0x11a7 | 41 00       | i32_const value:0
 0x11a9 | 0f          | return
 0x11aa | 0b          | end
 0x11ab | 0b          | end
============== func 43 ====================
 0x11ac | 13          | size of function
 0x11ad | 00          | 0 local blocks
 0x11ae | 20 00       | local_get local_index:0
 0x11b0 | 10 2a       | call function_index:42
 0x11b2 | 04 7f       | if blockty:Type(I32)
 0x11b4 | 20 00       | local_get local_index:0
 0x11b6 | fb 16 6c    | ref_cast_non_null hty:Abstract { shared: false, ty: I31 }
 0x11b9 | fb 1d       | i31_get_s
 0x11bb | 05          | else
 0x11bc | 41 00       | i32_const value:0
 0x11be | 0b          | end
 0x11bf | 0b          | end
============== func 44 ====================
 0x11c0 | 0b          | size of function
 0x11c1 | 00          | 0 local blocks
 0x11c2 | 20 00       | local_get local_index:0
 0x11c4 | fb 02 0f 07 | struct_get struct_type_index:15 field_index:7
 0x11c8 | 41 00       | i32_const value:0
 0x11ca | 4b          | i32_gt_u
 0x11cb | 0b          | end
============== func 45 ====================
 0x11cc | 09          | size of function
 0x11cd | 00          | 0 local blocks
 0x11ce | 20 00       | local_get local_index:0
 0x11d0 | 20 01       | local_get local_index:1
 0x11d2 | 11 28 00    | call_indirect type_index:40 table_index:0
 0x11d5 | 0b          | end
============== func 46 ====================
 0x11d6 | 3d          | size of function
 0x11d7 | 02          | 2 local blocks
 0x11d8 | 01 63 10    | 1 locals of type Ref((ref null (module 16)))
 0x11db | 01 64 6d    | 1 locals of type Ref((ref eq))
 0x11de | 20 01       | local_get local_index:1
 0x11e0 | 10 23       | call function_index:35
 0x11e2 | 21 03       | local_set local_index:3
 0x11e4 | 20 01       | local_get local_index:1
 0x11e6 | fb 02 10 03 | struct_get struct_type_index:16 field_index:3
 0x11ea | 22 02       | local_tee local_index:2
 0x11ec | d1          | ref_is_null
 0x11ed | 45          | i32_eqz
 0x11ee | 04 40       | if blockty:Empty
 0x11f0 | 20 02       | local_get local_index:2
 0x11f2 | d4          | ref_as_non_null
 0x11f3 | 20 03       | local_get local_index:3
 0x11f5 | 10 21       | call function_index:33
 0x11f7 | 20 02       | local_get local_index:2
 0x11f9 | d4          | ref_as_non_null
 0x11fa | 20 02       | local_get local_index:2
 0x11fc | d4          | ref_as_non_null
 0x11fd | fb 02 10 04 | struct_get struct_type_index:16 field_index:4
 0x1201 | 41 01       | i32_const value:1
 0x1203 | 6a          | i32_add
 0x1204 | fb 05 10 04 | struct_set struct_type_index:16 field_index:4
 0x1208 | 0b          | end
 0x1209 | 20 00       | local_get local_index:0
 0x120b | 20 02       | local_get local_index:2
 0x120d | fb 05 12 00 | struct_set struct_type_index:18 field_index:0
 0x1211 | 20 03       | local_get local_index:3
 0x1213 | 0b          | end
============== func 47 ====================
 0x1214 | da 02       | size of function
 0x1216 | 03          | 3 local blocks
 0x1217 | 01 64 0f    | 1 locals of type Ref((ref (module 15)))
 0x121a | 01 64 0a    | 1 locals of type Ref((ref (module 10)))
 0x121d | 01 64 00    | 1 locals of type Ref((ref (module 0)))
 0x1220 | 20 00       | local_get local_index:0
 0x1222 | 41 e2 00    | i32_const value:98
 0x1225 | 41 e5 00    | i32_const value:101
 0x1228 | 41 ee 00    | i32_const value:110
 0x122b | 41 e3 00    | i32_const value:99
 0x122e | 41 e8 00    | i32_const value:104
 0x1231 | 41 ed 00    | i32_const value:109
 0x1234 | 41 e1 00    | i32_const value:97
 0x1237 | 41 f2 00    | i32_const value:114
 0x123a | 41 eb 00    | i32_const value:107
 0x123d | fb 08 01 09 | array_new_fixed array_type_index:1 array_size:9
 0x1241 | 10 0e       | call function_index:14
 0x1243 | 24 00       | global_set global_index:0
 0x1245 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
 0x1247 | 41 04       | i32_const value:4
 0x1249 | fb 06 00    | array_new array_type_index:0
 0x124c | 21 03       | local_set local_index:3
 0x124e | 20 03       | local_get local_index:3
 0x1250 | 41 00       | i32_const value:0
 0x1252 | 41 00       | i32_const value:0
 0x1254 | 10 29       | call function_index:41
 0x1256 | fb 0e 00    | array_set array_type_index:0
 0x1259 | 20 03       | local_get local_index:3
 0x125b | 41 01       | i32_const value:1
 0x125d | 41 01       | i32_const value:1
 0x125f | 10 29       | call function_index:41
 0x1261 | fb 0e 00    | array_set array_type_index:0
 0x1264 | 20 03       | local_get local_index:3
 0x1266 | 41 02       | i32_const value:2
 0x1268 | 41 02       | i32_const value:2
 0x126a | 10 29       | call function_index:41
 0x126c | fb 0e 00    | array_set array_type_index:0
 0x126f | 20 03       | local_get local_index:3
 0x1271 | 41 03       | i32_const value:3
 0x1273 | 41 03       | i32_const value:3
 0x1275 | 10 29       | call function_index:41
 0x1277 | fb 0e 00    | array_set array_type_index:0
 0x127a | 20 00       | local_get local_index:0
 0x127c | fb 02 12 0f | struct_get struct_type_index:18 field_index:15
 0x1280 | fb 16 6d    | ref_cast_non_null hty:Abstract { shared: false, ty: Eq }
 0x1283 | 20 00       | local_get local_index:0
 0x1285 | 10 20       | call function_index:32
 0x1287 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
 0x1289 | 20 00       | local_get local_index:0
 0x128b | 41 f0 00    | i32_const value:112
 0x128e | 41 21       | i32_const value:33
 0x1290 | 41 b0 01    | i32_const value:176
 0x1293 | 41 22       | i32_const value:34
 0x1295 | 41 b8 01    | i32_const value:184
 0x1298 | 41 22       | i32_const value:34
 0x129a | 41 b0 01    | i32_const value:176
 0x129d | 41 23       | i32_const value:35
 0x129f | 41 b8 01    | i32_const value:184
 0x12a2 | 41 23       | i32_const value:35
 0x12a4 | 41 b0 01    | i32_const value:176
 0x12a7 | 41 22       | i32_const value:34
 0x12a9 | 41 b8 01    | i32_const value:184
 0x12ac | 41 21       | i32_const value:33
 0x12ae | 41 b0 01    | i32_const value:176
 0x12b1 | 41 22       | i32_const value:34
 0x12b3 | 41 b8 01    | i32_const value:184
 0x12b6 | 41 22       | i32_const value:34
 0x12b8 | 41 b0 01    | i32_const value:176
 0x12bb | 41 23       | i32_const value:35
 0x12bd | 41 b8 01    | i32_const value:184
 0x12c0 | 41 23       | i32_const value:35
 0x12c2 | 41 b0 01    | i32_const value:176
 0x12c5 | 41 22       | i32_const value:34
 0x12c7 | 41 b8 01    | i32_const value:184
 0x12ca | 41 21       | i32_const value:33
 0x12cc | 41 b0 01    | i32_const value:176
 0x12cf | 41 22       | i32_const value:34
 0x12d1 | 41 b8 01    | i32_const value:184
 0x12d4 | 41 22       | i32_const value:34
 0x12d6 | 41 b0 01    | i32_const value:176
 0x12d9 | 41 23       | i32_const value:35
 0x12db | 41 b8 01    | i32_const value:184
 0x12de | 41 23       | i32_const value:35
 0x12e0 | 41 b0 01    | i32_const value:176
 0x12e3 | 41 22       | i32_const value:34
 0x12e5 | 41 b8 01    | i32_const value:184
 0x12e8 | 41 21       | i32_const value:33
 0x12ea | 41 b0 01    | i32_const value:176
 0x12ed | 41 22       | i32_const value:34
 0x12ef | 41 b8 01    | i32_const value:184
 0x12f2 | 41 22       | i32_const value:34
 0x12f4 | 41 b0 01    | i32_const value:176
 0x12f7 | 41 23       | i32_const value:35
 0x12f9 | 41 b8 01    | i32_const value:184
 0x12fc | 41 23       | i32_const value:35
 0x12fe | 41 b0 01    | i32_const value:176
 0x1301 | 41 22       | i32_const value:34
 0x1303 | 41 b8 01    | i32_const value:184
 0x1306 | 41 21       | i32_const value:33
 0x1308 | 41 b0 01    | i32_const value:176
 0x130b | 41 22       | i32_const value:34
 0x130d | 41 b8 01    | i32_const value:184
 0x1310 | 41 22       | i32_const value:34
 0x1312 | 41 b0 01    | i32_const value:176
 0x1315 | 41 23       | i32_const value:35
 0x1317 | 41 b8 01    | i32_const value:184
 0x131a | 41 23       | i32_const value:35
 0x131c | 41 b0 01    | i32_const value:176
 0x131f | 41 22       | i32_const value:34
 0x1321 | 41 b8 01    | i32_const value:184
 0x1324 | 41 fc 00    | i32_const value:124
 0x1327 | fb 08 01 3e | array_new_fixed array_type_index:1 array_size:62
 0x132b | 10 06       | call function_index:6
 0x132d | 20 00       | local_get local_index:0
 0x132f | 20 03       | local_get local_index:3
 0x1331 | 10 05       | call function_index:5
 0x1333 | 41 00       | i32_const value:0
 0x1335 | 41 00       | i32_const value:0
 0x1337 | 41 00       | i32_const value:0
 0x1339 | 20 00       | local_get local_index:0
 0x133b | fb 02 12 04 | struct_get struct_type_index:18 field_index:4
 0x133f | 41 00       | i32_const value:0
 0x1341 | fb 00 0f    | struct_new struct_type_index:15
 0x1344 | 21 01       | local_set local_index:1
 0x1346 | 20 00       | local_get local_index:0
 0x1348 | 10 08       | call function_index:8
 0x134a | 21 02       | local_set local_index:2
 0x134c | 20 00       | local_get local_index:0
 0x134e | fb 02 12 11 | struct_get struct_type_index:18 field_index:17
 0x1352 | 20 02       | local_get local_index:2
 0x1354 | fb 05 0d 04 | struct_set struct_type_index:13 field_index:4
 0x1358 | 20 00       | local_get local_index:0
 0x135a | 20 02       | local_get local_index:2
 0x135c | 23 00       | global_get global_index:0
 0x135e | fb 16 6d    | ref_cast_non_null hty:Abstract { shared: false, ty: Eq }
 0x1361 | 20 01       | local_get local_index:1
 0x1363 | 10 09       | call function_index:9
 0x1365 | 20 01       | local_get local_index:1
 0x1367 | 41 01       | i32_const value:1
 0x1369 | fb 05 0f 09 | struct_set struct_type_index:15 field_index:9
 0x136d | 41 01       | i32_const value:1
 0x136f | 0b          | end
============== func 48 ====================
 0x1370 | 51          | size of function
 0x1371 | 00          | 0 local blocks
 0x1372 | 20 00       | local_get local_index:0
 0x1374 | 20 00       | local_get local_index:0
 0x1376 | 41 e4 00    | i32_const value:100
 0x1379 | fb 1c       | ref_i31
 0x137b | 20 00       | local_get local_index:0
 0x137d | fb 02 12 0f | struct_get struct_type_index:18 field_index:15
 0x1381 | fb 16 6d    | ref_cast_non_null hty:Abstract { shared: false, ty: Eq }
 0x1384 | 20 00       | local_get local_index:0
 0x1386 | 10 20       | call function_index:32
 0x1388 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
 0x138a | 20 00       | local_get local_index:0
 0x138c | 41 f0 00    | i32_const value:112
 0x138f | 41 d0 01    | i32_const value:208
 0x1392 | 41 fc 00    | i32_const value:124
 0x1395 | fb 08 01 03 | array_new_fixed array_type_index:1 array_size:3
 0x1399 | 10 06       | call function_index:6
 0x139b | 20 00       | local_get local_index:0
 0x139d | 23 00       | global_get global_index:0
 0x139f | fb 08 00 01 | array_new_fixed array_type_index:0 array_size:1
 0x13a3 | 10 05       | call function_index:5
 0x13a5 | 41 00       | i32_const value:0
 0x13a7 | 41 00       | i32_const value:0
 0x13a9 | 41 00       | i32_const value:0
 0x13ab | 20 00       | local_get local_index:0
 0x13ad | fb 02 12 04 | struct_get struct_type_index:18 field_index:4
 0x13b1 | 41 00       | i32_const value:0
 0x13b3 | fb 00 0f    | struct_new struct_type_index:15
 0x13b6 | 23 00       | global_get global_index:0
 0x13b8 | fb 16 6d    | ref_cast_non_null hty:Abstract { shared: false, ty: Eq }
 0x13bb | 10 28       | call function_index:40
 0x13bd | fb 05 12 00 | struct_set struct_type_index:18 field_index:0
 0x13c1 | 0b          | end
============== func 49 ====================
 0x13c2 | 9c 02       | size of function
 0x13c4 | 08          | 8 local blocks
 0x13c5 | 03 64 6d    | 3 locals of type Ref((ref eq))
 0x13c8 | 03 7f       | 3 locals of type I32
 0x13ca | 01 64 10    | 1 locals of type Ref((ref (module 16)))
 0x13cd | 01 64 09    | 1 locals of type Ref((ref (module 9)))
 0x13d0 | 01 64 0f    | 1 locals of type Ref((ref (module 15)))
 0x13d3 | 01 64 0d    | 1 locals of type Ref((ref (module 13)))
 0x13d6 | 01 7f       | 1 locals of type I32
 0x13d8 | 01 64 00    | 1 locals of type Ref((ref (module 0)))
 0x13db | 20 01       | local_get local_index:1
 0x13dd | fb 02 10 07 | struct_get struct_type_index:16 field_index:7
 0x13e1 | 21 03       | local_set local_index:3
 0x13e3 | 20 01       | local_get local_index:1
 0x13e5 | fb 02 10 06 | struct_get struct_type_index:16 field_index:6
 0x13e9 | fb 02 0f 04 | struct_get struct_type_index:15 field_index:4
 0x13ed | fb 02 05 03 | struct_get struct_type_index:5 field_index:3
 0x13f1 | 21 0e       | local_set local_index:14
 0x13f3 | 20 02       | local_get local_index:2
 0x13f5 | 41 20       | i32_const value:32
 0x13f7 | 4f          | i32_ge_u
 0x13f8 | 20 02       | local_get local_index:2
 0x13fa | 41 2f       | i32_const value:47
 0x13fc | 4d          | i32_le_u
 0x13fd | 71          | i32_and
 0x13fe | 04 40       | if blockty:Empty
 0x1400 | 20 02       | local_get local_index:2
 0x1402 | 41 20       | i32_const value:32
 0x1404 | 6b          | i32_sub
 0x1405 | 21 0d       | local_set local_index:13
 0x1407 | 20 01       | local_get local_index:1
 0x1409 | 20 0e       | local_get local_index:14
 0x140b | 20 0d       | local_get local_index:13
 0x140d | fb 0b 00    | array_get array_type_index:0
 0x1410 | d4          | ref_as_non_null
 0x1411 | 10 21       | call function_index:33
 0x1413 | 41 00       | i32_const value:0
 0x1415 | 0f          | return
 0x1416 | 0b          | end
 0x1417 | 20 02       | local_get local_index:2
 0x1419 | 41 f0 00    | i32_const value:112
 0x141c | 46          | i32_eq
 0x141d | 04 40       | if blockty:Empty
 0x141f | 20 01       | local_get local_index:1
 0x1421 | 20 03       | local_get local_index:3
 0x1423 | 10 21       | call function_index:33
 0x1425 | 41 00       | i32_const value:0
 0x1427 | 0f          | return
 0x1428 | 0b          | end
 0x1429 | 20 02       | local_get local_index:2
 0x142b | 41 b8 01    | i32_const value:184
 0x142e | 46          | i32_eq
 0x142f | 04 40       | if blockty:Empty
 0x1431 | 20 01       | local_get local_index:1
 0x1433 | 20 01       | local_get local_index:1
 0x1435 | 10 22       | call function_index:34
 0x1437 | 10 2b       | call function_index:43
 0x1439 | 20 01       | local_get local_index:1
 0x143b | 10 22       | call function_index:34
 0x143d | 10 2b       | call function_index:43
 0x143f | 6c          | i32_mul
 0x1440 | 10 29       | call function_index:41
 0x1442 | 10 21       | call function_index:33
 0x1444 | 41 00       | i32_const value:0
 0x1446 | 0f          | return
 0x1447 | 0b          | end
 0x1448 | 20 02       | local_get local_index:2
 0x144a | 41 b0 01    | i32_const value:176
 0x144d | 46          | i32_eq
 0x144e | 04 40       | if blockty:Empty
 0x1450 | 20 01       | local_get local_index:1
 0x1452 | 20 01       | local_get local_index:1
 0x1454 | 10 22       | call function_index:34
 0x1456 | 10 2b       | call function_index:43
 0x1458 | 20 01       | local_get local_index:1
 0x145a | 10 22       | call function_index:34
 0x145c | 10 2b       | call function_index:43
 0x145e | 6a          | i32_add
 0x145f | 10 29       | call function_index:41
 0x1461 | 10 21       | call function_index:33
 0x1463 | 41 00       | i32_const value:0
 0x1465 | 0f          | return
 0x1466 | 0b          | end
 0x1467 | 20 02       | local_get local_index:2
 0x1469 | 41 fc 00    | i32_const value:124
 0x146c | 46          | i32_eq
 0x146d | 04 40       | if blockty:Empty
 0x146f | 41 01       | i32_const value:1
 0x1471 | 0f          | return
 0x1472 | 0b          | end
 0x1473 | 20 02       | local_get local_index:2
 0x1475 | 41 d0 01    | i32_const value:208
 0x1478 | 46          | i32_eq
 0x1479 | 04 40       | if blockty:Empty
 0x147b | 20 01       | local_get local_index:1
 0x147d | 10 22       | call function_index:34
 0x147f | 21 03       | local_set local_index:3
 0x1481 | 20 02       | local_get local_index:2
 0x1483 | 41 0f       | i32_const value:15
 0x1485 | 71          | i32_and
 0x1486 | 21 0d       | local_set local_index:13
 0x1488 | 20 0e       | local_get local_index:14
 0x148a | 20 0d       | local_get local_index:13
 0x148c | fb 0b 00    | array_get array_type_index:0
 0x148f | fb 16 09    | ref_cast_non_null hty:Concrete(Module(9))
 0x1492 | 21 0a       | local_set local_index:10
 0x1494 | 20 00       | local_get local_index:0
 0x1496 | 20 03       | local_get local_index:3
 0x1498 | 10 24       | call function_index:36
 0x149a | fb 16 0d    | ref_cast_non_null hty:Concrete(Module(13))
 0x149d | 21 0c       | local_set local_index:12
 0x149f | 20 00       | local_get local_index:0
 0x14a1 | 20 0a       | local_get local_index:10
 0x14a3 | 20 0c       | local_get local_index:12
 0x14a5 | 10 26       | call function_index:38
 0x14a7 | 22 0b       | local_tee local_index:11
 0x14a9 | d1          | ref_is_null
 0x14aa | 04 40       | if blockty:Empty
 0x14ac | 20 00       | local_get local_index:0
 0x14ae | 20 03       | local_get local_index:3
 0x14b0 | 20 0a       | local_get local_index:10
 0x14b2 | 10 25       | call function_index:37
 0x14b4 | 22 0b       | local_tee local_index:11
 0x14b6 | d1          | ref_is_null
 0x14b7 | 04 40       | if blockty:Empty
 0x14b9 | 20 0a       | local_get local_index:10
 0x14bb | 08 00       | throw tag_index:0
 0x14bd | 0b          | end
 0x14be | 20 00       | local_get local_index:0
 0x14c0 | 20 0a       | local_get local_index:10
 0x14c2 | 20 0c       | local_get local_index:12
 0x14c4 | 20 0b       | local_get local_index:11
 0x14c6 | 10 27       | call function_index:39
 0x14c8 | 0b          | end
 0x14c9 | 20 00       | local_get local_index:0
 0x14cb | 20 00       | local_get local_index:0
 0x14cd | 20 03       | local_get local_index:3
 0x14cf | 20 0b       | local_get local_index:11
 0x14d1 | d4          | ref_as_non_null
 0x14d2 | 20 0a       | local_get local_index:10
 0x14d4 | 10 28       | call function_index:40
 0x14d6 | fb 05 12 00 | struct_set struct_type_index:18 field_index:0
 0x14da | 41 00       | i32_const value:0
 0x14dc | 0f          | return
 0x14dd | 0b          | end
 0x14de | 00          | unreachable
 0x14df | 0b          | end
============== func 50 ====================
 0x14e0 | e2 02       | size of function
 0x14e2 | 07          | 7 local blocks
 0x14e3 | 01 63 10    | 1 locals of type Ref((ref null (module 16)))
 0x14e6 | 01 63 0f    | 1 locals of type Ref((ref null (module 15)))
 0x14e9 | 02 7f       | 2 locals of type I32
 0x14eb | 02 64 6d    | 2 locals of type Ref((ref eq))
 0x14ee | 01 7f       | 1 locals of type I32
 0x14f0 | 01 64 01    | 1 locals of type Ref((ref (module 1)))
 0x14f3 | 01 7f       | 1 locals of type I32
 0x14f5 | 41 2a       | i32_const value:42
 0x14f7 | fb 1c       | ref_i31
 0x14f9 | 21 06       | local_set local_index:6
 0x14fb | 02 40       | block blockty:Empty
 0x14fd | 03 40       | loop blockty:Empty
 0x14ff | 20 00       | local_get local_index:0
 0x1501 | fb 02 12 00 | struct_get struct_type_index:18 field_index:0
 0x1505 | 22 01       | local_tee local_index:1
 0x1507 | d1          | ref_is_null
 0x1508 | 04 40       | if blockty:Empty
 0x150a | 0c 02       | br relative_depth:2
 0x150c | 0b          | end
 0x150d | 20 01       | local_get local_index:1
 0x150f | d4          | ref_as_non_null
 0x1510 | fb 02 10 07 | struct_get struct_type_index:16 field_index:7
 0x1514 | 21 05       | local_set local_index:5
 0x1516 | 20 01       | local_get local_index:1
 0x1518 | d4          | ref_as_non_null
 0x1519 | fb 02 10 06 | struct_get struct_type_index:16 field_index:6
 0x151d | 22 02       | local_tee local_index:2
 0x151f | fb 02 0f 06 | struct_get struct_type_index:15 field_index:6
 0x1523 | 41 01       | i32_const value:1
 0x1525 | 6a          | i32_add
 0x1526 | 21 07       | local_set local_index:7
 0x1528 | 20 02       | local_get local_index:2
 0x152a | 20 07       | local_get local_index:7
 0x152c | fb 05 0f 06 | struct_set struct_type_index:15 field_index:6
 0x1530 | 20 07       | local_get local_index:7
 0x1532 | 20 02       | local_get local_index:2
 0x1534 | fb 02 0f 08 | struct_get struct_type_index:15 field_index:8
 0x1538 | 46          | i32_eq
 0x1539 | 20 00       | local_get local_index:0
 0x153b | fb 02 12 01 | struct_get struct_type_index:18 field_index:1
 0x153f | 71          | i32_and
 0x1540 | 04 40       | if blockty:Empty
 0x1542 | 20 02       | local_get local_index:2
 0x1544 | fb 02 0f 09 | struct_get struct_type_index:15 field_index:9
 0x1548 | 04 40       | if blockty:Empty
 0x154a | 20 02       | local_get local_index:2
 0x154c | 10 2c       | call function_index:44
 0x154e | 45          | i32_eqz
 0x154f | 04 40       | if blockty:Empty
 0x1551 | 20 02       | local_get local_index:2
 0x1553 | d4          | ref_as_non_null
 0x1554 | 20 05       | local_get local_index:5
 0x1556 | 10 2a       | call function_index:42
 0x1558 | 04 7f       | if blockty:Type(I32)
 0x155a | 20 05       | local_get local_index:5
 0x155c | 10 2b       | call function_index:43
 0x155e | 05          | else
 0x155f | 20 05       | local_get local_index:5
 0x1561 | fb 16 03    | ref_cast_non_null hty:Concrete(Module(3))
 0x1564 | fb 02 03 01 | struct_get struct_type_index:3 field_index:1
 0x1568 | 0b          | end
 0x1569 | 10 01       | call function_index:1
 0x156b | 0b          | end
 0x156c | 0b          | end
 0x156d | 0b          | end
 0x156e | 20 02       | local_get local_index:2
 0x1570 | d4          | ref_as_non_null
 0x1571 | 10 2c       | call function_index:44
 0x1573 | 04 40       | if blockty:Empty
 0x1575 | 20 02       | local_get local_index:2
 0x1577 | fb 02 0f 07 | struct_get struct_type_index:15 field_index:7
 0x157b | 21 09       | local_set local_index:9
 0x157d | 20 01       | local_get local_index:1
 0x157f | d4          | ref_as_non_null
 0x1580 | 20 09       | local_get local_index:9
 0x1582 | 10 2d       | call function_index:45
 0x1584 | 04 40       | if blockty:Empty
 0x1586 | 20 02       | local_get local_index:2
 0x1588 | 41 00       | i32_const value:0
 0x158a | fb 05 0f 07 | struct_set struct_type_index:15 field_index:7
 0x158e | 0c 02       | br relative_depth:2
 0x1590 | 05          | else
 0x1591 | 20 00       | local_get local_index:0
 0x1593 | 20 01       | local_get local_index:1
 0x1595 | d4          | ref_as_non_null
 0x1596 | 10 2e       | call function_index:46
 0x1598 | 21 06       | local_set local_index:6
 0x159a | 0b          | end
 0x159b | 0c 01       | br relative_depth:1
 0x159d | 0b          | end
 0x159e | 20 02       | local_get local_index:2
 0x15a0 | fb 02 0f 03 | struct_get struct_type_index:15 field_index:3
 0x15a4 | fb 16 06    | ref_cast_non_null hty:Concrete(Module(6))
 0x15a7 | fb 02 06 03 | struct_get struct_type_index:6 field_index:3
 0x15ab | 21 08       | local_set local_index:8
 0x15ad | 03 40       | loop blockty:Empty
 0x15af | 20 00       | local_get local_index:0
 0x15b1 | fb 02 12 00 | struct_get struct_type_index:18 field_index:0
 0x15b5 | 22 01       | local_tee local_index:1
 0x15b7 | d1          | ref_is_null
 0x15b8 | 0d 01       | br_if relative_depth:1
 0x15ba | 20 01       | local_get local_index:1
 0x15bc | d4          | ref_as_non_null
 0x15bd | fb 02 10 04 | struct_get struct_type_index:16 field_index:4
 0x15c1 | 21 04       | local_set local_index:4
 0x15c3 | 20 01       | local_get local_index:1
 0x15c5 | d4          | ref_as_non_null
 0x15c6 | fb 02 10 06 | struct_get struct_type_index:16 field_index:6
 0x15ca | 22 02       | local_tee local_index:2
 0x15cc | fb 02 0f 03 | struct_get struct_type_index:15 field_index:3
 0x15d0 | fb 16 06    | ref_cast_non_null hty:Concrete(Module(6))
 0x15d3 | fb 02 06 03 | struct_get struct_type_index:6 field_index:3
 0x15d7 | 22 08       | local_tee local_index:8
 0x15d9 | fb 0f       | array_len
 0x15db | 20 04       | local_get local_index:4
 0x15dd | 4d          | i32_le_u
 0x15de | 04 40       | if blockty:Empty
 0x15e0 | 20 00       | local_get local_index:0
 0x15e2 | 20 01       | local_get local_index:1
 0x15e4 | d4          | ref_as_non_null
 0x15e5 | 10 2e       | call function_index:46
 0x15e7 | 21 06       | local_set local_index:6
 0x15e9 | 0c 01       | br relative_depth:1
 0x15eb | 0b          | end
 0x15ec | 20 08       | local_get local_index:8
 0x15ee | 20 04       | local_get local_index:4
 0x15f0 | fb 0d 01    | array_get_u array_type_index:1
 0x15f3 | 21 03       | local_set local_index:3
 0x15f5 | 20 00       | local_get local_index:0
 0x15f7 | 20 01       | local_get local_index:1
 0x15f9 | d4          | ref_as_non_null
 0x15fa | 20 03       | local_get local_index:3
 0x15fc | 10 31       | call function_index:49
 0x15fe | 04 40       | if blockty:Empty
 0x1600 | 20 00       | local_get local_index:0
 0x1602 | 20 01       | local_get local_index:1
 0x1604 | d4          | ref_as_non_null
 0x1605 | 10 2e       | call function_index:46
 0x1607 | 21 06       | local_set local_index:6
 0x1609 | 0c 01       | br relative_depth:1
 0x160b | 0b          | end
 0x160c | 20 00       | local_get local_index:0
 0x160e | fb 02 12 00 | struct_get struct_type_index:18 field_index:0
 0x1612 | 20 01       | local_get local_index:1
 0x1614 | d3          | ref_eq
 0x1615 | 04 40       | if blockty:Empty
 0x1617 | 20 01       | local_get local_index:1
 0x1619 | d4          | ref_as_non_null
 0x161a | 20 04       | local_get local_index:4
 0x161c | 41 01       | i32_const value:1
 0x161e | 6a          | i32_add
 0x161f | fb 05 10 04 | struct_set struct_type_index:16 field_index:4
 0x1623 | 05          | else
 0x1624 | 20 00       | local_get local_index:0
 0x1626 | fb 02 12 00 | struct_get struct_type_index:18 field_index:0
 0x162a | d4          | ref_as_non_null
 0x162b | fb 02 10 04 | struct_get struct_type_index:16 field_index:4
 0x162f | 45          | i32_eqz
 0x1630 | 04 40       | if blockty:Empty
 0x1632 | 0c 03       | br relative_depth:3
 0x1634 | 0b          | end
 0x1635 | 0b          | end
 0x1636 | 0c 00       | br relative_depth:0
 0x1638 | 0b          | end
 0x1639 | 0b          | end
 0x163a | 0b          | end
 0x163b | 20 06       | local_get local_index:6
 0x163d | 10 2b       | call function_index:43
 0x163f | 10 00       | call function_index:0
 0x1641 | 41 01       | i32_const value:1
 0x1643 | 0b          | end
 0x1644 | 00 92 18    | custom section
 0x1647 | 04 6e 61 6d | name: "name"
        | 65         
 0x164c | 01 d4 06    | function name section
 0x164f | 33          | 51 count
 0x1650 | 00 0c 72 65 | Naming { index: 0, name: "reportResult" }
        | 70 6f 72 74
        | 52 65 73 75
        | 6c 74      
 0x165e | 01 0f 74 72 | Naming { index: 1, name: "translateMethod" }
        | 61 6e 73 6c
        | 61 74 65 4d
        | 65 74 68 6f
        | 64         
 0x166f | 02 08 64 65 | Naming { index: 2, name: "debugLog" }
        | 62 75 67 4c
        | 6f 67      
 0x1679 | 03 17 62 79 | Naming { index: 3, name: "byteArrayIsEquivalentTo" }
        | 74 65 41 72
        | 72 61 79 49
        | 73 45 71 75
        | 69 76 61 6c
        | 65 6e 74 54
        | 6f         
 0x1692 | 04 14 73 79 | Naming { index: 4, name: "symbolIsEquivalentTo" }
        | 6d 62 6f 6c
        | 49 73 45 71
        | 75 69 76 61
        | 6c 65 6e 74
        | 54 6f      
 0x16a8 | 05 08 6e 65 | Naming { index: 5, name: "newArray" }
        | 77 41 72 72
        | 61 79      
 0x16b2 | 06 0c 6e 65 | Naming { index: 6, name: "newByteArray" }
        | 77 42 79 74
        | 65 41 72 72
        | 61 79      
 0x16c0 | 07 0c 6e 65 | Naming { index: 7, name: "newWordArray" }
        | 77 57 6f 72
        | 64 41 72 72
        | 61 79      
 0x16ce | 08 0d 6e 65 | Naming { index: 8, name: "newDictionary" }
        | 77 44 69 63
        | 74 69 6f 6e
        | 61 72 79   
 0x16dd | 09 0d 64 69 | Naming { index: 9, name: "dictionaryAdd" }
        | 63 74 69 6f
        | 6e 61 72 79
        | 41 64 64   
 0x16ec | 0a 0b 6c 69 | Naming { index: 10, name: "linkObjects" }
        | 6e 6b 4f 62
        | 6a 65 63 74
        | 73         
 0x16f9 | 0b 0d 6e 65 | Naming { index: 11, name: "newEmptyArray" }
        | 77 45 6d 70
        | 74 79 41 72
        | 72 61 79   
 0x1708 | 0c 08 61 72 | Naming { index: 12, name: "arrayAdd" }
        | 72 61 79 41
        | 64 64      
 0x1712 | 0d 15 6e 65 | Naming { index: 13, name: "newSubclassOfWithName" }
        | 77 53 75 62
        | 63 6c 61 73
        | 73 4f 66 57
        | 69 74 68 4e
        | 61 6d 65   
 0x1729 | 0e 12 6e 65 | Naming { index: 14, name: "newSymbolFromBytes" }
        | 77 53 79 6d
        | 62 6f 6c 46
        | 72 6f 6d 42
        | 79 74 65 73
 0x173d | 0f 02 64 6f | Naming { index: 15, name: "do" }
 0x1741 | 10 12 66 69 | Naming { index: 16, name: "fixMetalevelFields" }
        | 78 4d 65 74
        | 61 6c 65 76
        | 65 6c 46 69
        | 65 6c 64 73
 0x1755 | 11 11 6e 65 | Naming { index: 17, name: "newVirtualMachine" }
        | 77 56 69 72
        | 74 75 61 6c
        | 4d 61 63 68
        | 69 6e 65   
 0x1768 | 12 0f 6d 65 | Naming { index: 18, name: "methodBytecodes" }
        | 74 68 6f 64
        | 42 79 74 65
        | 63 6f 64 65
        | 73         
 0x1779 | 13 16 67 65 | Naming { index: 19, name: "getMethodFunctionIndex" }
        | 74 4d 65 74
        | 68 6f 64 46
        | 75 6e 63 74
        | 69 6f 6e 49
        | 6e 64 65 78
 0x1791 | 14 16 73 65 | Naming { index: 20, name: "setMethodFunctionIndex" }
        | 74 4d 65 74
        | 68 6f 64 46
        | 75 6e 63 74
        | 69 6f 6e 49
        | 6e 64 65 78
 0x17a9 | 15 0d 6f 6e | Naming { index: 21, name: "onContextPush" }
        | 43 6f 6e 74
        | 65 78 74 50
        | 75 73 68   
 0x17b8 | 16 0e 70 6f | Naming { index: 22, name: "popFromContext" }
        | 70 46 72 6f
        | 6d 43 6f 6e
        | 74 65 78 74
 0x17c8 | 17 0f 63 6f | Naming { index: 23, name: "contextReceiver" }
        | 6e 74 65 78
        | 74 52 65 63
        | 65 69 76 65
        | 72         
 0x17d9 | 18 0e 6d 65 | Naming { index: 24, name: "methodLiterals" }
        | 74 68 6f 64
        | 4c 69 74 65
        | 72 61 6c 73
 0x17e9 | 19 10 63 6f | Naming { index: 25, name: "contextLiteralAt" }
        | 6e 74 65 78
        | 74 4c 69 74
        | 65 72 61 6c
        | 41 74      
 0x17fb | 1a 0d 63 6f | Naming { index: 26, name: "contextMethod" }
        | 6e 74 65 78
        | 74 4d 65 74
        | 68 6f 64   
 0x180a | 1b 0b 61 72 | Naming { index: 27, name: "arrayOkayAt" }
        | 72 61 79 4f
        | 6b 61 79 41
        | 74         
 0x1817 | 1c 07 61 72 | Naming { index: 28, name: "arrayAt" }
        | 72 61 79 41
        | 74         
 0x1820 | 1d 0b 62 79 | Naming { index: 29, name: "byteArrayAt" }
        | 74 65 41 72
        | 72 61 79 41
        | 74         
 0x182d | 1e 0f 62 79 | Naming { index: 30, name: "byteArrayLength" }
        | 74 65 41 72
        | 72 61 79 4c
        | 65 6e 67 74
        | 68         
 0x183e | 1f 15 63 6f | Naming { index: 31, name: "copyByteArrayToMemory" }
        | 70 79 42 79
        | 74 65 41 72
        | 72 61 79 54
        | 6f 4d 65 6d
        | 6f 72 79   
 0x1855 | 20 10 6e 65 | Naming { index: 32, name: "nextIdentityHash" }
        | 78 74 49 64
        | 65 6e 74 69
        | 74 79 48 61
        | 73 68      
 0x1867 | 21 0b 70 75 | Naming { index: 33, name: "pushOnStack" }
        | 73 68 4f 6e
        | 53 74 61 63
        | 6b         
 0x1874 | 22 0c 70 6f | Naming { index: 34, name: "popFromStack" }
        | 70 46 72 6f
        | 6d 53 74 61
        | 63 6b      
 0x1882 | 23 0a 74 6f | Naming { index: 35, name: "topOfStack" }
        | 70 4f 66 53
        | 74 61 63 6b
 0x188e | 24 0d 63 6c | Naming { index: 36, name: "classOfObject" }
        | 61 73 73 4f
        | 66 4f 62 6a
        | 65 63 74   
 0x189d | 25 0c 6c 6f | Naming { index: 37, name: "lookupMethod" }
        | 6f 6b 75 70
        | 4d 65 74 68
        | 6f 64      
 0x18ab | 26 13 6c 6f | Naming { index: 38, name: "lookupInMethodCache" }
        | 6f 6b 75 70
        | 49 6e 4d 65
        | 74 68 6f 64
        | 43 61 63 68
        | 65         
 0x18c0 | 27 12 73 74 | Naming { index: 39, name: "storeInMethodCache" }
        | 6f 72 65 49
        | 6e 4d 65 74
        | 68 6f 64 43
        | 61 63 68 65
 0x18d4 | 28 0a 6e 65 | Naming { index: 40, name: "newContext" }
        | 77 43 6f 6e
        | 74 65 78 74
 0x18e0 | 29 14 73 6d | Naming { index: 41, name: "smallIntegerForValue" }
        | 61 6c 6c 49
        | 6e 74 65 67
        | 65 72 46 6f
        | 72 56 61 6c
        | 75 65      
 0x18f6 | 2a 0e 69 73 | Naming { index: 42, name: "isSmallInteger" }
        | 53 6d 61 6c
        | 6c 49 6e 74
        | 65 67 65 72
 0x1906 | 2b 13 76 61 | Naming { index: 43, name: "valueOfSmallInteger" }
        | 6c 75 65 4f
        | 66 53 6d 61
        | 6c 6c 49 6e
        | 74 65 67 65
        | 72         
 0x191b | 2c 0c 69 73 | Naming { index: 44, name: "isTranslated" }
        | 54 72 61 6e
        | 73 6c 61 74
        | 65 64      
 0x1929 | 2d 17 65 78 | Naming { index: 45, name: "executeTranslatedMethod" }
        | 65 63 75 74
        | 65 54 72 61
        | 6e 73 6c 61
        | 74 65 64 4d
        | 65 74 68 6f
        | 64         
 0x1942 | 2e 12 68 61 | Naming { index: 46, name: "handleMethodReturn" }
        | 6e 64 6c 65
        | 4d 65 74 68
        | 6f 64 52 65
        | 74 75 72 6e
 0x1956 | 2f 19 63 72 | Naming { index: 47, name: "createMinimalObjectMemory" }
        | 65 61 74 65
        | 4d 69 6e 69
        | 6d 61 6c 4f
        | 62 6a 65 63
        | 74 4d 65 6d
        | 6f 72 79   
 0x1971 | 30 12 72 65 | Naming { index: 48, name: "resetMinimalMemory" }
        | 73 65 74 4d
        | 69 6e 69 6d
        | 61 6c 4d 65
        | 6d 6f 72 79
 0x1985 | 31 11 69 6e | Naming { index: 49, name: "interpretBytecode" }
        | 74 65 72 70
        | 72 65 74 42
        | 79 74 65 63
        | 6f 64 65   
 0x1998 | 32 09 69 6e | Naming { index: 50, name: "interpret" }
        | 74 65 72 70
        | 72 65 74   
 0x19a3 | 02 ab 0c    | local section
 0x19a6 | 30          | 48 count
 0x19a7 | 03          | function 3 local name section
 0x19a8 | 06          | 6 count
 0x19a9 | 00 0b 66 69 | Naming { index: 0, name: "firstObject" }
        | 72 73 74 4f
        | 62 6a 65 63
        | 74         
 0x19b6 | 01 0c 73 65 | Naming { index: 1, name: "secondObject" }
        | 63 6f 6e 64
        | 4f 62 6a 65
        | 63 74      
 0x19c4 | 02 0a 66 69 | Naming { index: 2, name: "firstArray" }
        | 72 73 74 41
        | 72 72 61 79
 0x19d0 | 03 0b 73 65 | Naming { index: 3, name: "secondArray" }
        | 63 6f 6e 64
        | 41 72 72 61
        | 79         
 0x19dd | 04 06 6c 65 | Naming { index: 4, name: "length" }
        | 6e 67 74 68
 0x19e5 | 05 05 69 6e | Naming { index: 5, name: "index" }
        | 64 65 78   
 0x19ec | 04          | function 4 local name section
 0x19ed | 02          | 2 count
 0x19ee | 00 0b 66 69 | Naming { index: 0, name: "firstSymbol" }
        | 72 73 74 53
        | 79 6d 62 6f
        | 6c         
 0x19fb | 01 0c 73 65 | Naming { index: 1, name: "secondSymbol" }
        | 63 6f 6e 64
        | 53 79 6d 62
        | 6f 6c      
 0x1a09 | 05          | function 5 local name section
 0x1a0a | 02          | 2 count
 0x1a0b | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x1a0f | 01 05 61 72 | Naming { index: 1, name: "array" }
        | 72 61 79   
 0x1a16 | 06          | function 6 local name section
 0x1a17 | 02          | 2 count
 0x1a18 | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x1a1c | 01 05 61 72 | Naming { index: 1, name: "array" }
        | 72 61 79   
 0x1a23 | 07          | function 7 local name section
 0x1a24 | 02          | 2 count
 0x1a25 | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x1a29 | 01 05 61 72 | Naming { index: 1, name: "array" }
        | 72 61 79   
 0x1a30 | 08          | function 8 local name section
 0x1a31 | 01          | 1 count
 0x1a32 | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x1a36 | 09          | function 9 local name section
 0x1a37 | 0e          | 14 count
 0x1a38 | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x1a3c | 01 0a 64 69 | Naming { index: 1, name: "dictionary" }
        | 63 74 69 6f
        | 6e 61 72 79
 0x1a48 | 02 03 6b 65 | Naming { index: 2, name: "key" }
        | 79         
 0x1a4d | 03 05 76 61 | Naming { index: 3, name: "value" }
        | 6c 75 65   
 0x1a54 | 04 04 6b 65 | Naming { index: 4, name: "keys" }
        | 79 73      
 0x1a5a | 05 06 76 61 | Naming { index: 5, name: "values" }
        | 6c 75 65 73
 0x1a62 | 06 05 63 6f | Naming { index: 6, name: "count" }
        | 75 6e 74   
 0x1a69 | 07 08 63 61 | Naming { index: 7, name: "capacity" }
        | 70 61 63 69
        | 74 79      
 0x1a73 | 08 07 6e 65 | Naming { index: 8, name: "newKeys" }
        | 77 4b 65 79
        | 73         
 0x1a7c | 09 09 6e 65 | Naming { index: 9, name: "newValues" }
        | 77 56 61 6c
        | 75 65 73   
 0x1a87 | 0a 0c 6e 65 | Naming { index: 10, name: "newKeysArray" }
        | 77 4b 65 79
        | 73 41 72 72
        | 61 79      
 0x1a95 | 0b 0e 6e 65 | Naming { index: 11, name: "newValuesArray" }
        | 77 56 61 6c
        | 75 65 73 41
        | 72 72 61 79
 0x1aa5 | 0c 05 69 6e | Naming { index: 12, name: "index" }
        | 64 65 78   
 0x1aac | 0d 0b 65 78 | Naming { index: 13, name: "existingKey" }
        | 69 73 74 69
        | 6e 67 4b 65
        | 79         
 0x1ab9 | 0a          | function 10 local name section
 0x1aba | 07          | 7 count
 0x1abb | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x1abf | 01 07 6f 62 | Naming { index: 1, name: "objects" }
        | 6a 65 63 74
        | 73         
 0x1ac8 | 02 0e 70 72 | Naming { index: 2, name: "previousObject" }
        | 65 76 69 6f
        | 75 73 4f 62
        | 6a 65 63 74
 0x1ad8 | 03 0a 6e 65 | Naming { index: 3, name: "nextObject" }
        | 78 74 4f 62
        | 6a 65 63 74
 0x1ae4 | 04 05 6c 69 | Naming { index: 4, name: "limit" }
        | 6d 69 74   
 0x1aeb | 05 05 69 6e | Naming { index: 5, name: "index" }
        | 64 65 78   
 0x1af2 | 06 07 73 63 | Naming { index: 6, name: "scratch" }
        | 72 61 74 63
        | 68         
 0x1afb | 0b          | function 11 local name section
 0x1afc | 01          | 1 count
 0x1afd | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x1b01 | 0c          | function 12 local name section
 0x1b02 | 06          | 6 count
 0x1b03 | 00 05 61 72 | Naming { index: 0, name: "array" }
        | 72 61 79   
 0x1b0a | 01 07 65 6c | Naming { index: 1, name: "element" }
        | 65 6d 65 6e
        | 74         
 0x1b13 | 02 0e 6e 65 | Naming { index: 2, name: "newObjectArray" }
        | 77 4f 62 6a
        | 65 63 74 41
        | 72 72 61 79
 0x1b23 | 03 0e 6f 6c | Naming { index: 3, name: "oldObjectArray" }
        | 64 4f 62 6a
        | 65 63 74 41
        | 72 72 61 79
 0x1b33 | 04 05 69 6e | Naming { index: 4, name: "index" }
        | 64 65 78   
 0x1b3a | 05 05 6c 69 | Naming { index: 5, name: "limit" }
        | 6d 69 74   
 0x1b41 | 0d          | function 13 local name section
 0x1b42 | 06          | 6 count
 0x1b43 | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x1b47 | 01 0a 73 75 | Naming { index: 1, name: "superclass" }
        | 70 65 72 63
        | 6c 61 73 73
 0x1b53 | 02 04 6e 61 | Naming { index: 2, name: "name" }
        | 6d 65      
 0x1b59 | 03 05 63 6c | Naming { index: 3, name: "class" }
        | 61 73 73   
 0x1b60 | 04 09 6d 65 | Naming { index: 4, name: "metaclass" }
        | 74 61 63 6c
        | 61 73 73   
 0x1b6b | 05 0d 62 6f | Naming { index: 5, name: "bootstrapping" }
        | 6f 74 73 74
        | 72 61 70 70
        | 69 6e 67   
 0x1b7a | 0e          | function 14 local name section
 0x1b7b | 02          | 2 count
 0x1b7c | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x1b80 | 01 05 62 79 | Naming { index: 1, name: "bytes" }
        | 74 65 73   
 0x1b87 | 0f          | function 15 local name section
 0x1b88 | 05          | 5 count
 0x1b89 | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x1b8d | 01 05 61 72 | Naming { index: 1, name: "array" }
        | 72 61 79   
 0x1b94 | 02 08 66 75 | Naming { index: 2, name: "function" }
        | 6e 63 74 69
        | 6f 6e      
 0x1b9e | 03 05 69 6e | Naming { index: 3, name: "index" }
        | 64 65 78   
 0x1ba5 | 04 05 6c 69 | Naming { index: 4, name: "limit" }
        | 6d 69 74   
 0x1bac | 10          | function 16 local name section
 0x1bad | 02          | 2 count
 0x1bae | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x1bb2 | 01 05 63 6c | Naming { index: 1, name: "class" }
        | 61 73 73   
 0x1bb9 | 11          | function 17 local name section
 0x1bba | 04          | 4 count
 0x1bbb | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x1bbf | 01 15 63 6c | Naming { index: 1, name: "classClassDescription" }
        | 61 73 73 43
        | 6c 61 73 73
        | 44 65 73 63
        | 72 69 70 74
        | 69 6f 6e   
 0x1bd6 | 02 0d 63 6c | Naming { index: 2, name: "classBehavior" }
        | 61 73 73 42
        | 65 68 61 76
        | 69 6f 72   
 0x1be5 | 03 16 63 6c | Naming { index: 3, name: "classArrayedCollection" }
        | 61 73 73 41
        | 72 72 61 79
        | 65 64 43 6f
        | 6c 6c 65 63
        | 74 69 6f 6e
 0x1bfd | 12          | function 18 local name section
 0x1bfe | 01          | 1 count
 0x1bff | 00 06 6d 65 | Naming { index: 0, name: "method" }
        | 74 68 6f 64
 0x1c07 | 13          | function 19 local name section
 0x1c08 | 01          | 1 count
 0x1c09 | 00 06 6d 65 | Naming { index: 0, name: "method" }
        | 74 68 6f 64
 0x1c11 | 14          | function 20 local name section
 0x1c12 | 02          | 2 count
 0x1c13 | 00 06 6d 65 | Naming { index: 0, name: "method" }
        | 74 68 6f 64
 0x1c1b | 01 05 69 6e | Naming { index: 1, name: "index" }
        | 64 65 78   
 0x1c22 | 15          | function 21 local name section
 0x1c23 | 02          | 2 count
 0x1c24 | 00 07 63 6f | Naming { index: 0, name: "context" }
        | 6e 74 65 78
        | 74         
 0x1c2d | 01 0c 70 75 | Naming { index: 1, name: "pushedObject" }
        | 73 68 65 64
        | 4f 62 6a 65
        | 63 74      
 0x1c3b | 16          | function 22 local name section
 0x1c3c | 01          | 1 count
 0x1c3d | 00 07 63 6f | Naming { index: 0, name: "context" }
        | 6e 74 65 78
        | 74         
 0x1c46 | 17          | function 23 local name section
 0x1c47 | 01          | 1 count
 0x1c48 | 00 07 63 6f | Naming { index: 0, name: "context" }
        | 6e 74 65 78
        | 74         
 0x1c51 | 18          | function 24 local name section
 0x1c52 | 01          | 1 count
 0x1c53 | 00 06 6d 65 | Naming { index: 0, name: "method" }
        | 74 68 6f 64
 0x1c5b | 19          | function 25 local name section
 0x1c5c | 02          | 2 count
 0x1c5d | 00 07 63 6f | Naming { index: 0, name: "context" }
        | 6e 74 65 78
        | 74         
 0x1c66 | 01 05 69 6e | Naming { index: 1, name: "index" }
        | 64 65 78   
 0x1c6d | 1a          | function 26 local name section
 0x1c6e | 01          | 1 count
 0x1c6f | 00 07 63 6f | Naming { index: 0, name: "context" }
        | 6e 74 65 78
        | 74         
 0x1c78 | 1b          | function 27 local name section
 0x1c79 | 03          | 3 count
 0x1c7a | 00 05 61 72 | Naming { index: 0, name: "array" }
        | 72 61 79   
 0x1c81 | 01 05 69 6e | Naming { index: 1, name: "index" }
        | 64 65 78   
 0x1c88 | 02 06 6c 65 | Naming { index: 2, name: "length" }
        | 6e 67 74 68
 0x1c90 | 1c          | function 28 local name section
 0x1c91 | 03          | 3 count
 0x1c92 | 00 05 61 72 | Naming { index: 0, name: "array" }
        | 72 61 79   
 0x1c99 | 01 05 69 6e | Naming { index: 1, name: "index" }
        | 64 65 78   
 0x1ca0 | 02 0b 6f 62 | Naming { index: 2, name: "objectArray" }
        | 6a 65 63 74
        | 41 72 72 61
        | 79         
 0x1cad | 1d          | function 29 local name section
 0x1cae | 02          | 2 count
 0x1caf | 00 05 61 72 | Naming { index: 0, name: "array" }
        | 72 61 79   
 0x1cb6 | 01 05 69 6e | Naming { index: 1, name: "index" }
        | 64 65 78   
 0x1cbd | 1e          | function 30 local name section
 0x1cbe | 01          | 1 count
 0x1cbf | 00 05 61 72 | Naming { index: 0, name: "array" }
        | 72 61 79   
 0x1cc6 | 1f          | function 31 local name section
 0x1cc7 | 03          | 3 count
 0x1cc8 | 00 05 62 79 | Naming { index: 0, name: "bytes" }
        | 74 65 73   
 0x1ccf | 01 06 6c 65 | Naming { index: 1, name: "length" }
        | 6e 67 74 68
 0x1cd7 | 02 05 69 6e | Naming { index: 2, name: "index" }
        | 64 65 78   
 0x1cde | 20          | function 32 local name section
 0x1cdf | 01          | 1 count
 0x1ce0 | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x1ce4 | 21          | function 33 local name section
 0x1ce5 | 04          | 4 count
 0x1ce6 | 00 07 63 6f | Naming { index: 0, name: "context" }
        | 6e 74 65 78
        | 74         
 0x1cef | 01 05 76 61 | Naming { index: 1, name: "value" }
        | 6c 75 65   
 0x1cf6 | 02 05 73 74 | Naming { index: 2, name: "stack" }
        | 61 63 6b   
 0x1cfd | 03 02 73 70 | Naming { index: 3, name: "sp" }
 0x1d01 | 22          | function 34 local name section
 0x1d02 | 03          | 3 count
 0x1d03 | 00 07 63 6f | Naming { index: 0, name: "context" }
        | 6e 74 65 78
        | 74         
 0x1d0c | 01 05 73 74 | Naming { index: 1, name: "stack" }
        | 61 63 6b   
 0x1d13 | 02 02 73 70 | Naming { index: 2, name: "sp" }
 0x1d17 | 23          | function 35 local name section
 0x1d18 | 03          | 3 count
 0x1d19 | 00 07 63 6f | Naming { index: 0, name: "context" }
        | 6e 74 65 78
        | 74         
 0x1d22 | 01 05 73 74 | Naming { index: 1, name: "stack" }
        | 61 63 6b   
 0x1d29 | 02 02 73 70 | Naming { index: 2, name: "sp" }
 0x1d2d | 24          | function 36 local name section
 0x1d2e | 02          | 2 count
 0x1d2f | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x1d33 | 01 03 6f 62 | Naming { index: 1, name: "obj" }
        | 6a         
 0x1d38 | 25          | function 37 local name section
 0x1d39 | 0b          | 11 count
 0x1d3a | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x1d3e | 01 08 72 65 | Naming { index: 1, name: "receiver" }
        | 63 65 69 76
        | 65 72      
 0x1d48 | 02 08 73 65 | Naming { index: 2, name: "selector" }
        | 6c 65 63 74
        | 6f 72      
 0x1d52 | 03 05 63 6c | Naming { index: 3, name: "class" }
        | 61 73 73   
 0x1d59 | 04 0c 63 75 | Naming { index: 4, name: "currentClass" }
        | 72 72 65 6e
        | 74 43 6c 61
        | 73 73      
 0x1d67 | 05 10 6d 65 | Naming { index: 5, name: "methodDictionary" }
        | 74 68 6f 64
        | 44 69 63 74
        | 69 6f 6e 61
        | 72 79      
 0x1d79 | 06 04 6b 65 | Naming { index: 6, name: "keys" }
        | 79 73      
 0x1d7f | 07 06 76 61 | Naming { index: 7, name: "values" }
        | 6c 75 65 73
 0x1d87 | 08 05 63 6f | Naming { index: 8, name: "count" }
        | 75 6e 74   
 0x1d8e | 09 05 69 6e | Naming { index: 9, name: "index" }
        | 64 65 78   
 0x1d95 | 0a 03 6b 65 | Naming { index: 10, name: "key" }
        | 79         
 0x1d9a | 26          | function 38 local name section
 0x1d9b | 09          | 9 count
 0x1d9c | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x1da0 | 01 08 73 65 | Naming { index: 1, name: "selector" }
        | 6c 65 63 74
        | 6f 72      
 0x1daa | 02 0d 72 65 | Naming { index: 2, name: "receiverClass" }
        | 63 65 69 76
        | 65 72 43 6c
        | 61 73 73   
 0x1db9 | 03 05 63 61 | Naming { index: 3, name: "cache" }
        | 63 68 65   
 0x1dc0 | 04 09 63 61 | Naming { index: 4, name: "cacheSize" }
        | 63 68 65 53
        | 69 7a 65   
 0x1dcb | 05 04 68 61 | Naming { index: 5, name: "hash" }
        | 73 68      
 0x1dd1 | 06 05 69 6e | Naming { index: 6, name: "index" }
        | 64 65 78   
 0x1dd8 | 07 05 65 6e | Naming { index: 7, name: "entry" }
        | 74 72 79   
 0x1ddf | 08 0a 70 72 | Naming { index: 8, name: "probeLimit" }
        | 6f 62 65 4c
        | 69 6d 69 74
 0x1deb | 27          | function 39 local name section
 0x1dec | 07          | 7 count
 0x1ded | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x1df1 | 01 08 73 65 | Naming { index: 1, name: "selector" }
        | 6c 65 63 74
        | 6f 72      
 0x1dfb | 02 0d 72 65 | Naming { index: 2, name: "receiverClass" }
        | 63 65 69 76
        | 65 72 43 6c
        | 61 73 73   
 0x1e0a | 03 06 6d 65 | Naming { index: 3, name: "method" }
        | 74 68 6f 64
 0x1e12 | 04 05 63 61 | Naming { index: 4, name: "cache" }
        | 63 68 65   
 0x1e19 | 05 05 69 6e | Naming { index: 5, name: "index" }
        | 64 65 78   
 0x1e20 | 06 05 65 6e | Naming { index: 6, name: "entry" }
        | 74 72 79   
 0x1e27 | 28          | function 40 local name section
 0x1e28 | 04          | 4 count
 0x1e29 | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x1e2d | 01 08 72 65 | Naming { index: 1, name: "receiver" }
        | 63 65 69 76
        | 65 72      
 0x1e37 | 02 06 6d 65 | Naming { index: 2, name: "method" }
        | 74 68 6f 64
 0x1e3f | 03 08 73 65 | Naming { index: 3, name: "selector" }
        | 6c 65 63 74
        | 6f 72      
 0x1e49 | 29          | function 41 local name section
 0x1e4a | 01          | 1 count
 0x1e4b | 00 05 76 61 | Naming { index: 0, name: "value" }
        | 6c 75 65   
 0x1e52 | 2a          | function 42 local name section
 0x1e53 | 01          | 1 count
 0x1e54 | 00 03 6f 62 | Naming { index: 0, name: "obj" }
        | 6a         
 0x1e59 | 2b          | function 43 local name section
 0x1e5a | 01          | 1 count
 0x1e5b | 00 03 6f 62 | Naming { index: 0, name: "obj" }
        | 6a         
 0x1e60 | 2c          | function 44 local name section
 0x1e61 | 01          | 1 count
 0x1e62 | 00 06 6d 65 | Naming { index: 0, name: "method" }
        | 74 68 6f 64
 0x1e6a | 2d          | function 45 local name section
 0x1e6b | 02          | 2 count
 0x1e6c | 00 07 63 6f | Naming { index: 0, name: "context" }
        | 6e 74 65 78
        | 74         
 0x1e75 | 01 0d 66 75 | Naming { index: 1, name: "functionIndex" }
        | 6e 63 74 69
        | 6f 6e 49 6e
        | 64 65 78   
 0x1e84 | 2e          | function 46 local name section
 0x1e85 | 04          | 4 count
 0x1e86 | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x1e8a | 01 07 63 6f | Naming { index: 1, name: "context" }
        | 6e 74 65 78
        | 74         
 0x1e93 | 02 06 73 65 | Naming { index: 2, name: "sender" }
        | 6e 64 65 72
 0x1e9b | 03 06 72 65 | Naming { index: 3, name: "result" }
        | 73 75 6c 74
 0x1ea3 | 2f          | function 47 local name section
 0x1ea4 | 04          | 4 count
 0x1ea5 | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x1ea9 | 01 0f 62 65 | Naming { index: 1, name: "benchmarkMethod" }
        | 6e 63 68 6d
        | 61 72 6b 4d
        | 65 74 68 6f
        | 64         
 0x1eba | 02 10 6d 65 | Naming { index: 2, name: "methodDictionary" }
        | 74 68 6f 64
        | 44 69 63 74
        | 69 6f 6e 61
        | 72 79      
 0x1ecc | 03 11 62 65 | Naming { index: 3, name: "benchmarkLiterals" }
        | 6e 63 68 6d
        | 61 72 6b 4c
        | 69 74 65 72
        | 61 6c 73   
 0x1edf | 30          | function 48 local name section
 0x1ee0 | 01          | 1 count
 0x1ee1 | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x1ee5 | 31          | function 49 local name section
 0x1ee6 | 0f          | 15 count
 0x1ee7 | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x1eeb | 01 07 63 6f | Naming { index: 1, name: "context" }
        | 6e 74 65 78
        | 74         
 0x1ef4 | 02 08 62 79 | Naming { index: 2, name: "bytecode" }
        | 74 65 63 6f
        | 64 65      
 0x1efe | 03 08 72 65 | Naming { index: 3, name: "receiver" }
        | 63 65 69 76
        | 65 72      
 0x1f08 | 04 06 76 61 | Naming { index: 4, name: "value1" }
        | 6c 75 65 31
 0x1f10 | 05 06 76 61 | Naming { index: 5, name: "value2" }
        | 6c 75 65 32
 0x1f18 | 06 04 69 6e | Naming { index: 6, name: "int1" }
        | 74 31      
 0x1f1e | 07 04 69 6e | Naming { index: 7, name: "int2" }
        | 74 32      
 0x1f24 | 08 06 72 65 | Naming { index: 8, name: "result" }
        | 73 75 6c 74
 0x1f2c | 09 0a 6e 65 | Naming { index: 9, name: "newContext" }
        | 77 43 6f 6e
        | 74 65 78 74
 0x1f38 | 0a 08 73 65 | Naming { index: 10, name: "selector" }
        | 6c 65 63 74
        | 6f 72      
 0x1f42 | 0b 06 6d 65 | Naming { index: 11, name: "method" }
        | 74 68 6f 64
 0x1f4a | 0c 0d 72 65 | Naming { index: 12, name: "receiverClass" }
        | 63 65 69 76
        | 65 72 43 6c
        | 61 73 73   
 0x1f59 | 0d 05 69 6e | Naming { index: 13, name: "index" }
        | 64 65 78   
 0x1f60 | 0e 08 6c 69 | Naming { index: 14, name: "literals" }
        | 74 65 72 61
        | 6c 73      
 0x1f6a | 32          | function 50 local name section
 0x1f6b | 0a          | 10 count
 0x1f6c | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x1f70 | 01 07 63 6f | Naming { index: 1, name: "context" }
        | 6e 74 65 78
        | 74         
 0x1f79 | 02 06 6d 65 | Naming { index: 2, name: "method" }
        | 74 68 6f 64
 0x1f81 | 03 08 62 79 | Naming { index: 3, name: "bytecode" }
        | 74 65 63 6f
        | 64 65      
 0x1f8b | 04 02 70 63 | Naming { index: 4, name: "pc" }
 0x1f8f | 05 08 72 65 | Naming { index: 5, name: "receiver" }
        | 63 65 69 76
        | 65 72      
 0x1f99 | 06 0b 72 65 | Naming { index: 6, name: "resultValue" }
        | 73 75 6c 74
        | 56 61 6c 75
        | 65         
 0x1fa6 | 07 0f 69 6e | Naming { index: 7, name: "invocationCount" }
        | 76 6f 63 61
        | 74 69 6f 6e
        | 43 6f 75 6e
        | 74         
 0x1fb7 | 08 09 62 79 | Naming { index: 8, name: "bytecodes" }
        | 74 65 63 6f
        | 64 65 73   
 0x1fc2 | 09 0d 66 75 | Naming { index: 9, name: "functionIndex" }
        | 6e 63 74 69
        | 6f 6e 49 6e
        | 64 65 78   
 0x1fd1 | 03 bc 01    | label section
 0x1fd4 | 09          | 9 count
 0x1fd5 | 03          | function 3 label name section
 0x1fd6 | 01          | 1 count
 0x1fd7 | 03 04 6c 6f | Naming { index: 3, name: "loop" }
        | 6f 70      
 0x1fdd | 09          | function 9 label name section
 0x1fde | 04          | 4 count
 0x1fdf | 01 0c 64 6f | Naming { index: 1, name: "done_copying" }
        | 6e 65 5f 63
        | 6f 70 79 69
        | 6e 67      
 0x1fed | 02 09 63 6f | Naming { index: 2, name: "copy_loop" }
        | 70 79 5f 6c
        | 6f 6f 70   
 0x1ff8 | 04 0a 63 68 | Naming { index: 4, name: "check_done" }
        | 65 63 6b 5f
        | 64 6f 6e 65
 0x2004 | 05 0a 63 68 | Naming { index: 5, name: "check_loop" }
        | 65 63 6b 5f
        | 6c 6f 6f 70
 0x2010 | 0a          | function 10 label name section
 0x2011 | 01          | 1 count
 0x2012 | 00 04 6c 69 | Naming { index: 0, name: "link" }
        | 6e 6b      
 0x2018 | 0c          | function 12 label name section
 0x2019 | 01          | 1 count
 0x201a | 01 04 6c 6f | Naming { index: 1, name: "loop" }
        | 6f 70      
 0x2020 | 0f          | function 15 label name section
 0x2021 | 01          | 1 count
 0x2022 | 00 09 65 6e | Naming { index: 0, name: "enumerate" }
        | 75 6d 65 72
        | 61 74 65   
 0x202d | 1f          | function 31 label name section
 0x202e | 01          | 1 count
 0x202f | 00 04 63 6f | Naming { index: 0, name: "copy" }
        | 70 79      
 0x2035 | 25          | function 37 label name section
 0x2036 | 02          | 2 count
 0x2037 | 00 0e 68 69 | Naming { index: 0, name: "hierarchy_loop" }
        | 65 72 61 72
        | 63 68 79 5f
        | 6c 6f 6f 70
 0x2047 | 02 0b 73 65 | Naming { index: 2, name: "search_loop" }
        | 61 72 63 68
        | 5f 6c 6f 6f
        | 70         
 0x2054 | 26          | function 38 label name section
 0x2055 | 01          | 1 count
 0x2056 | 01 0a 70 72 | Naming { index: 1, name: "probe_loop" }
        | 6f 62 65 5f
        | 6c 6f 6f 70
 0x2062 | 32          | function 50 label name section
 0x2063 | 03          | 3 count
 0x2064 | 00 08 66 69 | Naming { index: 0, name: "finished" }
        | 6e 69 73 68
        | 65 64      
 0x206e | 01 0e 65 78 | Naming { index: 1, name: "execution_loop" }
        | 65 63 75 74
        | 69 6f 6e 5f
        | 6c 6f 6f 70
 0x207e | 09 10 69 6e | Naming { index: 9, name: "interpreter_loop" }
        | 74 65 72 70
        | 72 65 74 65
        | 72 5f 6c 6f
        | 6f 70      
 0x2090 | 04 bd 02    | type name section
 0x2093 | 18          | 24 count
 0x2094 | 00 0b 6f 62 | Naming { index: 0, name: "objectArray" }
        | 6a 65 63 74
        | 41 72 72 61
        | 79         
 0x20a1 | 01 09 62 79 | Naming { index: 1, name: "byteArray" }
        | 74 65 41 72
        | 72 61 79   
 0x20ac | 02 09 77 6f | Naming { index: 2, name: "wordArray" }
        | 72 64 41 72
        | 72 61 79   
 0x20b7 | 03 06 4f 62 | Naming { index: 3, name: "Object" }
        | 6a 65 63 74
 0x20bf | 04 0f 55 6e | Naming { index: 4, name: "UndefinedObject" }
        | 64 65 66 69
        | 6e 65 64 4f
        | 62 6a 65 63
        | 74         
 0x20d0 | 05 05 41 72 | Naming { index: 5, name: "Array" }
        | 72 61 79   
 0x20d7 | 06 09 42 79 | Naming { index: 6, name: "ByteArray" }
        | 74 65 41 72
        | 72 61 79   
 0x20e2 | 07 09 57 6f | Naming { index: 7, name: "WordArray" }
        | 72 64 41 72
        | 72 61 79   
 0x20ed | 08 0e 56 61 | Naming { index: 8, name: "VariableObject" }
        | 72 69 61 62
        | 6c 65 4f 62
        | 6a 65 63 74
 0x20fd | 09 06 53 79 | Naming { index: 9, name: "Symbol" }
        | 6d 62 6f 6c
 0x2105 | 0a 0a 44 69 | Naming { index: 10, name: "Dictionary" }
        | 63 74 69 6f
        | 6e 61 72 79
 0x2111 | 0b 08 42 65 | Naming { index: 11, name: "Behavior" }
        | 68 61 76 69
        | 6f 72      
 0x211b | 0c 10 43 6c | Naming { index: 12, name: "ClassDescription" }
        | 61 73 73 44
        | 65 73 63 72
        | 69 70 74 69
        | 6f 6e      
 0x212d | 0d 05 43 6c | Naming { index: 13, name: "Class" }
        | 61 73 73   
 0x2134 | 0e 09 4d 65 | Naming { index: 14, name: "Metaclass" }
        | 74 61 63 6c
        | 61 73 73   
 0x213f | 0f 0e 43 6f | Naming { index: 15, name: "CompiledMethod" }
        | 6d 70 69 6c
        | 65 64 4d 65
        | 74 68 6f 64
 0x214f | 10 07 43 6f | Naming { index: 16, name: "Context" }
        | 6e 74 65 78
        | 74         
 0x2158 | 11 08 50 49 | Naming { index: 17, name: "PICEntry" }
        | 43 45 6e 74
        | 72 79      
 0x2162 | 12 0e 56 69 | Naming { index: 18, name: "VirtualMachine" }
        | 72 74 75 61
        | 6c 4d 61 63
        | 68 69 6e 65
 0x2172 | 13 0a 65 6e | Naming { index: 19, name: "enumerator" }
        | 75 6d 65 72
        | 61 74 6f 72
 0x217e | 14 18 6d 65 | Naming { index: 20, name: "messageNotUnderstoodType" }
        | 73 73 61 67
        | 65 4e 6f 74
        | 55 6e 64 65
        | 72 73 74 6f
        | 6f 64 54 79
        | 70 65      
 0x2198 | 15 0e 65 6d | Naming { index: 21, name: "emptyStackType" }
        | 70 74 79 53
        | 74 61 63 6b
        | 54 79 70 65
 0x21a8 | 16 15 76 61 | Naming { index: 22, name: "valuesLeftOnStackType" }
        | 6c 75 65 73
        | 4c 65 66 74
        | 4f 6e 53 74
        | 61 63 6b 54
        | 79 70 65   
 0x21bf | 17 0f 6f 75 | Naming { index: 23, name: "outOfBoundsType" }
        | 74 4f 66 42
        | 6f 75 6e 64
        | 73 54 79 70
        | 65         
 0x21d0 | 05 10       | table name section
 0x21d2 | 01          | 1 count
 0x21d3 | 00 0d 66 75 | Naming { index: 0, name: "functionTable" }
        | 6e 63 74 69
        | 6f 6e 54 61
        | 62 6c 65   
 0x21e2 | 06 04       | memory name section
 0x21e4 | 01          | 1 count
 0x21e5 | 00 01 30    | Naming { index: 0, name: "0" }
 0x21e8 | 07 2a       | global name section
 0x21ea | 02          | 2 count
 0x21eb | 00 11 62 65 | Naming { index: 0, name: "benchmarkSelector" }
        | 6e 63 68 6d
        | 61 72 6b 53
        | 65 6c 65 63
        | 74 6f 72   
 0x21fe | 01 14 62 79 | Naming { index: 1, name: "byteArrayCopyPointer" }
        | 74 65 41 72
        | 72 61 79 43
        | 6f 70 79 50
        | 6f 69 6e 74
        | 65 72      
 0x2214 | 0b 43       | tag name section
 0x2216 | 04          | 4 count
 0x2217 | 00 14 6d 65 | Naming { index: 0, name: "messageNotUnderstood" }
        | 73 73 61 67
        | 65 4e 6f 74
        | 55 6e 64 65
        | 72 73 74 6f
        | 6f 64      
 0x222d | 01 0a 65 6d | Naming { index: 1, name: "emptyStack" }
        | 70 74 79 53
        | 74 61 63 6b
 0x2239 | 02 11 76 61 | Naming { index: 2, name: "valuesLeftOnStack" }
        | 6c 75 65 73
        | 4c 65 66 74
        | 4f 6e 53 74
        | 61 63 6b   
 0x224c | 03 0b 6f 75 | Naming { index: 3, name: "outOfBounds" }
        | 74 4f 66 42
        | 6f 75 6e 64
        | 73         

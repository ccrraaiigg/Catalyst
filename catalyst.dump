    0x0 | 00 61 73 6d | version 1 (Module)
        | 01 00 00 00
    0x8 | 01 ac 05    | type section
    0xb | 2c          | 44 count
--- rec group 0 (explicit) ---
    0xc | 4e 13       | 
    0xe | 5e 6d 01    | [type 0] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Array(ArrayType(FieldType { element_type: Val(Ref(eqref)), mutable: true })), shared: false } }
   0x11 | 5e 78 01    | [type 1] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Array(ArrayType(FieldType { element_type: I8, mutable: true })), shared: false } }
   0x14 | 5e 7f 01    | [type 2] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Array(ArrayType(FieldType { element_type: Val(I32), mutable: true })), shared: false } }
   0x17 | 50 00 5f 03 | [type 3] SubType { is_final: false, supertype_idx: None, composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref((ref eq))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }] }), shared: false } }
        | 64 6d 01 7f
        | 01 6d 01   
   0x22 | 50 00 5f 03 | [type 4] SubType { is_final: false, supertype_idx: None, composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref((ref eq))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }] }), shared: false } }
        | 64 6d 01 7f
        | 01 6d 01   
   0x2d | 50 01 03 5f | [type 5] SubType { is_final: false, supertype_idx: Some(CoreTypeIndex { kind: "module", index: 3 }), composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref((ref eq))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref((ref (module 0)))), mutable: true }] }), shared: false } }
        | 04 64 6d 01
        | 7f 01 6d 01
        | 64 00 01   
   0x3c | 50 01 03 5f | [type 6] SubType { is_final: false, supertype_idx: Some(CoreTypeIndex { kind: "module", index: 3 }), composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref((ref eq))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref((ref (module 1)))), mutable: false }] }), shared: false } }
        | 04 64 6d 01
        | 7f 01 6d 01
        | 64 01 00   
   0x4b | 50 01 03 5f | [type 7] SubType { is_final: false, supertype_idx: Some(CoreTypeIndex { kind: "module", index: 3 }), composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref((ref eq))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref((ref (module 2)))), mutable: false }] }), shared: false } }
        | 04 64 6d 01
        | 7f 01 6d 01
        | 64 02 00   
   0x5a | 50 01 03 5f | [type 8] SubType { is_final: false, supertype_idx: Some(CoreTypeIndex { kind: "module", index: 3 }), composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref((ref eq))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref((ref eq))), mutable: true }] }), shared: false } }
        | 04 64 6d 01
        | 7f 01 6d 01
        | 64 6d 01   
   0x69 | 50 01 08 5f | [type 9] SubType { is_final: false, supertype_idx: Some(CoreTypeIndex { kind: "module", index: 8 }), composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref((ref eq))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref((ref eq))), mutable: true }] }), shared: false } }
        | 04 64 6d 01
        | 7f 01 6d 01
        | 64 6d 01   
   0x78 | 50 01 03 5f | [type 10] SubType { is_final: false, supertype_idx: Some(CoreTypeIndex { kind: "module", index: 3 }), composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref((ref eq))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref((ref (module 5)))), mutable: true }, FieldType { element_type: Val(Ref((ref (module 5)))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }] }), shared: false } }
        | 06 64 6d 01
        | 7f 01 6d 01
        | 64 05 01 64
        | 05 01 7f 01
   0x8c | 50 01 03 5f | [type 11] SubType { is_final: false, supertype_idx: Some(CoreTypeIndex { kind: "module", index: 3 }), composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref((ref eq))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref((ref (module 10)))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }] }), shared: false } }
        | 06 64 6d 01
        | 7f 01 6d 01
        | 6d 01 64 0a
        | 01 7f 01   
   0x9f | 50 01 0b 5f | [type 12] SubType { is_final: false, supertype_idx: Some(CoreTypeIndex { kind: "module", index: 11 }), composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref((ref eq))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref((ref (module 10)))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref((ref (module 5)))), mutable: true }, FieldType { element_type: Val(Ref((ref (module 6)))), mutable: true }] }), shared: false } }
        | 08 64 6d 01
        | 7f 01 6d 01
        | 6d 01 64 0a
        | 01 7f 01 64
        | 05 01 64 06
        | 01         
   0xb8 | 50 01 0c 5f | [type 13] SubType { is_final: false, supertype_idx: Some(CoreTypeIndex { kind: "module", index: 12 }), composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref((ref eq))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref((ref (module 10)))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref((ref (module 5)))), mutable: true }, FieldType { element_type: Val(Ref((ref (module 6)))), mutable: true }, FieldType { element_type: Val(Ref((ref (module 5)))), mutable: true }, FieldType { element_type: Val(Ref((ref (module 9)))), mutable: true }, FieldType { element_type: Val(Ref((ref (module 10)))), mutable: true }, FieldType { element_type: Val(Ref((ref (module 5)))), mutable: true }] }), shared: false } }
        | 0c 64 6d 01
        | 7f 01 6d 01
        | 6d 01 64 0a
        | 01 7f 01 64
        | 05 01 64 06
        | 01 64 05 01
        | 64 09 01 64
        | 0a 01 64 05
        | 01         
   0xdd | 50 01 0c 5f | [type 14] SubType { is_final: false, supertype_idx: Some(CoreTypeIndex { kind: "module", index: 12 }), composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref((ref eq))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref((ref (module 10)))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref((ref (module 5)))), mutable: true }, FieldType { element_type: Val(Ref((ref (module 6)))), mutable: true }, FieldType { element_type: Val(Ref((ref (module 13)))), mutable: true }] }), shared: false } }
        | 09 64 6d 01
        | 7f 01 6d 01
        | 6d 01 64 0a
        | 01 7f 01 64
        | 05 01 64 06
        | 01 64 0d 01
   0xf9 | 50 01 08 5f | [type 15] SubType { is_final: false, supertype_idx: Some(CoreTypeIndex { kind: "module", index: 8 }), composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref((ref eq))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref((ref eq))), mutable: true }, FieldType { element_type: Val(Ref((ref (module 5)))), mutable: false }, FieldType { element_type: Val(I32), mutable: false }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(I32), mutable: false }, FieldType { element_type: Val(I32), mutable: true }] }), shared: false } }
        | 0a 64 6d 01
        | 7f 01 6d 01
        | 64 6d 01 64
        | 05 00 7f 00
        | 7f 01 7f 01
        | 7f 00 7f 01
  0x115 | 50 01 03 5f | [type 16] SubType { is_final: false, supertype_idx: Some(CoreTypeIndex { kind: "module", index: 3 }), composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref((ref eq))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 16)))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref((ref (module 15)))), mutable: true }, FieldType { element_type: Val(Ref((ref eq))), mutable: true }, FieldType { element_type: Val(Ref((ref (module 5)))), mutable: true }, FieldType { element_type: Val(Ref((ref (module 5)))), mutable: true }, FieldType { element_type: Val(Ref((ref (module 5)))), mutable: true }] }), shared: false } }
        | 0b 64 6d 01
        | 7f 01 6d 01
        | 63 10 01 7f
        | 01 7f 01 64
        | 0f 01 64 6d
        | 01 64 05 01
        | 64 05 01 64
        | 05 01      
  0x137 | 5f 04 64 6d | [type 17] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref((ref eq))), mutable: true }, FieldType { element_type: Val(Ref((ref eq))), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 15)))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }] }), shared: false } }
        | 01 64 6d 01
        | 63 0f 01 7f
        | 01         
  0x144 | 5f 12 63 10 | [type 18] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref((ref null (module 16)))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref((ref (module 0)))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 13)))), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 13)))), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 13)))), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 13)))), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 13)))), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 13)))), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 13)))), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 13)))), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 13)))), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 13)))), mutable: true }] }), shared: false } }
        | 01 7f 01 64
        | 00 01 7f 01
        | 7f 01 7f 01
        | 6d 01 6d 01
        | 63 0d 01 63
        | 0d 01 63 0d
        | 01 63 0d 01
        | 63 0d 01 63
        | 0d 01 63 0d
        | 01 63 0d 01
        | 63 0d 01 63
        | 0d 01      
--- rec group 1 (implicit) ---
  0x176 | 60 02 64 12 | [type 19] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 18))), Ref(eqref)], results: [] }), shared: false } }
        | 6d 00      
--- rec group 2 (implicit) ---
  0x17c | 60 01 64 09 | [type 20] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 9)))], results: [] }), shared: false } }
        | 00         
--- rec group 3 (implicit) ---
  0x181 | 60 00 00    | [type 21] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [], results: [] }), shared: false } }
--- rec group 4 (implicit) ---
  0x184 | 60 00 00    | [type 22] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [], results: [] }), shared: false } }
--- rec group 5 (implicit) ---
  0x187 | 60 01 7f 00 | [type 23] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [I32], results: [] }), shared: false } }
--- rec group 6 (implicit) ---
  0x18b | 60 02 64 6d | [type 24] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref eq)), I32], results: [] }), shared: false } }
        | 7f 00      
--- rec group 7 (implicit) ---
  0x191 | 60 02 64 06 | [type 25] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 6))), Ref((ref (module 6)))], results: [I32] }), shared: false } }
        | 64 06 01 7f
--- rec group 8 (implicit) ---
  0x199 | 60 02 64 09 | [type 26] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 9))), Ref((ref (module 9)))], results: [I32] }), shared: false } }
        | 64 09 01 7f
--- rec group 9 (implicit) ---
  0x1a1 | 60 02 64 12 | [type 27] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 18))), Ref((ref (module 0)))], results: [Ref((ref (module 5)))] }), shared: false } }
        | 64 00 01 64
        | 05         
--- rec group 10 (implicit) ---
  0x1aa | 60 02 64 12 | [type 28] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 18))), Ref((ref (module 1)))], results: [Ref((ref (module 6)))] }), shared: false } }
        | 64 01 01 64
        | 06         
--- rec group 11 (implicit) ---
  0x1b3 | 60 02 64 12 | [type 29] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 18))), Ref((ref (module 2)))], results: [Ref((ref (module 7)))] }), shared: false } }
        | 64 02 01 64
        | 07         
--- rec group 12 (implicit) ---
  0x1bc | 60 01 64 12 | [type 30] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 18)))], results: [Ref((ref (module 10)))] }), shared: false } }
        | 01 64 0a   
--- rec group 13 (implicit) ---
  0x1c3 | 60 04 64 12 | [type 31] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 18))), Ref((ref (module 10))), Ref((ref eq)), Ref((ref eq))], results: [] }), shared: false } }
        | 64 0a 64 6d
        | 64 6d 00   
--- rec group 14 (implicit) ---
  0x1ce | 60 02 64 12 | [type 32] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 18))), Ref((ref (module 0)))], results: [] }), shared: false } }
        | 64 00 00   
--- rec group 15 (implicit) ---
  0x1d5 | 60 01 64 12 | [type 33] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 18)))], results: [Ref((ref (module 5)))] }), shared: false } }
        | 01 64 05   
--- rec group 16 (implicit) ---
  0x1dc | 60 02 64 05 | [type 34] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 5))), Ref((ref eq))], results: [] }), shared: false } }
        | 64 6d 00   
--- rec group 17 (implicit) ---
  0x1e3 | 60 03 64 12 | [type 35] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 18))), Ref((ref null (module 13))), Ref((ref (module 9)))], results: [Ref((ref (module 13)))] }), shared: false } }
        | 63 0d 64 09
        | 01 64 0d   
--- rec group 18 (implicit) ---
  0x1ee | 60 02 64 12 | [type 36] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 18))), Ref((ref (module 1)))], results: [Ref((ref (module 9)))] }), shared: false } }
        | 64 01 01 64
        | 09         
--- rec group 19 (implicit) ---
  0x1f7 | 60 03 64 12 | [type 37] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 18))), Ref((ref (module 0))), Ref((ref (module 19)))], results: [] }), shared: false } }
        | 64 00 64 13
        | 00         
--- rec group 20 (implicit) ---
  0x200 | 60 00 01 64 | [type 38] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [], results: [Ref((ref (module 18)))] }), shared: false } }
        | 12         
--- rec group 21 (implicit) ---
  0x205 | 60 01 64 6d | [type 39] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref eq))], results: [Ref((ref (module 1)))] }), shared: false } }
        | 01 64 01   
--- rec group 22 (implicit) ---
  0x20c | 60 01 64 6d | [type 40] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref eq))], results: [I32] }), shared: false } }
        | 01 7f      
--- rec group 23 (implicit) ---
  0x212 | 60 02 64 6d | [type 41] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref eq)), Ref((ref eq))], results: [] }), shared: false } }
        | 64 6d 00   
--- rec group 24 (implicit) ---
  0x219 | 60 01 64 6d | [type 42] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref eq))], results: [Ref((ref eq))] }), shared: false } }
        | 01 64 6d   
--- rec group 25 (implicit) ---
  0x220 | 60 02 64 6d | [type 43] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref eq)), I32], results: [Ref(eqref)] }), shared: false } }
        | 7f 01 6d   
--- rec group 26 (implicit) ---
  0x227 | 60 02 64 6d | [type 44] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref eq)), I32], results: [I32] }), shared: false } }
        | 7f 01 7f   
--- rec group 27 (implicit) ---
  0x22e | 60 02 64 05 | [type 45] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 5))), I32], results: [Ref(eqref)] }), shared: false } }
        | 7f 01 6d   
--- rec group 28 (implicit) ---
  0x235 | 60 02 64 01 | [type 46] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 1))), I32], results: [I32] }), shared: false } }
        | 7f 01 7f   
--- rec group 29 (implicit) ---
  0x23c | 60 01 64 01 | [type 47] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 1)))], results: [I32] }), shared: false } }
        | 01 7f      
--- rec group 30 (implicit) ---
  0x242 | 60 01 64 12 | [type 48] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 18)))], results: [I32] }), shared: false } }
        | 01 7f      
--- rec group 31 (implicit) ---
  0x248 | 60 02 64 10 | [type 49] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 16))), Ref((ref eq))], results: [] }), shared: false } }
        | 64 6d 00   
--- rec group 32 (implicit) ---
  0x24f | 60 01 63 10 | [type 50] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref null (module 16)))], results: [Ref((ref eq))] }), shared: false } }
        | 01 64 6d   
--- rec group 33 (implicit) ---
  0x256 | 60 02 64 12 | [type 51] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 18))), Ref((ref eq))], results: [Ref((ref eq))] }), shared: false } }
        | 64 6d 01 64
        | 6d         
--- rec group 34 (implicit) ---
  0x25f | 60 03 64 12 | [type 52] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 18))), Ref((ref eq)), Ref((ref eq))], results: [Ref((ref null (module 15)))] }), shared: false } }
        | 64 6d 64 6d
        | 01 63 0f   
--- rec group 35 (implicit) ---
  0x26a | 60 03 64 12 | [type 53] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 18))), Ref((ref eq)), Ref((ref (module 13)))], results: [Ref((ref null (module 15)))] }), shared: false } }
        | 64 6d 64 0d
        | 01 63 0f   
--- rec group 36 (implicit) ---
  0x275 | 60 04 64 12 | [type 54] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 18))), Ref((ref (module 9))), Ref((ref eq)), Ref((ref null (module 15)))], results: [] }), shared: false } }
        | 64 09 64 6d
        | 63 0f 00   
--- rec group 37 (implicit) ---
  0x280 | 60 04 64 12 | [type 55] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 18))), Ref((ref eq)), Ref((ref (module 15))), Ref((ref eq))], results: [Ref((ref (module 16)))] }), shared: false } }
        | 64 6d 64 0f
        | 64 6d 01 64
        | 10         
--- rec group 38 (implicit) ---
  0x28d | 60 01 7f 01 | [type 56] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [I32], results: [Ref((ref eq))] }), shared: false } }
        | 64 6d      
--- rec group 39 (implicit) ---
  0x293 | 60 01 63 0f | [type 57] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref null (module 15)))], results: [I32] }), shared: false } }
        | 01 7f      
--- rec group 40 (implicit) ---
  0x299 | 60 02 64 10 | [type 58] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 16))), I32], results: [I32] }), shared: false } }
        | 7f 01 7f   
--- rec group 41 (implicit) ---
  0x2a0 | 60 02 64 12 | [type 59] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 18))), Ref((ref null (module 16)))], results: [Ref((ref eq))] }), shared: false } }
        | 63 10 01 64
        | 6d         
--- rec group 42 (implicit) ---
  0x2a9 | 60 01 64 12 | [type 60] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 18)))], results: [] }), shared: false } }
        | 00         
--- rec group 43 (implicit) ---
  0x2ae | 60 03 64 12 | [type 61] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 18))), Ref((ref (module 16))), I32], results: [I32] }), shared: false } }
        | 64 10 7f 01
        | 7f         
  0x2b7 | 02 39       | import section
  0x2b9 | 03          | 3 count
  0x2ba | 03 65 6e 76 | import [func 0] Import { module: "env", name: "reportResult", ty: Func(23) }
        | 0c 72 65 70
        | 6f 72 74 52
        | 65 73 75 6c
        | 74 00 17   
  0x2cd | 03 65 6e 76 | import [func 1] Import { module: "env", name: "translateMethod", ty: Func(24) }
        | 0f 74 72 61
        | 6e 73 6c 61
        | 74 65 4d 65
        | 74 68 6f 64
        | 00 18      
  0x2e3 | 03 65 6e 76 | import [func 2] Import { module: "env", name: "debugLog", ty: Func(23) }
        | 08 64 65 62
        | 75 67 4c 6f
        | 67 00 17   
  0x2f2 | 03 31       | func section
  0x2f4 | 30          | 48 count
  0x2f5 | 19          | [func 3] type 25
  0x2f6 | 1a          | [func 4] type 26
  0x2f7 | 1b          | [func 5] type 27
  0x2f8 | 1c          | [func 6] type 28
  0x2f9 | 1d          | [func 7] type 29
  0x2fa | 1e          | [func 8] type 30
  0x2fb | 1f          | [func 9] type 31
  0x2fc | 20          | [func 10] type 32
  0x2fd | 21          | [func 11] type 33
  0x2fe | 22          | [func 12] type 34
  0x2ff | 23          | [func 13] type 35
  0x300 | 24          | [func 14] type 36
  0x301 | 25          | [func 15] type 37
  0x302 | 13          | [func 16] type 19
  0x303 | 26          | [func 17] type 38
  0x304 | 27          | [func 18] type 39
  0x305 | 28          | [func 19] type 40
  0x306 | 18          | [func 20] type 24
  0x307 | 29          | [func 21] type 41
  0x308 | 2a          | [func 22] type 42
  0x309 | 2a          | [func 23] type 42
  0x30a | 2a          | [func 24] type 42
  0x30b | 2b          | [func 25] type 43
  0x30c | 2a          | [func 26] type 42
  0x30d | 2c          | [func 27] type 44
  0x30e | 2d          | [func 28] type 45
  0x30f | 2e          | [func 29] type 46
  0x310 | 28          | [func 30] type 40
  0x311 | 2f          | [func 31] type 47
  0x312 | 30          | [func 32] type 48
  0x313 | 31          | [func 33] type 49
  0x314 | 32          | [func 34] type 50
  0x315 | 32          | [func 35] type 50
  0x316 | 33          | [func 36] type 51
  0x317 | 34          | [func 37] type 52
  0x318 | 35          | [func 38] type 53
  0x319 | 36          | [func 39] type 54
  0x31a | 37          | [func 40] type 55
  0x31b | 38          | [func 41] type 56
  0x31c | 28          | [func 42] type 40
  0x31d | 28          | [func 43] type 40
  0x31e | 39          | [func 44] type 57
  0x31f | 3a          | [func 45] type 58
  0x320 | 3b          | [func 46] type 59
  0x321 | 30          | [func 47] type 48
  0x322 | 3c          | [func 48] type 60
  0x323 | 3d          | [func 49] type 61
  0x324 | 30          | [func 50] type 48
  0x325 | 04 04       | table section
  0x327 | 01          | 1 count
  0x328 | 70 00 64    | [table 0] Table { ty: TableType { element_type: funcref, table64: false, initial: 100, maximum: None, shared: false }, init: RefNull }
  0x32b | 05 03       | memory section
  0x32d | 01          | 1 count
  0x32e | 00 01       | [memory 0] MemoryType { memory64: false, shared: false, initial: 1, maximum: None, page_size_log2: None }
  0x330 | 0d 07       | tag section
  0x332 | 03          | 3 count
  0x333 | 00 14       | [tag 0] TagType { kind: Exception, func_type_idx: 20 }
  0x335 | 00 15       | [tag 1] TagType { kind: Exception, func_type_idx: 21 }
  0x337 | 00 16       | [tag 2] TagType { kind: Exception, func_type_idx: 22 }
  0x339 | 06 0d       | global section
  0x33b | 02          | 2 count
  0x33c | 63 09 01    | [global 0] GlobalType { content_type: Ref((ref null (module 9))), mutable: true, shared: false }
  0x33f | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x341 | 0b          | end
  0x342 | 7f 01       | [global 1] GlobalType { content_type: I32, mutable: true, shared: false }
  0x344 | 41 80 08    | i32_const value:1024
  0x347 | 0b          | end
  0x348 | 07 fa 02    | export section
  0x34b | 14          | 20 count
  0x34c | 05 62 79 74 | export Export { name: "bytes", kind: Memory, index: 0 }
        | 65 73 02 00
  0x354 | 0d 66 75 6e | export Export { name: "functionTable", kind: Table, index: 0 }
        | 63 74 69 6f
        | 6e 54 61 62
        | 6c 65 01 00
  0x364 | 11 6e 65 77 | export Export { name: "newVirtualMachine", kind: Func, index: 17 }
        | 56 69 72 74
        | 75 61 6c 4d
        | 61 63 68 69
        | 6e 65 00 11
  0x378 | 19 63 72 65 | export Export { name: "createMinimalObjectMemory", kind: Func, index: 47 }
        | 61 74 65 4d
        | 69 6e 69 6d
        | 61 6c 4f 62
        | 6a 65 63 74
        | 4d 65 6d 6f
        | 72 79 00 2f
  0x394 | 12 72 65 73 | export Export { name: "resetMinimalMemory", kind: Func, index: 48 }
        | 65 74 4d 69
        | 6e 69 6d 61
        | 6c 4d 65 6d
        | 6f 72 79 00
        | 30         
  0x3a9 | 09 69 6e 74 | export Export { name: "interpret", kind: Func, index: 50 }
        | 65 72 70 72
        | 65 74 00 32
  0x3b5 | 0b 62 79 74 | export Export { name: "byteArrayAt", kind: Func, index: 29 }
        | 65 41 72 72
        | 61 79 41 74
        | 00 1d      
  0x3c3 | 0f 62 79 74 | export Export { name: "byteArrayLength", kind: Func, index: 30 }
        | 65 41 72 72
        | 61 79 4c 65
        | 6e 67 74 68
        | 00 1e      
  0x3d5 | 15 63 6f 70 | export Export { name: "copyByteArrayToMemory", kind: Func, index: 31 }
        | 79 42 79 74
        | 65 41 72 72
        | 61 79 54 6f
        | 4d 65 6d 6f
        | 72 79 00 1f
  0x3ed | 0f 6d 65 74 | export Export { name: "methodBytecodes", kind: Func, index: 18 }
        | 68 6f 64 42
        | 79 74 65 63
        | 6f 64 65 73
        | 00 12      
  0x3ff | 16 73 65 74 | export Export { name: "setMethodFunctionIndex", kind: Func, index: 20 }
        | 4d 65 74 68
        | 6f 64 46 75
        | 6e 63 74 69
        | 6f 6e 49 6e
        | 64 65 78 00
        | 14         
  0x418 | 16 67 65 74 | export Export { name: "getMethodFunctionIndex", kind: Func, index: 19 }
        | 4d 65 74 68
        | 6f 64 46 75
        | 6e 63 74 69
        | 6f 6e 49 6e
        | 64 65 78 00
        | 13         
  0x431 | 0d 6f 6e 43 | export Export { name: "onContextPush", kind: Func, index: 21 }
        | 6f 6e 74 65
        | 78 74 50 75
        | 73 68 00 15
  0x441 | 0e 70 6f 70 | export Export { name: "popFromContext", kind: Func, index: 22 }
        | 46 72 6f 6d
        | 43 6f 6e 74
        | 65 78 74 00
        | 16         
  0x452 | 13 76 61 6c | export Export { name: "valueOfSmallInteger", kind: Func, index: 43 }
        | 75 65 4f 66
        | 53 6d 61 6c
        | 6c 49 6e 74
        | 65 67 65 72
        | 00 2b      
  0x468 | 14 73 6d 61 | export Export { name: "smallIntegerForValue", kind: Func, index: 41 }
        | 6c 6c 49 6e
        | 74 65 67 65
        | 72 46 6f 72
        | 56 61 6c 75
        | 65 00 29   
  0x47f | 0d 63 6c 61 | export Export { name: "classOfObject", kind: Func, index: 36 }
        | 73 73 4f 66
        | 4f 62 6a 65
        | 63 74 00 24
  0x48f | 0f 63 6f 6e | export Export { name: "contextReceiver", kind: Func, index: 23 }
        | 74 65 78 74
        | 52 65 63 65
        | 69 76 65 72
        | 00 17      
  0x4a1 | 0e 6d 65 74 | export Export { name: "methodLiterals", kind: Func, index: 24 }
        | 68 6f 64 4c
        | 69 74 65 72
        | 61 6c 73 00
        | 18         
  0x4b2 | 10 63 6f 6e | export Export { name: "contextLiteralAt", kind: Func, index: 25 }
        | 74 65 78 74
        | 4c 69 74 65
        | 72 61 6c 41
        | 74 00 19   
  0x4c5 | 09 05       | element section
  0x4c7 | 01          | 1 count
  0x4c8 | 03 00 01    | element declared 1 items [indices]
  0x4cb | 10          | item 16
  0x4cc | 0a e2 20    | code section
  0x4cf | 30          | 48 count
============== func 3 ====================
  0x4d0 | 6f          | size of function
  0x4d1 | 02          | 2 local blocks
  0x4d2 | 02 64 01    | 2 locals of type Ref((ref (module 1)))
  0x4d5 | 02 7f       | 2 locals of type I32
  0x4d7 | 20 00       | local_get local_index:0
  0x4d9 | 20 01       | local_get local_index:1
  0x4db | d3          | ref_eq
  0x4dc | 04 7f       | if blockty:Type(I32)
  0x4de | 41 01       | i32_const value:1
  0x4e0 | 0f          | return
  0x4e1 | 05          | else
  0x4e2 | 20 00       | local_get local_index:0
  0x4e4 | fb 02 06 03 | struct_get struct_type_index:6 field_index:3
  0x4e8 | 21 02       | local_set local_index:2
  0x4ea | 20 01       | local_get local_index:1
  0x4ec | fb 02 06 03 | struct_get struct_type_index:6 field_index:3
  0x4f0 | 21 03       | local_set local_index:3
  0x4f2 | 20 02       | local_get local_index:2
  0x4f4 | 20 03       | local_get local_index:3
  0x4f6 | d3          | ref_eq
  0x4f7 | 04 7f       | if blockty:Type(I32)
  0x4f9 | 41 01       | i32_const value:1
  0x4fb | 0f          | return
  0x4fc | 05          | else
  0x4fd | 20 02       | local_get local_index:2
  0x4ff | fb 0f       | array_len
  0x501 | 22 04       | local_tee local_index:4
  0x503 | 20 03       | local_get local_index:3
  0x505 | fb 0f       | array_len
  0x507 | 47          | i32_ne
  0x508 | 04 7f       | if blockty:Type(I32)
  0x50a | 41 00       | i32_const value:0
  0x50c | 0f          | return
  0x50d | 05          | else
  0x50e | 03 7f       | loop blockty:Type(I32)
  0x510 | 20 05       | local_get local_index:5
  0x512 | 20 04       | local_get local_index:4
  0x514 | 46          | i32_eq
  0x515 | 04 7f       | if blockty:Type(I32)
  0x517 | 41 01       | i32_const value:1
  0x519 | 0f          | return
  0x51a | 05          | else
  0x51b | 20 02       | local_get local_index:2
  0x51d | 20 05       | local_get local_index:5
  0x51f | fb 0d 01    | array_get_u array_type_index:1
  0x522 | 20 03       | local_get local_index:3
  0x524 | 20 05       | local_get local_index:5
  0x526 | fb 0d 01    | array_get_u array_type_index:1
  0x529 | 47          | i32_ne
  0x52a | 04 7f       | if blockty:Type(I32)
  0x52c | 41 00       | i32_const value:0
  0x52e | 0f          | return
  0x52f | 05          | else
  0x530 | 20 05       | local_get local_index:5
  0x532 | 41 01       | i32_const value:1
  0x534 | 6a          | i32_add
  0x535 | 21 05       | local_set local_index:5
  0x537 | 0c 02       | br relative_depth:2
  0x539 | 0b          | end
  0x53a | 0b          | end
  0x53b | 0b          | end
  0x53c | 0b          | end
  0x53d | 0b          | end
  0x53e | 0b          | end
  0x53f | 0b          | end
============== func 4 ====================
  0x540 | 22          | size of function
  0x541 | 00          | 0 local blocks
  0x542 | 20 00       | local_get local_index:0
  0x544 | 20 01       | local_get local_index:1
  0x546 | d3          | ref_eq
  0x547 | 04 7f       | if blockty:Type(I32)
  0x549 | 41 01       | i32_const value:1
  0x54b | 0f          | return
  0x54c | 05          | else
  0x54d | 20 00       | local_get local_index:0
  0x54f | fb 02 09 03 | struct_get struct_type_index:9 field_index:3
  0x553 | fb 16 06    | ref_cast_non_null hty:Concrete(Module(6))
  0x556 | 20 01       | local_get local_index:1
  0x558 | fb 02 09 03 | struct_get struct_type_index:9 field_index:3
  0x55c | fb 16 06    | ref_cast_non_null hty:Concrete(Module(6))
  0x55f | 10 03       | call function_index:3
  0x561 | 0b          | end
  0x562 | 0b          | end
============== func 5 ====================
  0x563 | 16          | size of function
  0x564 | 00          | 0 local blocks
  0x565 | 20 00       | local_get local_index:0
  0x567 | fb 02 12 0b | struct_get struct_type_index:18 field_index:11
  0x56b | fb 16 6d    | ref_cast_non_null hty:Abstract { shared: false, ty: Eq }
  0x56e | 20 00       | local_get local_index:0
  0x570 | 10 20       | call function_index:32
  0x572 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x574 | 20 01       | local_get local_index:1
  0x576 | fb 00 05    | struct_new struct_type_index:5
  0x579 | 0b          | end
============== func 6 ====================
  0x57a | 16          | size of function
  0x57b | 00          | 0 local blocks
  0x57c | 20 00       | local_get local_index:0
  0x57e | fb 02 12 0c | struct_get struct_type_index:18 field_index:12
  0x582 | fb 16 6d    | ref_cast_non_null hty:Abstract { shared: false, ty: Eq }
  0x585 | 20 00       | local_get local_index:0
  0x587 | 10 20       | call function_index:32
  0x589 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x58b | 20 01       | local_get local_index:1
  0x58d | fb 00 06    | struct_new struct_type_index:6
  0x590 | 0b          | end
============== func 7 ====================
  0x591 | 16          | size of function
  0x592 | 00          | 0 local blocks
  0x593 | 20 00       | local_get local_index:0
  0x595 | fb 02 12 0d | struct_get struct_type_index:18 field_index:13
  0x599 | fb 16 6d    | ref_cast_non_null hty:Abstract { shared: false, ty: Eq }
  0x59c | 20 00       | local_get local_index:0
  0x59e | 10 20       | call function_index:32
  0x5a0 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x5a2 | 20 01       | local_get local_index:1
  0x5a4 | fb 00 07    | struct_new struct_type_index:7
  0x5a7 | 0b          | end
============== func 8 ====================
  0x5a8 | 2c          | size of function
  0x5a9 | 00          | 0 local blocks
  0x5aa | 20 00       | local_get local_index:0
  0x5ac | fb 02 12 08 | struct_get struct_type_index:18 field_index:8
  0x5b0 | fb 16 6d    | ref_cast_non_null hty:Abstract { shared: false, ty: Eq }
  0x5b3 | 20 00       | local_get local_index:0
  0x5b5 | 10 20       | call function_index:32
  0x5b7 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x5b9 | 20 00       | local_get local_index:0
  0x5bb | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x5bd | 41 0a       | i32_const value:10
  0x5bf | fb 06 00    | array_new array_type_index:0
  0x5c2 | 10 05       | call function_index:5
  0x5c4 | 20 00       | local_get local_index:0
  0x5c6 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x5c8 | 41 0a       | i32_const value:10
  0x5ca | fb 06 00    | array_new array_type_index:0
  0x5cd | 10 05       | call function_index:5
  0x5cf | 41 00       | i32_const value:0
  0x5d1 | fb 00 0a    | struct_new struct_type_index:10
  0x5d4 | 0b          | end
============== func 9 ====================
  0x5d5 | a5 02       | size of function
  0x5d7 | 06          | 6 local blocks
  0x5d8 | 02 64 05    | 2 locals of type Ref((ref (module 5)))
  0x5db | 02 7f       | 2 locals of type I32
  0x5dd | 02 64 05    | 2 locals of type Ref((ref (module 5)))
  0x5e0 | 02 64 00    | 2 locals of type Ref((ref (module 0)))
  0x5e3 | 01 7f       | 1 locals of type I32
  0x5e5 | 01 6d       | 1 locals of type Ref(eqref)
  0x5e7 | 20 01       | local_get local_index:1
  0x5e9 | fb 02 0a 03 | struct_get struct_type_index:10 field_index:3
  0x5ed | 21 04       | local_set local_index:4
  0x5ef | 20 01       | local_get local_index:1
  0x5f1 | fb 02 0a 04 | struct_get struct_type_index:10 field_index:4
  0x5f5 | 21 05       | local_set local_index:5
  0x5f7 | 20 01       | local_get local_index:1
  0x5f9 | fb 02 0a 05 | struct_get struct_type_index:10 field_index:5
  0x5fd | 21 06       | local_set local_index:6
  0x5ff | 20 04       | local_get local_index:4
  0x601 | fb 02 05 03 | struct_get struct_type_index:5 field_index:3
  0x605 | fb 0f       | array_len
  0x607 | 21 07       | local_set local_index:7
  0x609 | 20 06       | local_get local_index:6
  0x60b | 20 07       | local_get local_index:7
  0x60d | 4f          | i32_ge_u
  0x60e | 04 40       | if blockty:Empty
  0x610 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x612 | 20 07       | local_get local_index:7
  0x614 | 41 0a       | i32_const value:10
  0x616 | 6a          | i32_add
  0x617 | fb 06 00    | array_new array_type_index:0
  0x61a | 21 0a       | local_set local_index:10
  0x61c | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x61e | 20 07       | local_get local_index:7
  0x620 | 41 0a       | i32_const value:10
  0x622 | 6a          | i32_add
  0x623 | fb 06 00    | array_new array_type_index:0
  0x626 | 21 0b       | local_set local_index:11
  0x628 | 41 00       | i32_const value:0
  0x62a | 21 0c       | local_set local_index:12
  0x62c | 02 40       | block blockty:Empty
  0x62e | 03 40       | loop blockty:Empty
  0x630 | 20 0c       | local_get local_index:12
  0x632 | 20 06       | local_get local_index:6
  0x634 | 4f          | i32_ge_u
  0x635 | 0d 01       | br_if relative_depth:1
  0x637 | 20 0a       | local_get local_index:10
  0x639 | 20 0c       | local_get local_index:12
  0x63b | 20 04       | local_get local_index:4
  0x63d | fb 02 05 03 | struct_get struct_type_index:5 field_index:3
  0x641 | 20 0c       | local_get local_index:12
  0x643 | fb 0b 00    | array_get array_type_index:0
  0x646 | fb 0e 00    | array_set array_type_index:0
  0x649 | 20 0b       | local_get local_index:11
  0x64b | 20 0c       | local_get local_index:12
  0x64d | 20 05       | local_get local_index:5
  0x64f | fb 02 05 03 | struct_get struct_type_index:5 field_index:3
  0x653 | 20 0c       | local_get local_index:12
  0x655 | fb 0b 00    | array_get array_type_index:0
  0x658 | fb 0e 00    | array_set array_type_index:0
  0x65b | 20 0c       | local_get local_index:12
  0x65d | 41 01       | i32_const value:1
  0x65f | 6a          | i32_add
  0x660 | 21 0c       | local_set local_index:12
  0x662 | 0c 00       | br relative_depth:0
  0x664 | 0b          | end
  0x665 | 0b          | end
  0x666 | 20 00       | local_get local_index:0
  0x668 | 20 0a       | local_get local_index:10
  0x66a | 10 05       | call function_index:5
  0x66c | 21 08       | local_set local_index:8
  0x66e | 20 00       | local_get local_index:0
  0x670 | 20 0b       | local_get local_index:11
  0x672 | 10 05       | call function_index:5
  0x674 | 21 09       | local_set local_index:9
  0x676 | 20 01       | local_get local_index:1
  0x678 | 20 08       | local_get local_index:8
  0x67a | fb 05 0a 03 | struct_set struct_type_index:10 field_index:3
  0x67e | 20 01       | local_get local_index:1
  0x680 | 20 09       | local_get local_index:9
  0x682 | fb 05 0a 04 | struct_set struct_type_index:10 field_index:4
  0x686 | 20 08       | local_get local_index:8
  0x688 | 21 04       | local_set local_index:4
  0x68a | 20 09       | local_get local_index:9
  0x68c | 21 05       | local_set local_index:5
  0x68e | 0b          | end
  0x68f | 20 02       | local_get local_index:2
  0x691 | fb 14 09    | ref_test_non_null hty:Concrete(Module(9))
  0x694 | 04 40       | if blockty:Empty
  0x696 | 41 00       | i32_const value:0
  0x698 | 21 0c       | local_set local_index:12
  0x69a | 02 40       | block blockty:Empty
  0x69c | 03 40       | loop blockty:Empty
  0x69e | 20 0c       | local_get local_index:12
  0x6a0 | 20 06       | local_get local_index:6
  0x6a2 | 4f          | i32_ge_u
  0x6a3 | 0d 01       | br_if relative_depth:1
  0x6a5 | 20 04       | local_get local_index:4
  0x6a7 | fb 02 05 03 | struct_get struct_type_index:5 field_index:3
  0x6ab | 20 0c       | local_get local_index:12
  0x6ad | fb 0b 00    | array_get array_type_index:0
  0x6b0 | 21 0d       | local_set local_index:13
  0x6b2 | 20 0d       | local_get local_index:13
  0x6b4 | fb 14 09    | ref_test_non_null hty:Concrete(Module(9))
  0x6b7 | 04 40       | if blockty:Empty
  0x6b9 | 20 02       | local_get local_index:2
  0x6bb | fb 16 09    | ref_cast_non_null hty:Concrete(Module(9))
  0x6be | 20 0d       | local_get local_index:13
  0x6c0 | fb 16 09    | ref_cast_non_null hty:Concrete(Module(9))
  0x6c3 | 10 04       | call function_index:4
  0x6c5 | 04 40       | if blockty:Empty
  0x6c7 | 0f          | return
  0x6c8 | 0b          | end
  0x6c9 | 0b          | end
  0x6ca | 20 0c       | local_get local_index:12
  0x6cc | 41 01       | i32_const value:1
  0x6ce | 6a          | i32_add
  0x6cf | 21 0c       | local_set local_index:12
  0x6d1 | 0c 00       | br relative_depth:0
  0x6d3 | 0b          | end
  0x6d4 | 0b          | end
  0x6d5 | 0b          | end
  0x6d6 | 20 04       | local_get local_index:4
  0x6d8 | fb 02 05 03 | struct_get struct_type_index:5 field_index:3
  0x6dc | 20 06       | local_get local_index:6
  0x6de | 20 02       | local_get local_index:2
  0x6e0 | fb 0e 00    | array_set array_type_index:0
  0x6e3 | 20 05       | local_get local_index:5
  0x6e5 | fb 02 05 03 | struct_get struct_type_index:5 field_index:3
  0x6e9 | 20 06       | local_get local_index:6
  0x6eb | 20 03       | local_get local_index:3
  0x6ed | fb 0e 00    | array_set array_type_index:0
  0x6f0 | 20 01       | local_get local_index:1
  0x6f2 | 20 06       | local_get local_index:6
  0x6f4 | 41 01       | i32_const value:1
  0x6f6 | 6a          | i32_add
  0x6f7 | fb 05 0a 05 | struct_set struct_type_index:10 field_index:5
  0x6fb | 0b          | end
============== func 10 ====================
  0x6fc | 59          | size of function
  0x6fd | 03          | 3 local blocks
  0x6fe | 02 6d       | 2 locals of type Ref(eqref)
  0x700 | 02 7f       | 2 locals of type I32
  0x702 | 01 64 12    | 1 locals of type Ref((ref (module 18)))
  0x705 | 20 01       | local_get local_index:1
  0x707 | fb 0f       | array_len
  0x709 | 21 04       | local_set local_index:4
  0x70b | 41 00       | i32_const value:0
  0x70d | 21 05       | local_set local_index:5
  0x70f | 03 40       | loop blockty:Empty
  0x711 | 20 05       | local_get local_index:5
  0x713 | 20 04       | local_get local_index:4
  0x715 | 46          | i32_eq
  0x716 | 04 40       | if blockty:Empty
  0x718 | 0f          | return
  0x719 | 0b          | end
  0x71a | 20 01       | local_get local_index:1
  0x71c | 20 05       | local_get local_index:5
  0x71e | fb 0b 00    | array_get array_type_index:0
  0x721 | 22 03       | local_tee local_index:3
  0x723 | d1          | ref_is_null
  0x724 | 45          | i32_eqz
  0x725 | 04 40       | if blockty:Empty
  0x727 | 20 00       | local_get local_index:0
  0x729 | fb 02 12 07 | struct_get struct_type_index:18 field_index:7
  0x72d | 21 02       | local_set local_index:2
  0x72f | 02 64 12    | block blockty:Type(Ref((ref (module 18))))
  0x732 | 20 00       | local_get local_index:0
  0x734 | 21 06       | local_set local_index:6
  0x736 | 20 02       | local_get local_index:2
  0x738 | fb 16 03    | ref_cast_non_null hty:Concrete(Module(3))
  0x73b | 20 03       | local_get local_index:3
  0x73d | fb 05 03 02 | struct_set struct_type_index:3 field_index:2
  0x741 | 20 06       | local_get local_index:6
  0x743 | 0b          | end
  0x744 | 20 03       | local_get local_index:3
  0x746 | fb 05 12 07 | struct_set struct_type_index:18 field_index:7
  0x74a | 20 05       | local_get local_index:5
  0x74c | 41 01       | i32_const value:1
  0x74e | 6a          | i32_add
  0x74f | 21 05       | local_set local_index:5
  0x751 | 0c 01       | br relative_depth:1
  0x753 | 0b          | end
  0x754 | 0b          | end
  0x755 | 0b          | end
============== func 11 ====================
  0x756 | 0d          | size of function
  0x757 | 00          | 0 local blocks
  0x758 | 20 00       | local_get local_index:0
  0x75a | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x75c | 41 00       | i32_const value:0
  0x75e | fb 06 00    | array_new array_type_index:0
  0x761 | 10 05       | call function_index:5
  0x763 | 0b          | end
============== func 12 ====================
  0x764 | 53          | size of function
  0x765 | 02          | 2 local blocks
  0x766 | 02 64 00    | 2 locals of type Ref((ref (module 0)))
  0x769 | 02 7f       | 2 locals of type I32
  0x76b | 20 00       | local_get local_index:0
  0x76d | fb 02 05 03 | struct_get struct_type_index:5 field_index:3
  0x771 | 21 03       | local_set local_index:3
  0x773 | 41 00       | i32_const value:0
  0x775 | 21 04       | local_set local_index:4
  0x777 | 20 03       | local_get local_index:3
  0x779 | fb 0f       | array_len
  0x77b | 21 05       | local_set local_index:5
  0x77d | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x77f | 20 05       | local_get local_index:5
  0x781 | 41 01       | i32_const value:1
  0x783 | 6a          | i32_add
  0x784 | fb 06 00    | array_new array_type_index:0
  0x787 | 21 02       | local_set local_index:2
  0x789 | 03 40       | loop blockty:Empty
  0x78b | 20 02       | local_get local_index:2
  0x78d | 20 04       | local_get local_index:4
  0x78f | 20 03       | local_get local_index:3
  0x791 | 20 04       | local_get local_index:4
  0x793 | fb 0b 00    | array_get array_type_index:0
  0x796 | fb 0e 00    | array_set array_type_index:0
  0x799 | 20 04       | local_get local_index:4
  0x79b | 41 01       | i32_const value:1
  0x79d | 6a          | i32_add
  0x79e | 22 04       | local_tee local_index:4
  0x7a0 | 20 05       | local_get local_index:5
  0x7a2 | 46          | i32_eq
  0x7a3 | 0d 00       | br_if relative_depth:0
  0x7a5 | 0b          | end
  0x7a6 | 20 02       | local_get local_index:2
  0x7a8 | 20 04       | local_get local_index:4
  0x7aa | 20 01       | local_get local_index:1
  0x7ac | fb 0e 00    | array_set array_type_index:0
  0x7af | 20 00       | local_get local_index:0
  0x7b1 | 20 02       | local_get local_index:2
  0x7b3 | fb 05 05 03 | struct_set struct_type_index:5 field_index:3
  0x7b7 | 0b          | end
============== func 13 ====================
  0x7b8 | 85 02       | size of function
  0x7ba | 02          | 2 local blocks
  0x7bb | 01 64 0d    | 1 locals of type Ref((ref (module 13)))
  0x7be | 01 64 0e    | 1 locals of type Ref((ref (module 14)))
  0x7c1 | 20 00       | local_get local_index:0
  0x7c3 | fb 02 12 08 | struct_get struct_type_index:18 field_index:8
  0x7c7 | fb 16 6d    | ref_cast_non_null hty:Abstract { shared: false, ty: Eq }
  0x7ca | 20 00       | local_get local_index:0
  0x7cc | 10 20       | call function_index:32
  0x7ce | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x7d0 | 20 01       | local_get local_index:1
  0x7d2 | 20 00       | local_get local_index:0
  0x7d4 | 10 08       | call function_index:8
  0x7d6 | 41 00       | i32_const value:0
  0x7d8 | 20 00       | local_get local_index:0
  0x7da | 10 0b       | call function_index:11
  0x7dc | 20 00       | local_get local_index:0
  0x7de | 41 00       | i32_const value:0
  0x7e0 | 41 10       | i32_const value:16
  0x7e2 | fb 06 01    | array_new array_type_index:1
  0x7e5 | 10 06       | call function_index:6
  0x7e7 | 20 00       | local_get local_index:0
  0x7e9 | 10 0b       | call function_index:11
  0x7eb | 20 02       | local_get local_index:2
  0x7ed | 20 00       | local_get local_index:0
  0x7ef | 10 08       | call function_index:8
  0x7f1 | 20 00       | local_get local_index:0
  0x7f3 | 10 0b       | call function_index:11
  0x7f5 | fb 00 0d    | struct_new struct_type_index:13
  0x7f8 | 21 03       | local_set local_index:3
  0x7fa | 20 01       | local_get local_index:1
  0x7fc | d1          | ref_is_null
  0x7fd | 45          | i32_eqz
  0x7fe | 04 40       | if blockty:Empty
  0x800 | 20 01       | local_get local_index:1
  0x802 | fb 02 0d 08 | struct_get struct_type_index:13 field_index:8
  0x806 | 20 03       | local_get local_index:3
  0x808 | 10 0c       | call function_index:12
  0x80a | 0b          | end
  0x80b | 20 00       | local_get local_index:0
  0x80d | fb 02 12 09 | struct_get struct_type_index:18 field_index:9
  0x811 | fb 16 6d    | ref_cast_non_null hty:Abstract { shared: false, ty: Eq }
  0x814 | 20 00       | local_get local_index:0
  0x816 | 10 20       | call function_index:32
  0x818 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x81a | 20 01       | local_get local_index:1
  0x81c | d1          | ref_is_null
  0x81d | 04 6d       | if blockty:Type(Ref(eqref))
  0x81f | 20 00       | local_get local_index:0
  0x821 | fb 02 12 0a | struct_get struct_type_index:18 field_index:10
  0x825 | 05          | else
  0x826 | 20 01       | local_get local_index:1
  0x828 | fb 02 0d 00 | struct_get struct_type_index:13 field_index:0
  0x82c | 0b          | end
  0x82d | 20 00       | local_get local_index:0
  0x82f | 10 08       | call function_index:8
  0x831 | 41 98 01    | i32_const value:152
  0x834 | 20 00       | local_get local_index:0
  0x836 | 10 0b       | call function_index:11
  0x838 | 20 00       | local_get local_index:0
  0x83a | 41 00       | i32_const value:0
  0x83c | 41 10       | i32_const value:16
  0x83e | fb 06 01    | array_new array_type_index:1
  0x841 | 10 06       | call function_index:6
  0x843 | 20 03       | local_get local_index:3
  0x845 | fb 00 0e    | struct_new struct_type_index:14
  0x848 | 21 04       | local_set local_index:4
  0x84a | 20 03       | local_get local_index:3
  0x84c | 20 04       | local_get local_index:4
  0x84e | fb 05 0d 00 | struct_set struct_type_index:13 field_index:0
  0x852 | 20 00       | local_get local_index:0
  0x854 | 20 04       | local_get local_index:4
  0x856 | fb 02 0e 00 | struct_get struct_type_index:14 field_index:0
  0x85a | 20 04       | local_get local_index:4
  0x85c | fb 02 0e 03 | struct_get struct_type_index:14 field_index:3
  0x860 | 20 04       | local_get local_index:4
  0x862 | fb 02 0e 04 | struct_get struct_type_index:14 field_index:4
  0x866 | 20 04       | local_get local_index:4
  0x868 | fb 02 0e 06 | struct_get struct_type_index:14 field_index:6
  0x86c | 20 04       | local_get local_index:4
  0x86e | fb 02 0e 07 | struct_get struct_type_index:14 field_index:7
  0x872 | 20 04       | local_get local_index:4
  0x874 | fb 02 0e 08 | struct_get struct_type_index:14 field_index:8
  0x878 | fb 08 00 06 | array_new_fixed array_type_index:0 array_size:6
  0x87c | 10 0a       | call function_index:10
  0x87e | 20 00       | local_get local_index:0
  0x880 | 20 03       | local_get local_index:3
  0x882 | fb 02 0d 00 | struct_get struct_type_index:13 field_index:0
  0x886 | 20 03       | local_get local_index:3
  0x888 | fb 02 0d 03 | struct_get struct_type_index:13 field_index:3
  0x88c | 20 03       | local_get local_index:3
  0x88e | fb 02 0d 04 | struct_get struct_type_index:13 field_index:4
  0x892 | 20 03       | local_get local_index:3
  0x894 | fb 02 0d 06 | struct_get struct_type_index:13 field_index:6
  0x898 | 20 03       | local_get local_index:3
  0x89a | fb 02 0d 07 | struct_get struct_type_index:13 field_index:7
  0x89e | 20 03       | local_get local_index:3
  0x8a0 | fb 02 0d 08 | struct_get struct_type_index:13 field_index:8
  0x8a4 | 20 03       | local_get local_index:3
  0x8a6 | fb 02 0d 09 | struct_get struct_type_index:13 field_index:9
  0x8aa | 20 03       | local_get local_index:3
  0x8ac | fb 02 0d 0a | struct_get struct_type_index:13 field_index:10
  0x8b0 | 20 03       | local_get local_index:3
  0x8b2 | fb 02 0d 0b | struct_get struct_type_index:13 field_index:11
  0x8b6 | fb 08 00 09 | array_new_fixed array_type_index:0 array_size:9
  0x8ba | 10 0a       | call function_index:10
  0x8bc | 20 03       | local_get local_index:3
  0x8be | 0b          | end
============== func 14 ====================
  0x8bf | 16          | size of function
  0x8c0 | 00          | 0 local blocks
  0x8c1 | 20 00       | local_get local_index:0
  0x8c3 | fb 02 12 10 | struct_get struct_type_index:18 field_index:16
  0x8c7 | fb 16 6d    | ref_cast_non_null hty:Abstract { shared: false, ty: Eq }
  0x8ca | 20 00       | local_get local_index:0
  0x8cc | 10 20       | call function_index:32
  0x8ce | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x8d0 | 20 01       | local_get local_index:1
  0x8d2 | fb 00 09    | struct_new struct_type_index:9
  0x8d5 | 0b          | end
============== func 15 ====================
  0x8d6 | 31          | size of function
  0x8d7 | 01          | 1 local blocks
  0x8d8 | 02 7f       | 2 locals of type I32
  0x8da | 41 00       | i32_const value:0
  0x8dc | 21 03       | local_set local_index:3
  0x8de | 20 01       | local_get local_index:1
  0x8e0 | fb 0f       | array_len
  0x8e2 | 21 04       | local_set local_index:4
  0x8e4 | 03 40       | loop blockty:Empty
  0x8e6 | 20 03       | local_get local_index:3
  0x8e8 | 20 04       | local_get local_index:4
  0x8ea | 46          | i32_eq
  0x8eb | 04 40       | if blockty:Empty
  0x8ed | 0f          | return
  0x8ee | 05          | else
  0x8ef | 20 00       | local_get local_index:0
  0x8f1 | 20 01       | local_get local_index:1
  0x8f3 | 20 03       | local_get local_index:3
  0x8f5 | fb 0b 00    | array_get array_type_index:0
  0x8f8 | 20 02       | local_get local_index:2
  0x8fa | 14 13       | call_ref type_index:19
  0x8fc | 0b          | end
  0x8fd | 20 03       | local_get local_index:3
  0x8ff | 41 01       | i32_const value:1
  0x901 | 6a          | i32_add
  0x902 | 21 03       | local_set local_index:3
  0x904 | 0c 00       | br relative_depth:0
  0x906 | 0b          | end
  0x907 | 0b          | end
============== func 16 ====================
  0x908 | 5a          | size of function
  0x909 | 00          | 0 local blocks
  0x90a | 20 01       | local_get local_index:1
  0x90c | fb 16 0d    | ref_cast_non_null hty:Concrete(Module(13))
  0x90f | fb 02 0d 08 | struct_get struct_type_index:13 field_index:8
  0x913 | 20 00       | local_get local_index:0
  0x915 | fb 02 12 0b | struct_get struct_type_index:18 field_index:11
  0x919 | fb 16 6d    | ref_cast_non_null hty:Abstract { shared: false, ty: Eq }
  0x91c | fb 05 05 00 | struct_set struct_type_index:5 field_index:0
  0x920 | 20 01       | local_get local_index:1
  0x922 | fb 16 0d    | ref_cast_non_null hty:Concrete(Module(13))
  0x925 | fb 02 0d 0b | struct_get struct_type_index:13 field_index:11
  0x929 | 20 00       | local_get local_index:0
  0x92b | fb 02 12 0b | struct_get struct_type_index:18 field_index:11
  0x92f | fb 16 6d    | ref_cast_non_null hty:Abstract { shared: false, ty: Eq }
  0x932 | fb 05 05 00 | struct_set struct_type_index:5 field_index:0
  0x936 | 20 01       | local_get local_index:1
  0x938 | fb 16 0d    | ref_cast_non_null hty:Concrete(Module(13))
  0x93b | fb 02 0d 00 | struct_get struct_type_index:13 field_index:0
  0x93f | fb 16 0e    | ref_cast_non_null hty:Concrete(Module(14))
  0x942 | 20 00       | local_get local_index:0
  0x944 | fb 02 12 09 | struct_get struct_type_index:18 field_index:9
  0x948 | fb 16 6d    | ref_cast_non_null hty:Abstract { shared: false, ty: Eq }
  0x94b | fb 05 0e 00 | struct_set struct_type_index:14 field_index:0
  0x94f | 20 00       | local_get local_index:0
  0x951 | 20 01       | local_get local_index:1
  0x953 | fb 16 0d    | ref_cast_non_null hty:Concrete(Module(13))
  0x956 | fb 02 0d 08 | struct_get struct_type_index:13 field_index:8
  0x95a | fb 02 05 03 | struct_get struct_type_index:5 field_index:3
  0x95e | d2 10       | ref_func function_index:16
  0x960 | 10 0f       | call function_index:15
  0x962 | 0b          | end
============== func 17 ====================
  0x963 | ce 06       | size of function
  0x965 | 02          | 2 local blocks
  0x966 | 01 64 12    | 1 locals of type Ref((ref (module 18)))
  0x969 | 03 64 0d    | 3 locals of type Ref((ref (module 13)))
  0x96c | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x96e | 41 01       | i32_const value:1
  0x970 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x972 | 41 80 02    | i32_const value:256
  0x975 | fb 06 00    | array_new array_type_index:0
  0x978 | 41 00       | i32_const value:0
  0x97a | 41 e8 07    | i32_const value:1000
  0x97d | 41 01       | i32_const value:1
  0x97f | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x981 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x983 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x985 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x987 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x989 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x98b | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x98d | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x98f | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x991 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x993 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x995 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0x997 | fb 00 12    | struct_new struct_type_index:18
  0x99a | 21 00       | local_set local_index:0
  0x99c | 20 00       | local_get local_index:0
  0x99e | 20 00       | local_get local_index:0
  0x9a0 | d0 0d       | ref_null hty:Concrete(Module(13))
  0x9a2 | 20 00       | local_get local_index:0
  0x9a4 | 41 cf 00    | i32_const value:79
  0x9a7 | 41 e2 00    | i32_const value:98
  0x9aa | 41 ea 00    | i32_const value:106
  0x9ad | 41 e5 00    | i32_const value:101
  0x9b0 | 41 e3 00    | i32_const value:99
  0x9b3 | 41 f4 00    | i32_const value:116
  0x9b6 | fb 08 01 06 | array_new_fixed array_type_index:1 array_size:6
  0x9ba | 10 0e       | call function_index:14
  0x9bc | 10 0d       | call function_index:13
  0x9be | fb 05 12 08 | struct_set struct_type_index:18 field_index:8
  0x9c2 | 20 00       | local_get local_index:0
  0x9c4 | 20 00       | local_get local_index:0
  0x9c6 | 20 00       | local_get local_index:0
  0x9c8 | fb 02 12 08 | struct_get struct_type_index:18 field_index:8
  0x9cc | 20 00       | local_get local_index:0
  0x9ce | 41 d5 00    | i32_const value:85
  0x9d1 | 41 ee 00    | i32_const value:110
  0x9d4 | 41 e4 00    | i32_const value:100
  0x9d7 | 41 e5 00    | i32_const value:101
  0x9da | 41 e6 00    | i32_const value:102
  0x9dd | 41 e9 00    | i32_const value:105
  0x9e0 | 41 ee 00    | i32_const value:110
  0x9e3 | 41 e5 00    | i32_const value:101
  0x9e6 | 41 e4 00    | i32_const value:100
  0x9e9 | 41 cf 00    | i32_const value:79
  0x9ec | 41 e2 00    | i32_const value:98
  0x9ef | 41 ea 00    | i32_const value:106
  0x9f2 | 41 e5 00    | i32_const value:101
  0x9f5 | 41 e3 00    | i32_const value:99
  0x9f8 | 41 f4 00    | i32_const value:116
  0x9fb | fb 08 01 0f | array_new_fixed array_type_index:1 array_size:15
  0x9ff | 10 0e       | call function_index:14
  0xa01 | 10 0d       | call function_index:13
  0xa03 | 20 00       | local_get local_index:0
  0xa05 | 10 20       | call function_index:32
  0xa07 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0xa09 | fb 00 04    | struct_new struct_type_index:4
  0xa0c | fb 05 12 06 | struct_set struct_type_index:18 field_index:6
  0xa10 | 20 00       | local_get local_index:0
  0xa12 | 20 00       | local_get local_index:0
  0xa14 | fb 02 12 06 | struct_get struct_type_index:18 field_index:6
  0xa18 | fb 05 12 07 | struct_set struct_type_index:18 field_index:7
  0xa1c | 20 00       | local_get local_index:0
  0xa1e | 20 00       | local_get local_index:0
  0xa20 | fb 02 12 08 | struct_get struct_type_index:18 field_index:8
  0xa24 | 20 00       | local_get local_index:0
  0xa26 | 41 c2 00    | i32_const value:66
  0xa29 | 41 e5 00    | i32_const value:101
  0xa2c | 41 e8 00    | i32_const value:104
  0xa2f | 41 e1 00    | i32_const value:97
  0xa32 | 41 f6 00    | i32_const value:118
  0xa35 | 41 e9 00    | i32_const value:105
  0xa38 | 41 ef 00    | i32_const value:111
  0xa3b | 41 f2 00    | i32_const value:114
  0xa3e | fb 08 01 08 | array_new_fixed array_type_index:1 array_size:8
  0xa42 | 10 0e       | call function_index:14
  0xa44 | 10 0d       | call function_index:13
  0xa46 | 21 02       | local_set local_index:2
  0xa48 | 20 00       | local_get local_index:0
  0xa4a | 20 02       | local_get local_index:2
  0xa4c | 20 00       | local_get local_index:0
  0xa4e | 41 c3 00    | i32_const value:67
  0xa51 | 41 ec 00    | i32_const value:108
  0xa54 | 41 e1 00    | i32_const value:97
  0xa57 | 41 f3 00    | i32_const value:115
  0xa5a | 41 f3 00    | i32_const value:115
  0xa5d | 41 c4 00    | i32_const value:68
  0xa60 | 41 e5 00    | i32_const value:101
  0xa63 | 41 f3 00    | i32_const value:115
  0xa66 | 41 e3 00    | i32_const value:99
  0xa69 | 41 f2 00    | i32_const value:114
  0xa6c | 41 e9 00    | i32_const value:105
  0xa6f | 41 f0 00    | i32_const value:112
  0xa72 | 41 f4 00    | i32_const value:116
  0xa75 | 41 e9 00    | i32_const value:105
  0xa78 | 41 ef 00    | i32_const value:111
  0xa7b | 41 ee 00    | i32_const value:110
  0xa7e | fb 08 01 10 | array_new_fixed array_type_index:1 array_size:16
  0xa82 | 10 0e       | call function_index:14
  0xa84 | 10 0d       | call function_index:13
  0xa86 | 21 01       | local_set local_index:1
  0xa88 | 20 00       | local_get local_index:0
  0xa8a | 20 00       | local_get local_index:0
  0xa8c | 20 01       | local_get local_index:1
  0xa8e | 20 00       | local_get local_index:0
  0xa90 | 41 c3 00    | i32_const value:67
  0xa93 | 41 ec 00    | i32_const value:108
  0xa96 | 41 e1 00    | i32_const value:97
  0xa99 | 41 f3 00    | i32_const value:115
  0xa9c | 41 f3 00    | i32_const value:115
  0xa9f | fb 08 01 05 | array_new_fixed array_type_index:1 array_size:5
  0xaa3 | 10 0e       | call function_index:14
  0xaa5 | 10 0d       | call function_index:13
  0xaa7 | fb 05 12 0a | struct_set struct_type_index:18 field_index:10
  0xaab | 20 00       | local_get local_index:0
  0xaad | fb 02 12 08 | struct_get struct_type_index:18 field_index:8
  0xab1 | 20 00       | local_get local_index:0
  0xab3 | fb 02 12 0a | struct_get struct_type_index:18 field_index:10
  0xab7 | fb 16 6d    | ref_cast_non_null hty:Abstract { shared: false, ty: Eq }
  0xaba | fb 05 0d 03 | struct_set struct_type_index:13 field_index:3
  0xabe | 20 00       | local_get local_index:0
  0xac0 | 20 00       | local_get local_index:0
  0xac2 | 20 01       | local_get local_index:1
  0xac4 | 20 00       | local_get local_index:0
  0xac6 | 41 cd 00    | i32_const value:77
  0xac9 | 41 e5 00    | i32_const value:101
  0xacc | 41 f4 00    | i32_const value:116
  0xacf | 41 e1 00    | i32_const value:97
  0xad2 | 41 e3 00    | i32_const value:99
  0xad5 | 41 ec 00    | i32_const value:108
  0xad8 | 41 e1 00    | i32_const value:97
  0xadb | 41 f3 00    | i32_const value:115
  0xade | 41 f3 00    | i32_const value:115
  0xae1 | fb 08 01 09 | array_new_fixed array_type_index:1 array_size:9
  0xae5 | 10 0e       | call function_index:14
  0xae7 | 10 0d       | call function_index:13
  0xae9 | fb 05 12 09 | struct_set struct_type_index:18 field_index:9
  0xaed | 20 00       | local_get local_index:0
  0xaef | 20 00       | local_get local_index:0
  0xaf1 | 20 00       | local_get local_index:0
  0xaf3 | 20 00       | local_get local_index:0
  0xaf5 | fb 02 12 08 | struct_get struct_type_index:18 field_index:8
  0xaf9 | 20 00       | local_get local_index:0
  0xafb | 41 c3 00    | i32_const value:67
  0xafe | 41 ef 00    | i32_const value:111
  0xb01 | 41 ec 00    | i32_const value:108
  0xb04 | 41 ec 00    | i32_const value:108
  0xb07 | 41 e5 00    | i32_const value:101
  0xb0a | 41 e3 00    | i32_const value:99
  0xb0d | 41 f4 00    | i32_const value:116
  0xb10 | 41 e9 00    | i32_const value:105
  0xb13 | 41 ef 00    | i32_const value:111
  0xb16 | 41 ee 00    | i32_const value:110
  0xb19 | fb 08 01 0a | array_new_fixed array_type_index:1 array_size:10
  0xb1d | 10 0e       | call function_index:14
  0xb1f | 10 0d       | call function_index:13
  0xb21 | 20 00       | local_get local_index:0
  0xb23 | 41 d3 00    | i32_const value:83
  0xb26 | 41 e5 00    | i32_const value:101
  0xb29 | 41 f1 00    | i32_const value:113
  0xb2c | 41 f5 00    | i32_const value:117
  0xb2f | 41 e5 00    | i32_const value:101
  0xb32 | 41 ee 00    | i32_const value:110
  0xb35 | 41 e3 00    | i32_const value:99
  0xb38 | 41 e5 00    | i32_const value:101
  0xb3b | 41 e1 00    | i32_const value:97
  0xb3e | 41 e2 00    | i32_const value:98
  0xb41 | 41 ec 00    | i32_const value:108
  0xb44 | 41 e5 00    | i32_const value:101
  0xb47 | 41 c3 00    | i32_const value:67
  0xb4a | 41 ef 00    | i32_const value:111
  0xb4d | 41 ec 00    | i32_const value:108
  0xb50 | 41 ec 00    | i32_const value:108
  0xb53 | 41 e5 00    | i32_const value:101
  0xb56 | 41 e3 00    | i32_const value:99
  0xb59 | 41 f4 00    | i32_const value:116
  0xb5c | 41 e9 00    | i32_const value:105
  0xb5f | 41 ef 00    | i32_const value:111
  0xb62 | 41 ee 00    | i32_const value:110
  0xb65 | fb 08 01 16 | array_new_fixed array_type_index:1 array_size:22
  0xb69 | 10 0e       | call function_index:14
  0xb6b | 10 0d       | call function_index:13
  0xb6d | 20 00       | local_get local_index:0
  0xb6f | 41 c1 00    | i32_const value:65
  0xb72 | 41 f2 00    | i32_const value:114
  0xb75 | 41 f2 00    | i32_const value:114
  0xb78 | 41 e1 00    | i32_const value:97
  0xb7b | 41 f9 00    | i32_const value:121
  0xb7e | 41 e5 00    | i32_const value:101
  0xb81 | 41 e4 00    | i32_const value:100
  0xb84 | 41 c3 00    | i32_const value:67
  0xb87 | 41 ef 00    | i32_const value:111
  0xb8a | 41 ec 00    | i32_const value:108
  0xb8d | 41 ec 00    | i32_const value:108
  0xb90 | 41 e5 00    | i32_const value:101
  0xb93 | 41 e3 00    | i32_const value:99
  0xb96 | 41 f4 00    | i32_const value:116
  0xb99 | 41 e9 00    | i32_const value:105
  0xb9c | 41 ef 00    | i32_const value:111
  0xb9f | 41 ee 00    | i32_const value:110
  0xba2 | fb 08 01 11 | array_new_fixed array_type_index:1 array_size:17
  0xba6 | 10 0e       | call function_index:14
  0xba8 | 10 0d       | call function_index:13
  0xbaa | 21 03       | local_set local_index:3
  0xbac | 20 00       | local_get local_index:0
  0xbae | 20 00       | local_get local_index:0
  0xbb0 | 20 03       | local_get local_index:3
  0xbb2 | 20 00       | local_get local_index:0
  0xbb4 | 41 c1 00    | i32_const value:65
  0xbb7 | 41 f2 00    | i32_const value:114
  0xbba | 41 f2 00    | i32_const value:114
  0xbbd | 41 e1 00    | i32_const value:97
  0xbc0 | 41 f9 00    | i32_const value:121
  0xbc3 | fb 08 01 05 | array_new_fixed array_type_index:1 array_size:5
  0xbc7 | 10 0e       | call function_index:14
  0xbc9 | 10 0d       | call function_index:13
  0xbcb | fb 05 12 0b | struct_set struct_type_index:18 field_index:11
  0xbcf | 20 00       | local_get local_index:0
  0xbd1 | 20 00       | local_get local_index:0
  0xbd3 | 20 03       | local_get local_index:3
  0xbd5 | 20 00       | local_get local_index:0
  0xbd7 | 41 c2 00    | i32_const value:66
  0xbda | 41 f9 00    | i32_const value:121
  0xbdd | 41 f4 00    | i32_const value:116
  0xbe0 | 41 e5 00    | i32_const value:101
  0xbe3 | 41 c1 00    | i32_const value:65
  0xbe6 | 41 f2 00    | i32_const value:114
  0xbe9 | 41 f2 00    | i32_const value:114
  0xbec | 41 e1 00    | i32_const value:97
  0xbef | 41 f9 00    | i32_const value:121
  0xbf2 | fb 08 01 09 | array_new_fixed array_type_index:1 array_size:9
  0xbf6 | 10 0e       | call function_index:14
  0xbf8 | 10 0d       | call function_index:13
  0xbfa | fb 05 12 0c | struct_set struct_type_index:18 field_index:12
  0xbfe | 20 00       | local_get local_index:0
  0xc00 | 20 00       | local_get local_index:0
  0xc02 | 20 03       | local_get local_index:3
  0xc04 | 20 00       | local_get local_index:0
  0xc06 | 41 d7 00    | i32_const value:87
  0xc09 | 41 ef 00    | i32_const value:111
  0xc0c | 41 f2 00    | i32_const value:114
  0xc0f | 41 e4 00    | i32_const value:100
  0xc12 | 41 c1 00    | i32_const value:65
  0xc15 | 41 f2 00    | i32_const value:114
  0xc18 | 41 f2 00    | i32_const value:114
  0xc1b | 41 e1 00    | i32_const value:97
  0xc1e | 41 f9 00    | i32_const value:121
  0xc21 | fb 08 01 09 | array_new_fixed array_type_index:1 array_size:9
  0xc25 | 10 0e       | call function_index:14
  0xc27 | 10 0d       | call function_index:13
  0xc29 | fb 05 12 0d | struct_set struct_type_index:18 field_index:13
  0xc2d | 20 00       | local_get local_index:0
  0xc2f | 20 00       | local_get local_index:0
  0xc31 | fb 02 12 08 | struct_get struct_type_index:18 field_index:8
  0xc35 | 20 00       | local_get local_index:0
  0xc37 | fb 02 12 06 | struct_get struct_type_index:18 field_index:6
  0xc3b | fb 16 03    | ref_cast_non_null hty:Concrete(Module(3))
  0xc3e | fb 02 03 00 | struct_get struct_type_index:3 field_index:0
  0xc42 | fb 08 00 02 | array_new_fixed array_type_index:0 array_size:2
  0xc46 | d2 10       | ref_func function_index:16
  0xc48 | 10 0f       | call function_index:15
  0xc4a | 20 00       | local_get local_index:0
  0xc4c | 20 00       | local_get local_index:0
  0xc4e | 20 00       | local_get local_index:0
  0xc50 | fb 02 12 08 | struct_get struct_type_index:18 field_index:8
  0xc54 | 20 00       | local_get local_index:0
  0xc56 | 41 d3 00    | i32_const value:83
  0xc59 | 41 f9 00    | i32_const value:121
  0xc5c | 41 ed 00    | i32_const value:109
  0xc5f | 41 e2 00    | i32_const value:98
  0xc62 | 41 ef 00    | i32_const value:111
  0xc65 | 41 ec 00    | i32_const value:108
  0xc68 | fb 08 01 06 | array_new_fixed array_type_index:1 array_size:6
  0xc6c | 10 0e       | call function_index:14
  0xc6e | 10 0d       | call function_index:13
  0xc70 | fb 05 12 10 | struct_set struct_type_index:18 field_index:16
  0xc74 | 20 00       | local_get local_index:0
  0xc76 | 20 00       | local_get local_index:0
  0xc78 | 20 00       | local_get local_index:0
  0xc7a | fb 02 12 08 | struct_get struct_type_index:18 field_index:8
  0xc7e | 20 00       | local_get local_index:0
  0xc80 | 41 d3 00    | i32_const value:83
  0xc83 | 41 ed 00    | i32_const value:109
  0xc86 | 41 e1 00    | i32_const value:97
  0xc89 | 41 ec 00    | i32_const value:108
  0xc8c | 41 ec 00    | i32_const value:108
  0xc8f | 41 c9 00    | i32_const value:73
  0xc92 | 41 ee 00    | i32_const value:110
  0xc95 | 41 f4 00    | i32_const value:116
  0xc98 | 41 e5 00    | i32_const value:101
  0xc9b | 41 e7 00    | i32_const value:103
  0xc9e | 41 e5 00    | i32_const value:101
  0xca1 | 41 e8 00    | i32_const value:104
  0xca4 | fb 08 01 0c | array_new_fixed array_type_index:1 array_size:12
  0xca8 | 10 0e       | call function_index:14
  0xcaa | 10 0d       | call function_index:13
  0xcac | fb 05 12 11 | struct_set struct_type_index:18 field_index:17
  0xcb0 | 20 00       | local_get local_index:0
  0xcb2 | 0b          | end
============== func 18 ====================
  0xcb3 | 12          | size of function
  0xcb4 | 00          | 0 local blocks
  0xcb5 | 20 00       | local_get local_index:0
  0xcb7 | fb 16 0f    | ref_cast_non_null hty:Concrete(Module(15))
  0xcba | fb 02 0f 03 | struct_get struct_type_index:15 field_index:3
  0xcbe | fb 16 06    | ref_cast_non_null hty:Concrete(Module(6))
  0xcc1 | fb 02 06 03 | struct_get struct_type_index:6 field_index:3
  0xcc5 | 0b          | end
============== func 19 ====================
  0xcc6 | 0b          | size of function
  0xcc7 | 00          | 0 local blocks
  0xcc8 | 20 00       | local_get local_index:0
  0xcca | fb 16 0f    | ref_cast_non_null hty:Concrete(Module(15))
  0xccd | fb 02 0f 07 | struct_get struct_type_index:15 field_index:7
  0xcd1 | 0b          | end
============== func 20 ====================
  0xcd2 | 0d          | size of function
  0xcd3 | 00          | 0 local blocks
  0xcd4 | 20 00       | local_get local_index:0
  0xcd6 | fb 16 0f    | ref_cast_non_null hty:Concrete(Module(15))
  0xcd9 | 20 01       | local_get local_index:1
  0xcdb | fb 05 0f 07 | struct_set struct_type_index:15 field_index:7
  0xcdf | 0b          | end
============== func 21 ====================
  0xce0 | 0b          | size of function
  0xce1 | 00          | 0 local blocks
  0xce2 | 20 00       | local_get local_index:0
  0xce4 | fb 16 10    | ref_cast_non_null hty:Concrete(Module(16))
  0xce7 | 20 01       | local_get local_index:1
  0xce9 | 10 21       | call function_index:33
  0xceb | 0b          | end
============== func 22 ====================
  0xcec | 09          | size of function
  0xced | 00          | 0 local blocks
  0xcee | 20 00       | local_get local_index:0
  0xcf0 | fb 16 10    | ref_cast_non_null hty:Concrete(Module(16))
  0xcf3 | 10 22       | call function_index:34
  0xcf5 | 0b          | end
============== func 23 ====================
  0xcf6 | 0b          | size of function
  0xcf7 | 00          | 0 local blocks
  0xcf8 | 20 00       | local_get local_index:0
  0xcfa | fb 16 10    | ref_cast_non_null hty:Concrete(Module(16))
  0xcfd | fb 02 10 07 | struct_get struct_type_index:16 field_index:7
  0xd01 | 0b          | end
============== func 24 ====================
  0xd02 | 0b          | size of function
  0xd03 | 00          | 0 local blocks
  0xd04 | 20 00       | local_get local_index:0
  0xd06 | fb 16 0f    | ref_cast_non_null hty:Concrete(Module(15))
  0xd09 | fb 02 0f 04 | struct_get struct_type_index:15 field_index:4
  0xd0d | 0b          | end
============== func 25 ====================
  0xd0e | 13          | size of function
  0xd0f | 00          | 0 local blocks
  0xd10 | 20 00       | local_get local_index:0
  0xd12 | fb 16 10    | ref_cast_non_null hty:Concrete(Module(16))
  0xd15 | fb 02 10 06 | struct_get struct_type_index:16 field_index:6
  0xd19 | fb 02 0f 04 | struct_get struct_type_index:15 field_index:4
  0xd1d | 20 01       | local_get local_index:1
  0xd1f | 10 1c       | call function_index:28
  0xd21 | 0b          | end
============== func 26 ====================
  0xd22 | 0b          | size of function
  0xd23 | 00          | 0 local blocks
  0xd24 | 20 00       | local_get local_index:0
  0xd26 | fb 16 10    | ref_cast_non_null hty:Concrete(Module(16))
  0xd29 | fb 02 10 06 | struct_get struct_type_index:16 field_index:6
  0xd2d | 0b          | end
============== func 27 ====================
  0xd2e | 25          | size of function
  0xd2f | 01          | 1 local blocks
  0xd30 | 01 7f       | 1 locals of type I32
  0xd32 | 20 00       | local_get local_index:0
  0xd34 | fb 16 6a    | ref_cast_non_null hty:Abstract { shared: false, ty: Array }
  0xd37 | fb 0f       | array_len
  0xd39 | 21 02       | local_set local_index:2
  0xd3b | 20 01       | local_get local_index:1
  0xd3d | 41 00       | i32_const value:0
  0xd3f | 48          | i32_lt_s
  0xd40 | 04 40       | if blockty:Empty
  0xd42 | 41 00       | i32_const value:0
  0xd44 | 0f          | return
  0xd45 | 0b          | end
  0xd46 | 20 01       | local_get local_index:1
  0xd48 | 20 02       | local_get local_index:2
  0xd4a | 4f          | i32_ge_u
  0xd4b | 04 40       | if blockty:Empty
  0xd4d | 41 00       | i32_const value:0
  0xd4f | 0f          | return
  0xd50 | 0b          | end
  0xd51 | 41 01       | i32_const value:1
  0xd53 | 0b          | end
============== func 28 ====================
  0xd54 | 26          | size of function
  0xd55 | 01          | 1 local blocks
  0xd56 | 01 64 00    | 1 locals of type Ref((ref (module 0)))
  0xd59 | 20 00       | local_get local_index:0
  0xd5b | fb 02 05 03 | struct_get struct_type_index:5 field_index:3
  0xd5f | 21 02       | local_set local_index:2
  0xd61 | 20 02       | local_get local_index:2
  0xd63 | fb 16 00    | ref_cast_non_null hty:Concrete(Module(0))
  0xd66 | 20 01       | local_get local_index:1
  0xd68 | 10 1b       | call function_index:27
  0xd6a | 45          | i32_eqz
  0xd6b | 04 40       | if blockty:Empty
  0xd6d | 41 7f       | i32_const value:-1
  0xd6f | fb 1c       | ref_i31
  0xd71 | 0f          | return
  0xd72 | 0b          | end
  0xd73 | 20 02       | local_get local_index:2
  0xd75 | 20 01       | local_get local_index:1
  0xd77 | fb 0b 00    | array_get array_type_index:0
  0xd7a | 0b          | end
============== func 29 ====================
  0xd7b | 16          | size of function
  0xd7c | 00          | 0 local blocks
  0xd7d | 20 00       | local_get local_index:0
  0xd7f | 20 01       | local_get local_index:1
  0xd81 | 10 1b       | call function_index:27
  0xd83 | 45          | i32_eqz
  0xd84 | 04 40       | if blockty:Empty
  0xd86 | 41 7f       | i32_const value:-1
  0xd88 | 0f          | return
  0xd89 | 0b          | end
  0xd8a | 20 00       | local_get local_index:0
  0xd8c | 20 01       | local_get local_index:1
  0xd8e | fb 0c 01    | array_get_s array_type_index:1
  0xd91 | 0b          | end
============== func 30 ====================
  0xd92 | 09          | size of function
  0xd93 | 00          | 0 local blocks
  0xd94 | 20 00       | local_get local_index:0
  0xd96 | fb 16 01    | ref_cast_non_null hty:Concrete(Module(1))
  0xd99 | fb 0f       | array_len
  0xd9b | 0b          | end
============== func 31 ====================
  0xd9c | 35          | size of function
  0xd9d | 01          | 1 local blocks
  0xd9e | 02 7f       | 2 locals of type I32
  0xda0 | 20 00       | local_get local_index:0
  0xda2 | fb 0f       | array_len
  0xda4 | 21 01       | local_set local_index:1
  0xda6 | 41 00       | i32_const value:0
  0xda8 | 21 02       | local_set local_index:2
  0xdaa | 03 40       | loop blockty:Empty
  0xdac | 20 02       | local_get local_index:2
  0xdae | 20 01       | local_get local_index:1
  0xdb0 | 46          | i32_eq
  0xdb1 | 04 40       | if blockty:Empty
  0xdb3 | 23 01       | global_get global_index:1
  0xdb5 | 0f          | return
  0xdb6 | 0b          | end
  0xdb7 | 23 01       | global_get global_index:1
  0xdb9 | 20 02       | local_get local_index:2
  0xdbb | 6a          | i32_add
  0xdbc | 20 00       | local_get local_index:0
  0xdbe | 20 02       | local_get local_index:2
  0xdc0 | fb 0d 01    | array_get_u array_type_index:1
  0xdc3 | 3a 00 00    | i32_store8 memarg:MemArg { align: 0, max_align: 0, offset: 0, memory: 0 }
  0xdc6 | 20 02       | local_get local_index:2
  0xdc8 | 41 01       | i32_const value:1
  0xdca | 6a          | i32_add
  0xdcb | 21 02       | local_set local_index:2
  0xdcd | 0c 00       | br relative_depth:0
  0xdcf | 0b          | end
  0xdd0 | 00          | unreachable
  0xdd1 | 0b          | end
============== func 32 ====================
  0xdd2 | 17          | size of function
  0xdd3 | 00          | 0 local blocks
  0xdd4 | 20 00       | local_get local_index:0
  0xdd6 | 20 00       | local_get local_index:0
  0xdd8 | fb 02 12 05 | struct_get struct_type_index:18 field_index:5
  0xddc | 41 01       | i32_const value:1
  0xdde | 6a          | i32_add
  0xddf | fb 05 12 05 | struct_set struct_type_index:18 field_index:5
  0xde3 | 20 00       | local_get local_index:0
  0xde5 | fb 02 12 05 | struct_get struct_type_index:18 field_index:5
  0xde9 | 0b          | end
============== func 33 ====================
  0xdea | 3e          | size of function
  0xdeb | 02          | 2 local blocks
  0xdec | 01 64 05    | 1 locals of type Ref((ref (module 5)))
  0xdef | 01 7f       | 1 locals of type I32
  0xdf1 | 20 00       | local_get local_index:0
  0xdf3 | fb 02 10 0a | struct_get struct_type_index:16 field_index:10
  0xdf7 | 21 02       | local_set local_index:2
  0xdf9 | 20 00       | local_get local_index:0
  0xdfb | fb 02 10 05 | struct_get struct_type_index:16 field_index:5
  0xdff | 21 03       | local_set local_index:3
  0xe01 | 20 03       | local_get local_index:3
  0xe03 | 20 02       | local_get local_index:2
  0xe05 | fb 02 05 03 | struct_get struct_type_index:5 field_index:3
  0xe09 | fb 0f       | array_len
  0xe0b | 4f          | i32_ge_u
  0xe0c | 04 40       | if blockty:Empty
  0xe0e | 0f          | return
  0xe0f | 0b          | end
  0xe10 | 20 02       | local_get local_index:2
  0xe12 | fb 02 05 03 | struct_get struct_type_index:5 field_index:3
  0xe16 | 20 03       | local_get local_index:3
  0xe18 | 20 01       | local_get local_index:1
  0xe1a | fb 0e 00    | array_set array_type_index:0
  0xe1d | 20 00       | local_get local_index:0
  0xe1f | 20 03       | local_get local_index:3
  0xe21 | 41 01       | i32_const value:1
  0xe23 | 6a          | i32_add
  0xe24 | fb 05 10 05 | struct_set struct_type_index:16 field_index:5
  0xe28 | 0b          | end
============== func 34 ====================
  0xe29 | 3c          | size of function
  0xe2a | 02          | 2 local blocks
  0xe2b | 01 64 05    | 1 locals of type Ref((ref (module 5)))
  0xe2e | 01 7f       | 1 locals of type I32
  0xe30 | 20 00       | local_get local_index:0
  0xe32 | fb 02 10 0a | struct_get struct_type_index:16 field_index:10
  0xe36 | 21 01       | local_set local_index:1
  0xe38 | 20 00       | local_get local_index:0
  0xe3a | fb 02 10 05 | struct_get struct_type_index:16 field_index:5
  0xe3e | 21 02       | local_set local_index:2
  0xe40 | 20 02       | local_get local_index:2
  0xe42 | 41 00       | i32_const value:0
  0xe44 | 46          | i32_eq
  0xe45 | 04 40       | if blockty:Empty
  0xe47 | 08 01       | throw tag_index:1
  0xe49 | 0b          | end
  0xe4a | 20 00       | local_get local_index:0
  0xe4c | 20 02       | local_get local_index:2
  0xe4e | 41 01       | i32_const value:1
  0xe50 | 6b          | i32_sub
  0xe51 | fb 05 10 05 | struct_set struct_type_index:16 field_index:5
  0xe55 | 20 01       | local_get local_index:1
  0xe57 | fb 02 05 03 | struct_get struct_type_index:5 field_index:3
  0xe5b | 20 02       | local_get local_index:2
  0xe5d | 41 01       | i32_const value:1
  0xe5f | 6b          | i32_sub
  0xe60 | fb 0b 00    | array_get array_type_index:0
  0xe63 | d4          | ref_as_non_null
  0xe64 | 0f          | return
  0xe65 | 0b          | end
============== func 35 ====================
  0xe66 | 31          | size of function
  0xe67 | 02          | 2 local blocks
  0xe68 | 01 64 05    | 1 locals of type Ref((ref (module 5)))
  0xe6b | 01 7f       | 1 locals of type I32
  0xe6d | 20 00       | local_get local_index:0
  0xe6f | fb 02 10 0a | struct_get struct_type_index:16 field_index:10
  0xe73 | 21 01       | local_set local_index:1
  0xe75 | 20 00       | local_get local_index:0
  0xe77 | fb 02 10 05 | struct_get struct_type_index:16 field_index:5
  0xe7b | 21 02       | local_set local_index:2
  0xe7d | 20 02       | local_get local_index:2
  0xe7f | 41 00       | i32_const value:0
  0xe81 | 46          | i32_eq
  0xe82 | 04 40       | if blockty:Empty
  0xe84 | 08 01       | throw tag_index:1
  0xe86 | 0b          | end
  0xe87 | 20 01       | local_get local_index:1
  0xe89 | fb 02 05 03 | struct_get struct_type_index:5 field_index:3
  0xe8d | 20 02       | local_get local_index:2
  0xe8f | 41 01       | i32_const value:1
  0xe91 | 6b          | i32_sub
  0xe92 | fb 0b 00    | array_get array_type_index:0
  0xe95 | d4          | ref_as_non_null
  0xe96 | 0f          | return
  0xe97 | 0b          | end
============== func 36 ====================
  0xe98 | 1e          | size of function
  0xe99 | 00          | 0 local blocks
  0xe9a | 20 01       | local_get local_index:1
  0xe9c | fb 14 6c    | ref_test_non_null hty:Abstract { shared: false, ty: I31 }
  0xe9f | 04 64 6d    | if blockty:Type(Ref((ref eq)))
  0xea2 | 20 00       | local_get local_index:0
  0xea4 | fb 02 12 11 | struct_get struct_type_index:18 field_index:17
  0xea8 | fb 16 6d    | ref_cast_non_null hty:Abstract { shared: false, ty: Eq }
  0xeab | 05          | else
  0xeac | 20 01       | local_get local_index:1
  0xeae | fb 16 03    | ref_cast_non_null hty:Concrete(Module(3))
  0xeb1 | fb 02 03 00 | struct_get struct_type_index:3 field_index:0
  0xeb5 | 0b          | end
  0xeb6 | 0b          | end
============== func 37 ====================
  0xeb7 | 97 01       | size of function
  0xeb9 | 06          | 6 local blocks
  0xeba | 01 64 6d    | 1 locals of type Ref((ref eq))
  0xebd | 01 6d       | 1 locals of type Ref(eqref)
  0xebf | 01 64 0a    | 1 locals of type Ref((ref (module 10)))
  0xec2 | 02 64 05    | 2 locals of type Ref((ref (module 5)))
  0xec5 | 02 7f       | 2 locals of type I32
  0xec7 | 01 64 6d    | 1 locals of type Ref((ref eq))
  0xeca | 20 00       | local_get local_index:0
  0xecc | 20 01       | local_get local_index:1
  0xece | 10 24       | call function_index:36
  0xed0 | 21 04       | local_set local_index:4
  0xed2 | 03 40       | loop blockty:Empty
  0xed4 | 20 04       | local_get local_index:4
  0xed6 | d1          | ref_is_null
  0xed7 | 04 40       | if blockty:Empty
  0xed9 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0xedb | 0f          | return
  0xedc | 0b          | end
  0xedd | 20 04       | local_get local_index:4
  0xedf | fb 16 0d    | ref_cast_non_null hty:Concrete(Module(13))
  0xee2 | fb 02 0d 04 | struct_get struct_type_index:13 field_index:4
  0xee6 | 21 05       | local_set local_index:5
  0xee8 | 20 05       | local_get local_index:5
  0xeea | d4          | ref_as_non_null
  0xeeb | fb 02 0a 03 | struct_get struct_type_index:10 field_index:3
  0xeef | 21 06       | local_set local_index:6
  0xef1 | 20 05       | local_get local_index:5
  0xef3 | d4          | ref_as_non_null
  0xef4 | fb 02 0a 04 | struct_get struct_type_index:10 field_index:4
  0xef8 | 21 07       | local_set local_index:7
  0xefa | 20 05       | local_get local_index:5
  0xefc | d4          | ref_as_non_null
  0xefd | fb 02 0a 05 | struct_get struct_type_index:10 field_index:5
  0xf01 | 21 08       | local_set local_index:8
  0xf03 | 41 00       | i32_const value:0
  0xf05 | 21 09       | local_set local_index:9
  0xf07 | 03 40       | loop blockty:Empty
  0xf09 | 20 09       | local_get local_index:9
  0xf0b | 20 08       | local_get local_index:8
  0xf0d | 4f          | i32_ge_u
  0xf0e | 04 40       | if blockty:Empty
  0xf10 | 20 04       | local_get local_index:4
  0xf12 | fb 16 0d    | ref_cast_non_null hty:Concrete(Module(13))
  0xf15 | fb 02 0d 03 | struct_get struct_type_index:13 field_index:3
  0xf19 | 21 04       | local_set local_index:4
  0xf1b | 0c 02       | br relative_depth:2
  0xf1d | 0b          | end
  0xf1e | 20 06       | local_get local_index:6
  0xf20 | fb 02 05 03 | struct_get struct_type_index:5 field_index:3
  0xf24 | 20 09       | local_get local_index:9
  0xf26 | fb 0b 00    | array_get array_type_index:0
  0xf29 | d4          | ref_as_non_null
  0xf2a | 21 0a       | local_set local_index:10
  0xf2c | 20 0a       | local_get local_index:10
  0xf2e | 20 02       | local_get local_index:2
  0xf30 | d3          | ref_eq
  0xf31 | 04 40       | if blockty:Empty
  0xf33 | 20 07       | local_get local_index:7
  0xf35 | fb 02 05 03 | struct_get struct_type_index:5 field_index:3
  0xf39 | 20 09       | local_get local_index:9
  0xf3b | fb 0b 00    | array_get array_type_index:0
  0xf3e | fb 17 0f    | ref_cast_nullable hty:Concrete(Module(15))
  0xf41 | 0f          | return
  0xf42 | 0b          | end
  0xf43 | 20 09       | local_get local_index:9
  0xf45 | 41 01       | i32_const value:1
  0xf47 | 6a          | i32_add
  0xf48 | 21 09       | local_set local_index:9
  0xf4a | 0c 00       | br relative_depth:0
  0xf4c | 0b          | end
  0xf4d | 0b          | end
  0xf4e | 00          | unreachable
  0xf4f | 0b          | end
============== func 38 ====================
  0xf50 | a7 01       | size of function
  0xf52 | 04          | 4 local blocks
  0xf53 | 01 63 00    | 1 locals of type Ref((ref null (module 0)))
  0xf56 | 03 7f       | 3 locals of type I32
  0xf58 | 01 63 11    | 1 locals of type Ref((ref null (module 17)))
  0xf5b | 01 7f       | 1 locals of type I32
  0xf5d | 20 00       | local_get local_index:0
  0xf5f | fb 02 12 02 | struct_get struct_type_index:18 field_index:2
  0xf63 | 22 03       | local_tee local_index:3
  0xf65 | d1          | ref_is_null
  0xf66 | 04 40       | if blockty:Empty
  0xf68 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0xf6a | 0f          | return
  0xf6b | 05          | else
  0xf6c | 20 03       | local_get local_index:3
  0xf6e | fb 0f       | array_len
  0xf70 | 21 04       | local_set local_index:4
  0xf72 | 0b          | end
  0xf73 | 20 01       | local_get local_index:1
  0xf75 | fb 16 03    | ref_cast_non_null hty:Concrete(Module(3))
  0xf78 | fb 02 03 01 | struct_get struct_type_index:3 field_index:1
  0xf7c | 20 02       | local_get local_index:2
  0xf7e | fb 02 0d 01 | struct_get struct_type_index:13 field_index:1
  0xf82 | 6a          | i32_add
  0xf83 | 20 03       | local_get local_index:3
  0xf85 | fb 0f       | array_len
  0xf87 | 70          | i32_rem_u
  0xf88 | 21 06       | local_set local_index:6
  0xf8a | 41 08       | i32_const value:8
  0xf8c | 21 08       | local_set local_index:8
  0xf8e | 03 40       | loop blockty:Empty
  0xf90 | 20 08       | local_get local_index:8
  0xf92 | 41 00       | i32_const value:0
  0xf94 | 4c          | i32_le_s
  0xf95 | 04 40       | if blockty:Empty
  0xf97 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0xf99 | 0f          | return
  0xf9a | 0b          | end
  0xf9b | 20 03       | local_get local_index:3
  0xf9d | d4          | ref_as_non_null
  0xf9e | 20 06       | local_get local_index:6
  0xfa0 | fb 0b 00    | array_get array_type_index:0
  0xfa3 | fb 17 11    | ref_cast_nullable hty:Concrete(Module(17))
  0xfa6 | 22 07       | local_tee local_index:7
  0xfa8 | d1          | ref_is_null
  0xfa9 | 04 40       | if blockty:Empty
  0xfab | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
  0xfad | 0f          | return
  0xfae | 0b          | end
  0xfaf | 20 07       | local_get local_index:7
  0xfb1 | fb 16 11    | ref_cast_non_null hty:Concrete(Module(17))
  0xfb4 | 22 07       | local_tee local_index:7
  0xfb6 | fb 02 11 00 | struct_get struct_type_index:17 field_index:0
  0xfba | 20 01       | local_get local_index:1
  0xfbc | d3          | ref_eq
  0xfbd | 20 07       | local_get local_index:7
  0xfbf | fb 02 11 01 | struct_get struct_type_index:17 field_index:1
  0xfc3 | 20 02       | local_get local_index:2
  0xfc5 | d3          | ref_eq
  0xfc6 | 71          | i32_and
  0xfc7 | 04 40       | if blockty:Empty
  0xfc9 | 20 07       | local_get local_index:7
  0xfcb | 20 07       | local_get local_index:7
  0xfcd | fb 02 11 03 | struct_get struct_type_index:17 field_index:3
  0xfd1 | 41 01       | i32_const value:1
  0xfd3 | 6a          | i32_add
  0xfd4 | fb 05 11 03 | struct_set struct_type_index:17 field_index:3
  0xfd8 | 20 07       | local_get local_index:7
  0xfda | fb 02 11 02 | struct_get struct_type_index:17 field_index:2
  0xfde | fb 17 0f    | ref_cast_nullable hty:Concrete(Module(15))
  0xfe1 | 0f          | return
  0xfe2 | 0b          | end
  0xfe3 | 20 06       | local_get local_index:6
  0xfe5 | 41 01       | i32_const value:1
  0xfe7 | 6a          | i32_add
  0xfe8 | 20 04       | local_get local_index:4
  0xfea | 70          | i32_rem_u
  0xfeb | 21 06       | local_set local_index:6
  0xfed | 20 08       | local_get local_index:8
  0xfef | 41 01       | i32_const value:1
  0xff1 | 6b          | i32_sub
  0xff2 | 21 08       | local_set local_index:8
  0xff4 | 0c 00       | br relative_depth:0
  0xff6 | 0b          | end
  0xff7 | 00          | unreachable
  0xff8 | 0b          | end
============== func 39 ====================
  0xff9 | 42          | size of function
  0xffa | 03          | 3 local blocks
  0xffb | 01 64 00    | 1 locals of type Ref((ref (module 0)))
  0xffe | 01 7f       | 1 locals of type I32
 0x1000 | 01 64 11    | 1 locals of type Ref((ref (module 17)))
 0x1003 | 20 00       | local_get local_index:0
 0x1005 | fb 02 12 02 | struct_get struct_type_index:18 field_index:2
 0x1009 | 21 04       | local_set local_index:4
 0x100b | 20 01       | local_get local_index:1
 0x100d | fb 16 09    | ref_cast_non_null hty:Concrete(Module(9))
 0x1010 | fb 02 09 01 | struct_get struct_type_index:9 field_index:1
 0x1014 | 20 02       | local_get local_index:2
 0x1016 | fb 16 0c    | ref_cast_non_null hty:Concrete(Module(12))
 0x1019 | fb 02 0c 01 | struct_get struct_type_index:12 field_index:1
 0x101d | 6a          | i32_add
 0x101e | 20 04       | local_get local_index:4
 0x1020 | fb 0f       | array_len
 0x1022 | 70          | i32_rem_u
 0x1023 | 21 05       | local_set local_index:5
 0x1025 | 20 01       | local_get local_index:1
 0x1027 | 20 02       | local_get local_index:2
 0x1029 | 20 03       | local_get local_index:3
 0x102b | 41 01       | i32_const value:1
 0x102d | fb 00 11    | struct_new struct_type_index:17
 0x1030 | 21 06       | local_set local_index:6
 0x1032 | 20 04       | local_get local_index:4
 0x1034 | 20 05       | local_get local_index:5
 0x1036 | 20 06       | local_get local_index:6
 0x1038 | fb 0e 00    | array_set array_type_index:0
 0x103b | 0b          | end
============== func 40 ====================
 0x103c | 43          | size of function
 0x103d | 00          | 0 local blocks
 0x103e | 20 00       | local_get local_index:0
 0x1040 | fb 02 12 0e | struct_get struct_type_index:18 field_index:14
 0x1044 | fb 16 6d    | ref_cast_non_null hty:Abstract { shared: false, ty: Eq }
 0x1047 | 20 00       | local_get local_index:0
 0x1049 | 10 20       | call function_index:32
 0x104b | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
 0x104d | 20 00       | local_get local_index:0
 0x104f | fb 02 12 00 | struct_get struct_type_index:18 field_index:0
 0x1053 | 41 00       | i32_const value:0
 0x1055 | 41 00       | i32_const value:0
 0x1057 | 20 02       | local_get local_index:2
 0x1059 | 20 01       | local_get local_index:1
 0x105b | 20 00       | local_get local_index:0
 0x105d | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
 0x105f | 41 00       | i32_const value:0
 0x1061 | fb 06 00    | array_new array_type_index:0
 0x1064 | 10 05       | call function_index:5
 0x1066 | 20 00       | local_get local_index:0
 0x1068 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
 0x106a | 41 00       | i32_const value:0
 0x106c | fb 06 00    | array_new array_type_index:0
 0x106f | 10 05       | call function_index:5
 0x1071 | 20 00       | local_get local_index:0
 0x1073 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
 0x1075 | 41 14       | i32_const value:20
 0x1077 | fb 06 00    | array_new array_type_index:0
 0x107a | 10 05       | call function_index:5
 0x107c | fb 00 10    | struct_new struct_type_index:16
 0x107f | 0b          | end
============== func 41 ====================
 0x1080 | 06          | size of function
 0x1081 | 00          | 0 local blocks
 0x1082 | 20 00       | local_get local_index:0
 0x1084 | fb 1c       | ref_i31
 0x1086 | 0b          | end
============== func 42 ====================
 0x1087 | 11          | size of function
 0x1088 | 00          | 0 local blocks
 0x1089 | 20 00       | local_get local_index:0
 0x108b | fb 14 6c    | ref_test_non_null hty:Abstract { shared: false, ty: I31 }
 0x108e | 04 7f       | if blockty:Type(I32)
 0x1090 | 41 01       | i32_const value:1
 0x1092 | 0f          | return
 0x1093 | 05          | else
 0x1094 | 41 00       | i32_const value:0
 0x1096 | 0f          | return
 0x1097 | 0b          | end
 0x1098 | 0b          | end
============== func 43 ====================
 0x1099 | 13          | size of function
 0x109a | 00          | 0 local blocks
 0x109b | 20 00       | local_get local_index:0
 0x109d | 10 2a       | call function_index:42
 0x109f | 04 7f       | if blockty:Type(I32)
 0x10a1 | 20 00       | local_get local_index:0
 0x10a3 | fb 16 6c    | ref_cast_non_null hty:Abstract { shared: false, ty: I31 }
 0x10a6 | fb 1d       | i31_get_s
 0x10a8 | 05          | else
 0x10a9 | 41 00       | i32_const value:0
 0x10ab | 0b          | end
 0x10ac | 0b          | end
============== func 44 ====================
 0x10ad | 0b          | size of function
 0x10ae | 00          | 0 local blocks
 0x10af | 20 00       | local_get local_index:0
 0x10b1 | fb 02 0f 07 | struct_get struct_type_index:15 field_index:7
 0x10b5 | 41 00       | i32_const value:0
 0x10b7 | 4b          | i32_gt_u
 0x10b8 | 0b          | end
============== func 45 ====================
 0x10b9 | 09          | size of function
 0x10ba | 00          | 0 local blocks
 0x10bb | 20 00       | local_get local_index:0
 0x10bd | 20 01       | local_get local_index:1
 0x10bf | 11 28 00    | call_indirect type_index:40 table_index:0
 0x10c2 | 0b          | end
============== func 46 ====================
 0x10c3 | 3d          | size of function
 0x10c4 | 02          | 2 local blocks
 0x10c5 | 01 63 10    | 1 locals of type Ref((ref null (module 16)))
 0x10c8 | 01 64 6d    | 1 locals of type Ref((ref eq))
 0x10cb | 20 01       | local_get local_index:1
 0x10cd | 10 23       | call function_index:35
 0x10cf | 21 03       | local_set local_index:3
 0x10d1 | 20 01       | local_get local_index:1
 0x10d3 | fb 02 10 03 | struct_get struct_type_index:16 field_index:3
 0x10d7 | 22 02       | local_tee local_index:2
 0x10d9 | d1          | ref_is_null
 0x10da | 45          | i32_eqz
 0x10db | 04 40       | if blockty:Empty
 0x10dd | 20 02       | local_get local_index:2
 0x10df | d4          | ref_as_non_null
 0x10e0 | 20 03       | local_get local_index:3
 0x10e2 | 10 21       | call function_index:33
 0x10e4 | 20 02       | local_get local_index:2
 0x10e6 | d4          | ref_as_non_null
 0x10e7 | 20 02       | local_get local_index:2
 0x10e9 | d4          | ref_as_non_null
 0x10ea | fb 02 10 04 | struct_get struct_type_index:16 field_index:4
 0x10ee | 41 01       | i32_const value:1
 0x10f0 | 6a          | i32_add
 0x10f1 | fb 05 10 04 | struct_set struct_type_index:16 field_index:4
 0x10f5 | 0b          | end
 0x10f6 | 20 00       | local_get local_index:0
 0x10f8 | 20 02       | local_get local_index:2
 0x10fa | fb 05 12 00 | struct_set struct_type_index:18 field_index:0
 0x10fe | 20 03       | local_get local_index:3
 0x1100 | 0b          | end
============== func 47 ====================
 0x1101 | da 02       | size of function
 0x1103 | 03          | 3 local blocks
 0x1104 | 01 64 0f    | 1 locals of type Ref((ref (module 15)))
 0x1107 | 01 64 0a    | 1 locals of type Ref((ref (module 10)))
 0x110a | 01 64 00    | 1 locals of type Ref((ref (module 0)))
 0x110d | 20 00       | local_get local_index:0
 0x110f | 41 e2 00    | i32_const value:98
 0x1112 | 41 e5 00    | i32_const value:101
 0x1115 | 41 ee 00    | i32_const value:110
 0x1118 | 41 e3 00    | i32_const value:99
 0x111b | 41 e8 00    | i32_const value:104
 0x111e | 41 ed 00    | i32_const value:109
 0x1121 | 41 e1 00    | i32_const value:97
 0x1124 | 41 f2 00    | i32_const value:114
 0x1127 | 41 eb 00    | i32_const value:107
 0x112a | fb 08 01 09 | array_new_fixed array_type_index:1 array_size:9
 0x112e | 10 0e       | call function_index:14
 0x1130 | 24 00       | global_set global_index:0
 0x1132 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
 0x1134 | 41 04       | i32_const value:4
 0x1136 | fb 06 00    | array_new array_type_index:0
 0x1139 | 21 03       | local_set local_index:3
 0x113b | 20 03       | local_get local_index:3
 0x113d | 41 00       | i32_const value:0
 0x113f | 41 00       | i32_const value:0
 0x1141 | 10 29       | call function_index:41
 0x1143 | fb 0e 00    | array_set array_type_index:0
 0x1146 | 20 03       | local_get local_index:3
 0x1148 | 41 01       | i32_const value:1
 0x114a | 41 01       | i32_const value:1
 0x114c | 10 29       | call function_index:41
 0x114e | fb 0e 00    | array_set array_type_index:0
 0x1151 | 20 03       | local_get local_index:3
 0x1153 | 41 02       | i32_const value:2
 0x1155 | 41 02       | i32_const value:2
 0x1157 | 10 29       | call function_index:41
 0x1159 | fb 0e 00    | array_set array_type_index:0
 0x115c | 20 03       | local_get local_index:3
 0x115e | 41 03       | i32_const value:3
 0x1160 | 41 03       | i32_const value:3
 0x1162 | 10 29       | call function_index:41
 0x1164 | fb 0e 00    | array_set array_type_index:0
 0x1167 | 20 00       | local_get local_index:0
 0x1169 | fb 02 12 0f | struct_get struct_type_index:18 field_index:15
 0x116d | fb 16 6d    | ref_cast_non_null hty:Abstract { shared: false, ty: Eq }
 0x1170 | 20 00       | local_get local_index:0
 0x1172 | 10 20       | call function_index:32
 0x1174 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
 0x1176 | 20 00       | local_get local_index:0
 0x1178 | 41 f0 00    | i32_const value:112
 0x117b | 41 21       | i32_const value:33
 0x117d | 41 b0 01    | i32_const value:176
 0x1180 | 41 22       | i32_const value:34
 0x1182 | 41 b8 01    | i32_const value:184
 0x1185 | 41 22       | i32_const value:34
 0x1187 | 41 b0 01    | i32_const value:176
 0x118a | 41 23       | i32_const value:35
 0x118c | 41 b8 01    | i32_const value:184
 0x118f | 41 23       | i32_const value:35
 0x1191 | 41 b0 01    | i32_const value:176
 0x1194 | 41 22       | i32_const value:34
 0x1196 | 41 b8 01    | i32_const value:184
 0x1199 | 41 21       | i32_const value:33
 0x119b | 41 b0 01    | i32_const value:176
 0x119e | 41 22       | i32_const value:34
 0x11a0 | 41 b8 01    | i32_const value:184
 0x11a3 | 41 22       | i32_const value:34
 0x11a5 | 41 b0 01    | i32_const value:176
 0x11a8 | 41 23       | i32_const value:35
 0x11aa | 41 b8 01    | i32_const value:184
 0x11ad | 41 23       | i32_const value:35
 0x11af | 41 b0 01    | i32_const value:176
 0x11b2 | 41 22       | i32_const value:34
 0x11b4 | 41 b8 01    | i32_const value:184
 0x11b7 | 41 21       | i32_const value:33
 0x11b9 | 41 b0 01    | i32_const value:176
 0x11bc | 41 22       | i32_const value:34
 0x11be | 41 b8 01    | i32_const value:184
 0x11c1 | 41 22       | i32_const value:34
 0x11c3 | 41 b0 01    | i32_const value:176
 0x11c6 | 41 23       | i32_const value:35
 0x11c8 | 41 b8 01    | i32_const value:184
 0x11cb | 41 23       | i32_const value:35
 0x11cd | 41 b0 01    | i32_const value:176
 0x11d0 | 41 22       | i32_const value:34
 0x11d2 | 41 b8 01    | i32_const value:184
 0x11d5 | 41 21       | i32_const value:33
 0x11d7 | 41 b0 01    | i32_const value:176
 0x11da | 41 22       | i32_const value:34
 0x11dc | 41 b8 01    | i32_const value:184
 0x11df | 41 22       | i32_const value:34
 0x11e1 | 41 b0 01    | i32_const value:176
 0x11e4 | 41 23       | i32_const value:35
 0x11e6 | 41 b8 01    | i32_const value:184
 0x11e9 | 41 23       | i32_const value:35
 0x11eb | 41 b0 01    | i32_const value:176
 0x11ee | 41 22       | i32_const value:34
 0x11f0 | 41 b8 01    | i32_const value:184
 0x11f3 | 41 21       | i32_const value:33
 0x11f5 | 41 b0 01    | i32_const value:176
 0x11f8 | 41 22       | i32_const value:34
 0x11fa | 41 b8 01    | i32_const value:184
 0x11fd | 41 22       | i32_const value:34
 0x11ff | 41 b0 01    | i32_const value:176
 0x1202 | 41 23       | i32_const value:35
 0x1204 | 41 b8 01    | i32_const value:184
 0x1207 | 41 23       | i32_const value:35
 0x1209 | 41 b0 01    | i32_const value:176
 0x120c | 41 22       | i32_const value:34
 0x120e | 41 b8 01    | i32_const value:184
 0x1211 | 41 fc 00    | i32_const value:124
 0x1214 | fb 08 01 3e | array_new_fixed array_type_index:1 array_size:62
 0x1218 | 10 06       | call function_index:6
 0x121a | 20 00       | local_get local_index:0
 0x121c | 20 03       | local_get local_index:3
 0x121e | 10 05       | call function_index:5
 0x1220 | 41 00       | i32_const value:0
 0x1222 | 41 00       | i32_const value:0
 0x1224 | 41 00       | i32_const value:0
 0x1226 | 20 00       | local_get local_index:0
 0x1228 | fb 02 12 04 | struct_get struct_type_index:18 field_index:4
 0x122c | 41 00       | i32_const value:0
 0x122e | fb 00 0f    | struct_new struct_type_index:15
 0x1231 | 21 01       | local_set local_index:1
 0x1233 | 20 00       | local_get local_index:0
 0x1235 | 10 08       | call function_index:8
 0x1237 | 21 02       | local_set local_index:2
 0x1239 | 20 00       | local_get local_index:0
 0x123b | fb 02 12 11 | struct_get struct_type_index:18 field_index:17
 0x123f | 20 02       | local_get local_index:2
 0x1241 | fb 05 0d 04 | struct_set struct_type_index:13 field_index:4
 0x1245 | 20 00       | local_get local_index:0
 0x1247 | 20 02       | local_get local_index:2
 0x1249 | 23 00       | global_get global_index:0
 0x124b | fb 16 6d    | ref_cast_non_null hty:Abstract { shared: false, ty: Eq }
 0x124e | 20 01       | local_get local_index:1
 0x1250 | 10 09       | call function_index:9
 0x1252 | 20 01       | local_get local_index:1
 0x1254 | 41 01       | i32_const value:1
 0x1256 | fb 05 0f 09 | struct_set struct_type_index:15 field_index:9
 0x125a | 41 01       | i32_const value:1
 0x125c | 0b          | end
============== func 48 ====================
 0x125d | 51          | size of function
 0x125e | 00          | 0 local blocks
 0x125f | 20 00       | local_get local_index:0
 0x1261 | 20 00       | local_get local_index:0
 0x1263 | 41 e4 00    | i32_const value:100
 0x1266 | fb 1c       | ref_i31
 0x1268 | 20 00       | local_get local_index:0
 0x126a | fb 02 12 0f | struct_get struct_type_index:18 field_index:15
 0x126e | fb 16 6d    | ref_cast_non_null hty:Abstract { shared: false, ty: Eq }
 0x1271 | 20 00       | local_get local_index:0
 0x1273 | 10 20       | call function_index:32
 0x1275 | d0 71       | ref_null hty:Abstract { shared: false, ty: None }
 0x1277 | 20 00       | local_get local_index:0
 0x1279 | 41 f0 00    | i32_const value:112
 0x127c | 41 d0 01    | i32_const value:208
 0x127f | 41 fc 00    | i32_const value:124
 0x1282 | fb 08 01 03 | array_new_fixed array_type_index:1 array_size:3
 0x1286 | 10 06       | call function_index:6
 0x1288 | 20 00       | local_get local_index:0
 0x128a | 23 00       | global_get global_index:0
 0x128c | fb 08 00 01 | array_new_fixed array_type_index:0 array_size:1
 0x1290 | 10 05       | call function_index:5
 0x1292 | 41 00       | i32_const value:0
 0x1294 | 41 00       | i32_const value:0
 0x1296 | 41 00       | i32_const value:0
 0x1298 | 20 00       | local_get local_index:0
 0x129a | fb 02 12 04 | struct_get struct_type_index:18 field_index:4
 0x129e | 41 00       | i32_const value:0
 0x12a0 | fb 00 0f    | struct_new struct_type_index:15
 0x12a3 | 23 00       | global_get global_index:0
 0x12a5 | fb 16 6d    | ref_cast_non_null hty:Abstract { shared: false, ty: Eq }
 0x12a8 | 10 28       | call function_index:40
 0x12aa | fb 05 12 00 | struct_set struct_type_index:18 field_index:0
 0x12ae | 0b          | end
============== func 49 ====================
 0x12af | 9c 02       | size of function
 0x12b1 | 08          | 8 local blocks
 0x12b2 | 03 64 6d    | 3 locals of type Ref((ref eq))
 0x12b5 | 03 7f       | 3 locals of type I32
 0x12b7 | 01 64 10    | 1 locals of type Ref((ref (module 16)))
 0x12ba | 01 64 09    | 1 locals of type Ref((ref (module 9)))
 0x12bd | 01 63 0f    | 1 locals of type Ref((ref null (module 15)))
 0x12c0 | 01 64 0d    | 1 locals of type Ref((ref (module 13)))
 0x12c3 | 01 7f       | 1 locals of type I32
 0x12c5 | 01 64 00    | 1 locals of type Ref((ref (module 0)))
 0x12c8 | 20 01       | local_get local_index:1
 0x12ca | fb 02 10 07 | struct_get struct_type_index:16 field_index:7
 0x12ce | 21 03       | local_set local_index:3
 0x12d0 | 20 01       | local_get local_index:1
 0x12d2 | fb 02 10 06 | struct_get struct_type_index:16 field_index:6
 0x12d6 | fb 02 0f 04 | struct_get struct_type_index:15 field_index:4
 0x12da | fb 02 05 03 | struct_get struct_type_index:5 field_index:3
 0x12de | 21 0e       | local_set local_index:14
 0x12e0 | 20 02       | local_get local_index:2
 0x12e2 | 41 20       | i32_const value:32
 0x12e4 | 4f          | i32_ge_u
 0x12e5 | 20 02       | local_get local_index:2
 0x12e7 | 41 2f       | i32_const value:47
 0x12e9 | 4d          | i32_le_u
 0x12ea | 71          | i32_and
 0x12eb | 04 40       | if blockty:Empty
 0x12ed | 20 02       | local_get local_index:2
 0x12ef | 41 20       | i32_const value:32
 0x12f1 | 6b          | i32_sub
 0x12f2 | 21 0d       | local_set local_index:13
 0x12f4 | 20 01       | local_get local_index:1
 0x12f6 | 20 0e       | local_get local_index:14
 0x12f8 | 20 0d       | local_get local_index:13
 0x12fa | fb 0b 00    | array_get array_type_index:0
 0x12fd | d4          | ref_as_non_null
 0x12fe | 10 21       | call function_index:33
 0x1300 | 41 00       | i32_const value:0
 0x1302 | 0f          | return
 0x1303 | 0b          | end
 0x1304 | 20 02       | local_get local_index:2
 0x1306 | 41 f0 00    | i32_const value:112
 0x1309 | 46          | i32_eq
 0x130a | 04 40       | if blockty:Empty
 0x130c | 20 01       | local_get local_index:1
 0x130e | 20 03       | local_get local_index:3
 0x1310 | 10 21       | call function_index:33
 0x1312 | 41 00       | i32_const value:0
 0x1314 | 0f          | return
 0x1315 | 0b          | end
 0x1316 | 20 02       | local_get local_index:2
 0x1318 | 41 b8 01    | i32_const value:184
 0x131b | 46          | i32_eq
 0x131c | 04 40       | if blockty:Empty
 0x131e | 20 01       | local_get local_index:1
 0x1320 | 20 01       | local_get local_index:1
 0x1322 | 10 22       | call function_index:34
 0x1324 | 10 2b       | call function_index:43
 0x1326 | 20 01       | local_get local_index:1
 0x1328 | 10 22       | call function_index:34
 0x132a | 10 2b       | call function_index:43
 0x132c | 6c          | i32_mul
 0x132d | 10 29       | call function_index:41
 0x132f | 10 21       | call function_index:33
 0x1331 | 41 00       | i32_const value:0
 0x1333 | 0f          | return
 0x1334 | 0b          | end
 0x1335 | 20 02       | local_get local_index:2
 0x1337 | 41 b0 01    | i32_const value:176
 0x133a | 46          | i32_eq
 0x133b | 04 40       | if blockty:Empty
 0x133d | 20 01       | local_get local_index:1
 0x133f | 20 01       | local_get local_index:1
 0x1341 | 10 22       | call function_index:34
 0x1343 | 10 2b       | call function_index:43
 0x1345 | 20 01       | local_get local_index:1
 0x1347 | 10 22       | call function_index:34
 0x1349 | 10 2b       | call function_index:43
 0x134b | 6a          | i32_add
 0x134c | 10 29       | call function_index:41
 0x134e | 10 21       | call function_index:33
 0x1350 | 41 00       | i32_const value:0
 0x1352 | 0f          | return
 0x1353 | 0b          | end
 0x1354 | 20 02       | local_get local_index:2
 0x1356 | 41 fc 00    | i32_const value:124
 0x1359 | 46          | i32_eq
 0x135a | 04 40       | if blockty:Empty
 0x135c | 41 01       | i32_const value:1
 0x135e | 0f          | return
 0x135f | 0b          | end
 0x1360 | 20 02       | local_get local_index:2
 0x1362 | 41 d0 01    | i32_const value:208
 0x1365 | 46          | i32_eq
 0x1366 | 04 40       | if blockty:Empty
 0x1368 | 20 01       | local_get local_index:1
 0x136a | 10 22       | call function_index:34
 0x136c | 21 03       | local_set local_index:3
 0x136e | 20 02       | local_get local_index:2
 0x1370 | 41 0f       | i32_const value:15
 0x1372 | 71          | i32_and
 0x1373 | 21 0d       | local_set local_index:13
 0x1375 | 20 0e       | local_get local_index:14
 0x1377 | 20 0d       | local_get local_index:13
 0x1379 | fb 0b 00    | array_get array_type_index:0
 0x137c | fb 16 09    | ref_cast_non_null hty:Concrete(Module(9))
 0x137f | 21 0a       | local_set local_index:10
 0x1381 | 20 00       | local_get local_index:0
 0x1383 | 20 03       | local_get local_index:3
 0x1385 | 10 24       | call function_index:36
 0x1387 | fb 16 0d    | ref_cast_non_null hty:Concrete(Module(13))
 0x138a | 21 0c       | local_set local_index:12
 0x138c | 20 00       | local_get local_index:0
 0x138e | 20 0a       | local_get local_index:10
 0x1390 | 20 0c       | local_get local_index:12
 0x1392 | 10 26       | call function_index:38
 0x1394 | 22 0b       | local_tee local_index:11
 0x1396 | d1          | ref_is_null
 0x1397 | 04 40       | if blockty:Empty
 0x1399 | 20 00       | local_get local_index:0
 0x139b | 20 03       | local_get local_index:3
 0x139d | 20 0a       | local_get local_index:10
 0x139f | 10 25       | call function_index:37
 0x13a1 | 22 0b       | local_tee local_index:11
 0x13a3 | d1          | ref_is_null
 0x13a4 | 04 40       | if blockty:Empty
 0x13a6 | 20 0a       | local_get local_index:10
 0x13a8 | 08 00       | throw tag_index:0
 0x13aa | 0b          | end
 0x13ab | 20 00       | local_get local_index:0
 0x13ad | 20 0a       | local_get local_index:10
 0x13af | 20 0c       | local_get local_index:12
 0x13b1 | 20 0b       | local_get local_index:11
 0x13b3 | 10 27       | call function_index:39
 0x13b5 | 0b          | end
 0x13b6 | 20 00       | local_get local_index:0
 0x13b8 | 20 00       | local_get local_index:0
 0x13ba | 20 03       | local_get local_index:3
 0x13bc | 20 0b       | local_get local_index:11
 0x13be | d4          | ref_as_non_null
 0x13bf | 20 0a       | local_get local_index:10
 0x13c1 | 10 28       | call function_index:40
 0x13c3 | fb 05 12 00 | struct_set struct_type_index:18 field_index:0
 0x13c7 | 41 00       | i32_const value:0
 0x13c9 | 0f          | return
 0x13ca | 0b          | end
 0x13cb | 00          | unreachable
 0x13cc | 0b          | end
============== func 50 ====================
 0x13cd | e2 02       | size of function
 0x13cf | 07          | 7 local blocks
 0x13d0 | 01 63 10    | 1 locals of type Ref((ref null (module 16)))
 0x13d3 | 01 63 0f    | 1 locals of type Ref((ref null (module 15)))
 0x13d6 | 02 7f       | 2 locals of type I32
 0x13d8 | 02 64 6d    | 2 locals of type Ref((ref eq))
 0x13db | 01 7f       | 1 locals of type I32
 0x13dd | 01 64 01    | 1 locals of type Ref((ref (module 1)))
 0x13e0 | 01 7f       | 1 locals of type I32
 0x13e2 | 41 2a       | i32_const value:42
 0x13e4 | fb 1c       | ref_i31
 0x13e6 | 21 06       | local_set local_index:6
 0x13e8 | 02 40       | block blockty:Empty
 0x13ea | 03 40       | loop blockty:Empty
 0x13ec | 20 00       | local_get local_index:0
 0x13ee | fb 02 12 00 | struct_get struct_type_index:18 field_index:0
 0x13f2 | 22 01       | local_tee local_index:1
 0x13f4 | d1          | ref_is_null
 0x13f5 | 04 40       | if blockty:Empty
 0x13f7 | 0c 02       | br relative_depth:2
 0x13f9 | 0b          | end
 0x13fa | 20 01       | local_get local_index:1
 0x13fc | d4          | ref_as_non_null
 0x13fd | fb 02 10 07 | struct_get struct_type_index:16 field_index:7
 0x1401 | 21 05       | local_set local_index:5
 0x1403 | 20 01       | local_get local_index:1
 0x1405 | d4          | ref_as_non_null
 0x1406 | fb 02 10 06 | struct_get struct_type_index:16 field_index:6
 0x140a | 22 02       | local_tee local_index:2
 0x140c | fb 02 0f 06 | struct_get struct_type_index:15 field_index:6
 0x1410 | 41 01       | i32_const value:1
 0x1412 | 6a          | i32_add
 0x1413 | 21 07       | local_set local_index:7
 0x1415 | 20 02       | local_get local_index:2
 0x1417 | 20 07       | local_get local_index:7
 0x1419 | fb 05 0f 06 | struct_set struct_type_index:15 field_index:6
 0x141d | 20 07       | local_get local_index:7
 0x141f | 20 02       | local_get local_index:2
 0x1421 | fb 02 0f 08 | struct_get struct_type_index:15 field_index:8
 0x1425 | 46          | i32_eq
 0x1426 | 20 00       | local_get local_index:0
 0x1428 | fb 02 12 01 | struct_get struct_type_index:18 field_index:1
 0x142c | 71          | i32_and
 0x142d | 04 40       | if blockty:Empty
 0x142f | 20 02       | local_get local_index:2
 0x1431 | fb 02 0f 09 | struct_get struct_type_index:15 field_index:9
 0x1435 | 04 40       | if blockty:Empty
 0x1437 | 20 02       | local_get local_index:2
 0x1439 | 10 2c       | call function_index:44
 0x143b | 45          | i32_eqz
 0x143c | 04 40       | if blockty:Empty
 0x143e | 20 02       | local_get local_index:2
 0x1440 | d4          | ref_as_non_null
 0x1441 | 20 05       | local_get local_index:5
 0x1443 | 10 2a       | call function_index:42
 0x1445 | 04 7f       | if blockty:Type(I32)
 0x1447 | 20 05       | local_get local_index:5
 0x1449 | 10 2b       | call function_index:43
 0x144b | 05          | else
 0x144c | 20 05       | local_get local_index:5
 0x144e | fb 16 03    | ref_cast_non_null hty:Concrete(Module(3))
 0x1451 | fb 02 03 01 | struct_get struct_type_index:3 field_index:1
 0x1455 | 0b          | end
 0x1456 | 10 01       | call function_index:1
 0x1458 | 0b          | end
 0x1459 | 0b          | end
 0x145a | 0b          | end
 0x145b | 20 02       | local_get local_index:2
 0x145d | d4          | ref_as_non_null
 0x145e | 10 2c       | call function_index:44
 0x1460 | 04 40       | if blockty:Empty
 0x1462 | 20 02       | local_get local_index:2
 0x1464 | fb 02 0f 07 | struct_get struct_type_index:15 field_index:7
 0x1468 | 21 09       | local_set local_index:9
 0x146a | 20 01       | local_get local_index:1
 0x146c | d4          | ref_as_non_null
 0x146d | 20 09       | local_get local_index:9
 0x146f | 10 2d       | call function_index:45
 0x1471 | 04 40       | if blockty:Empty
 0x1473 | 20 02       | local_get local_index:2
 0x1475 | 41 00       | i32_const value:0
 0x1477 | fb 05 0f 07 | struct_set struct_type_index:15 field_index:7
 0x147b | 0c 02       | br relative_depth:2
 0x147d | 05          | else
 0x147e | 20 00       | local_get local_index:0
 0x1480 | 20 01       | local_get local_index:1
 0x1482 | d4          | ref_as_non_null
 0x1483 | 10 2e       | call function_index:46
 0x1485 | 21 06       | local_set local_index:6
 0x1487 | 0b          | end
 0x1488 | 0c 01       | br relative_depth:1
 0x148a | 0b          | end
 0x148b | 20 02       | local_get local_index:2
 0x148d | fb 02 0f 03 | struct_get struct_type_index:15 field_index:3
 0x1491 | fb 16 06    | ref_cast_non_null hty:Concrete(Module(6))
 0x1494 | fb 02 06 03 | struct_get struct_type_index:6 field_index:3
 0x1498 | 21 08       | local_set local_index:8
 0x149a | 03 40       | loop blockty:Empty
 0x149c | 20 00       | local_get local_index:0
 0x149e | fb 02 12 00 | struct_get struct_type_index:18 field_index:0
 0x14a2 | 22 01       | local_tee local_index:1
 0x14a4 | d1          | ref_is_null
 0x14a5 | 0d 01       | br_if relative_depth:1
 0x14a7 | 20 01       | local_get local_index:1
 0x14a9 | d4          | ref_as_non_null
 0x14aa | fb 02 10 04 | struct_get struct_type_index:16 field_index:4
 0x14ae | 21 04       | local_set local_index:4
 0x14b0 | 20 01       | local_get local_index:1
 0x14b2 | d4          | ref_as_non_null
 0x14b3 | fb 02 10 06 | struct_get struct_type_index:16 field_index:6
 0x14b7 | 22 02       | local_tee local_index:2
 0x14b9 | fb 02 0f 03 | struct_get struct_type_index:15 field_index:3
 0x14bd | fb 16 06    | ref_cast_non_null hty:Concrete(Module(6))
 0x14c0 | fb 02 06 03 | struct_get struct_type_index:6 field_index:3
 0x14c4 | 22 08       | local_tee local_index:8
 0x14c6 | fb 0f       | array_len
 0x14c8 | 20 04       | local_get local_index:4
 0x14ca | 4d          | i32_le_u
 0x14cb | 04 40       | if blockty:Empty
 0x14cd | 20 00       | local_get local_index:0
 0x14cf | 20 01       | local_get local_index:1
 0x14d1 | d4          | ref_as_non_null
 0x14d2 | 10 2e       | call function_index:46
 0x14d4 | 21 06       | local_set local_index:6
 0x14d6 | 0c 01       | br relative_depth:1
 0x14d8 | 0b          | end
 0x14d9 | 20 08       | local_get local_index:8
 0x14db | 20 04       | local_get local_index:4
 0x14dd | fb 0d 01    | array_get_u array_type_index:1
 0x14e0 | 21 03       | local_set local_index:3
 0x14e2 | 20 00       | local_get local_index:0
 0x14e4 | 20 01       | local_get local_index:1
 0x14e6 | d4          | ref_as_non_null
 0x14e7 | 20 03       | local_get local_index:3
 0x14e9 | 10 31       | call function_index:49
 0x14eb | 04 40       | if blockty:Empty
 0x14ed | 20 00       | local_get local_index:0
 0x14ef | 20 01       | local_get local_index:1
 0x14f1 | d4          | ref_as_non_null
 0x14f2 | 10 2e       | call function_index:46
 0x14f4 | 21 06       | local_set local_index:6
 0x14f6 | 0c 01       | br relative_depth:1
 0x14f8 | 0b          | end
 0x14f9 | 20 00       | local_get local_index:0
 0x14fb | fb 02 12 00 | struct_get struct_type_index:18 field_index:0
 0x14ff | 20 01       | local_get local_index:1
 0x1501 | d3          | ref_eq
 0x1502 | 04 40       | if blockty:Empty
 0x1504 | 20 01       | local_get local_index:1
 0x1506 | d4          | ref_as_non_null
 0x1507 | 20 04       | local_get local_index:4
 0x1509 | 41 01       | i32_const value:1
 0x150b | 6a          | i32_add
 0x150c | fb 05 10 04 | struct_set struct_type_index:16 field_index:4
 0x1510 | 05          | else
 0x1511 | 20 00       | local_get local_index:0
 0x1513 | fb 02 12 00 | struct_get struct_type_index:18 field_index:0
 0x1517 | d4          | ref_as_non_null
 0x1518 | fb 02 10 04 | struct_get struct_type_index:16 field_index:4
 0x151c | 45          | i32_eqz
 0x151d | 04 40       | if blockty:Empty
 0x151f | 0c 03       | br relative_depth:3
 0x1521 | 0b          | end
 0x1522 | 0b          | end
 0x1523 | 0c 00       | br relative_depth:0
 0x1525 | 0b          | end
 0x1526 | 0b          | end
 0x1527 | 0b          | end
 0x1528 | 20 06       | local_get local_index:6
 0x152a | 10 2b       | call function_index:43
 0x152c | 10 00       | call function_index:0
 0x152e | 41 01       | i32_const value:1
 0x1530 | 0b          | end
 0x1531 | 00 e5 17    | custom section
 0x1534 | 04 6e 61 6d | name: "name"
        | 65         
 0x1539 | 01 d4 06    | function name section
 0x153c | 33          | 51 count
 0x153d | 00 0c 72 65 | Naming { index: 0, name: "reportResult" }
        | 70 6f 72 74
        | 52 65 73 75
        | 6c 74      
 0x154b | 01 0f 74 72 | Naming { index: 1, name: "translateMethod" }
        | 61 6e 73 6c
        | 61 74 65 4d
        | 65 74 68 6f
        | 64         
 0x155c | 02 08 64 65 | Naming { index: 2, name: "debugLog" }
        | 62 75 67 4c
        | 6f 67      
 0x1566 | 03 17 62 79 | Naming { index: 3, name: "byteArrayIsEquivalentTo" }
        | 74 65 41 72
        | 72 61 79 49
        | 73 45 71 75
        | 69 76 61 6c
        | 65 6e 74 54
        | 6f         
 0x157f | 04 14 73 79 | Naming { index: 4, name: "symbolIsEquivalentTo" }
        | 6d 62 6f 6c
        | 49 73 45 71
        | 75 69 76 61
        | 6c 65 6e 74
        | 54 6f      
 0x1595 | 05 08 6e 65 | Naming { index: 5, name: "newArray" }
        | 77 41 72 72
        | 61 79      
 0x159f | 06 0c 6e 65 | Naming { index: 6, name: "newByteArray" }
        | 77 42 79 74
        | 65 41 72 72
        | 61 79      
 0x15ad | 07 0c 6e 65 | Naming { index: 7, name: "newWordArray" }
        | 77 57 6f 72
        | 64 41 72 72
        | 61 79      
 0x15bb | 08 0d 6e 65 | Naming { index: 8, name: "newDictionary" }
        | 77 44 69 63
        | 74 69 6f 6e
        | 61 72 79   
 0x15ca | 09 0d 64 69 | Naming { index: 9, name: "dictionaryAdd" }
        | 63 74 69 6f
        | 6e 61 72 79
        | 41 64 64   
 0x15d9 | 0a 0b 6c 69 | Naming { index: 10, name: "linkObjects" }
        | 6e 6b 4f 62
        | 6a 65 63 74
        | 73         
 0x15e6 | 0b 0d 6e 65 | Naming { index: 11, name: "newEmptyArray" }
        | 77 45 6d 70
        | 74 79 41 72
        | 72 61 79   
 0x15f5 | 0c 08 61 72 | Naming { index: 12, name: "arrayAdd" }
        | 72 61 79 41
        | 64 64      
 0x15ff | 0d 15 6e 65 | Naming { index: 13, name: "newSubclassOfWithName" }
        | 77 53 75 62
        | 63 6c 61 73
        | 73 4f 66 57
        | 69 74 68 4e
        | 61 6d 65   
 0x1616 | 0e 12 6e 65 | Naming { index: 14, name: "newSymbolFromBytes" }
        | 77 53 79 6d
        | 62 6f 6c 46
        | 72 6f 6d 42
        | 79 74 65 73
 0x162a | 0f 02 64 6f | Naming { index: 15, name: "do" }
 0x162e | 10 12 66 69 | Naming { index: 16, name: "fixMetalevelFields" }
        | 78 4d 65 74
        | 61 6c 65 76
        | 65 6c 46 69
        | 65 6c 64 73
 0x1642 | 11 11 6e 65 | Naming { index: 17, name: "newVirtualMachine" }
        | 77 56 69 72
        | 74 75 61 6c
        | 4d 61 63 68
        | 69 6e 65   
 0x1655 | 12 0f 6d 65 | Naming { index: 18, name: "methodBytecodes" }
        | 74 68 6f 64
        | 42 79 74 65
        | 63 6f 64 65
        | 73         
 0x1666 | 13 16 67 65 | Naming { index: 19, name: "getMethodFunctionIndex" }
        | 74 4d 65 74
        | 68 6f 64 46
        | 75 6e 63 74
        | 69 6f 6e 49
        | 6e 64 65 78
 0x167e | 14 16 73 65 | Naming { index: 20, name: "setMethodFunctionIndex" }
        | 74 4d 65 74
        | 68 6f 64 46
        | 75 6e 63 74
        | 69 6f 6e 49
        | 6e 64 65 78
 0x1696 | 15 0d 6f 6e | Naming { index: 21, name: "onContextPush" }
        | 43 6f 6e 74
        | 65 78 74 50
        | 75 73 68   
 0x16a5 | 16 0e 70 6f | Naming { index: 22, name: "popFromContext" }
        | 70 46 72 6f
        | 6d 43 6f 6e
        | 74 65 78 74
 0x16b5 | 17 0f 63 6f | Naming { index: 23, name: "contextReceiver" }
        | 6e 74 65 78
        | 74 52 65 63
        | 65 69 76 65
        | 72         
 0x16c6 | 18 0e 6d 65 | Naming { index: 24, name: "methodLiterals" }
        | 74 68 6f 64
        | 4c 69 74 65
        | 72 61 6c 73
 0x16d6 | 19 10 63 6f | Naming { index: 25, name: "contextLiteralAt" }
        | 6e 74 65 78
        | 74 4c 69 74
        | 65 72 61 6c
        | 41 74      
 0x16e8 | 1a 0d 63 6f | Naming { index: 26, name: "contextMethod" }
        | 6e 74 65 78
        | 74 4d 65 74
        | 68 6f 64   
 0x16f7 | 1b 0b 61 72 | Naming { index: 27, name: "arrayOkayAt" }
        | 72 61 79 4f
        | 6b 61 79 41
        | 74         
 0x1704 | 1c 07 61 72 | Naming { index: 28, name: "arrayAt" }
        | 72 61 79 41
        | 74         
 0x170d | 1d 0b 62 79 | Naming { index: 29, name: "byteArrayAt" }
        | 74 65 41 72
        | 72 61 79 41
        | 74         
 0x171a | 1e 0f 62 79 | Naming { index: 30, name: "byteArrayLength" }
        | 74 65 41 72
        | 72 61 79 4c
        | 65 6e 67 74
        | 68         
 0x172b | 1f 15 63 6f | Naming { index: 31, name: "copyByteArrayToMemory" }
        | 70 79 42 79
        | 74 65 41 72
        | 72 61 79 54
        | 6f 4d 65 6d
        | 6f 72 79   
 0x1742 | 20 10 6e 65 | Naming { index: 32, name: "nextIdentityHash" }
        | 78 74 49 64
        | 65 6e 74 69
        | 74 79 48 61
        | 73 68      
 0x1754 | 21 0b 70 75 | Naming { index: 33, name: "pushOnStack" }
        | 73 68 4f 6e
        | 53 74 61 63
        | 6b         
 0x1761 | 22 0c 70 6f | Naming { index: 34, name: "popFromStack" }
        | 70 46 72 6f
        | 6d 53 74 61
        | 63 6b      
 0x176f | 23 0a 74 6f | Naming { index: 35, name: "topOfStack" }
        | 70 4f 66 53
        | 74 61 63 6b
 0x177b | 24 0d 63 6c | Naming { index: 36, name: "classOfObject" }
        | 61 73 73 4f
        | 66 4f 62 6a
        | 65 63 74   
 0x178a | 25 0c 6c 6f | Naming { index: 37, name: "lookupMethod" }
        | 6f 6b 75 70
        | 4d 65 74 68
        | 6f 64      
 0x1798 | 26 13 6c 6f | Naming { index: 38, name: "lookupInMethodCache" }
        | 6f 6b 75 70
        | 49 6e 4d 65
        | 74 68 6f 64
        | 43 61 63 68
        | 65         
 0x17ad | 27 12 73 74 | Naming { index: 39, name: "storeInMethodCache" }
        | 6f 72 65 49
        | 6e 4d 65 74
        | 68 6f 64 43
        | 61 63 68 65
 0x17c1 | 28 0a 6e 65 | Naming { index: 40, name: "newContext" }
        | 77 43 6f 6e
        | 74 65 78 74
 0x17cd | 29 14 73 6d | Naming { index: 41, name: "smallIntegerForValue" }
        | 61 6c 6c 49
        | 6e 74 65 67
        | 65 72 46 6f
        | 72 56 61 6c
        | 75 65      
 0x17e3 | 2a 0e 69 73 | Naming { index: 42, name: "isSmallInteger" }
        | 53 6d 61 6c
        | 6c 49 6e 74
        | 65 67 65 72
 0x17f3 | 2b 13 76 61 | Naming { index: 43, name: "valueOfSmallInteger" }
        | 6c 75 65 4f
        | 66 53 6d 61
        | 6c 6c 49 6e
        | 74 65 67 65
        | 72         
 0x1808 | 2c 0c 69 73 | Naming { index: 44, name: "isTranslated" }
        | 54 72 61 6e
        | 73 6c 61 74
        | 65 64      
 0x1816 | 2d 17 65 78 | Naming { index: 45, name: "executeTranslatedMethod" }
        | 65 63 75 74
        | 65 54 72 61
        | 6e 73 6c 61
        | 74 65 64 4d
        | 65 74 68 6f
        | 64         
 0x182f | 2e 12 68 61 | Naming { index: 46, name: "handleMethodReturn" }
        | 6e 64 6c 65
        | 4d 65 74 68
        | 6f 64 52 65
        | 74 75 72 6e
 0x1843 | 2f 19 63 72 | Naming { index: 47, name: "createMinimalObjectMemory" }
        | 65 61 74 65
        | 4d 69 6e 69
        | 6d 61 6c 4f
        | 62 6a 65 63
        | 74 4d 65 6d
        | 6f 72 79   
 0x185e | 30 12 72 65 | Naming { index: 48, name: "resetMinimalMemory" }
        | 73 65 74 4d
        | 69 6e 69 6d
        | 61 6c 4d 65
        | 6d 6f 72 79
 0x1872 | 31 11 69 6e | Naming { index: 49, name: "interpretBytecode" }
        | 74 65 72 70
        | 72 65 74 42
        | 79 74 65 63
        | 6f 64 65   
 0x1885 | 32 09 69 6e | Naming { index: 50, name: "interpret" }
        | 74 65 72 70
        | 72 65 74   
 0x1890 | 02 9c 0c    | local section
 0x1893 | 30          | 48 count
 0x1894 | 03          | function 3 local name section
 0x1895 | 06          | 6 count
 0x1896 | 00 0b 66 69 | Naming { index: 0, name: "firstObject" }
        | 72 73 74 4f
        | 62 6a 65 63
        | 74         
 0x18a3 | 01 0c 73 65 | Naming { index: 1, name: "secondObject" }
        | 63 6f 6e 64
        | 4f 62 6a 65
        | 63 74      
 0x18b1 | 02 0a 66 69 | Naming { index: 2, name: "firstArray" }
        | 72 73 74 41
        | 72 72 61 79
 0x18bd | 03 0b 73 65 | Naming { index: 3, name: "secondArray" }
        | 63 6f 6e 64
        | 41 72 72 61
        | 79         
 0x18ca | 04 06 6c 65 | Naming { index: 4, name: "length" }
        | 6e 67 74 68
 0x18d2 | 05 05 69 6e | Naming { index: 5, name: "index" }
        | 64 65 78   
 0x18d9 | 04          | function 4 local name section
 0x18da | 02          | 2 count
 0x18db | 00 0b 66 69 | Naming { index: 0, name: "firstSymbol" }
        | 72 73 74 53
        | 79 6d 62 6f
        | 6c         
 0x18e8 | 01 0c 73 65 | Naming { index: 1, name: "secondSymbol" }
        | 63 6f 6e 64
        | 53 79 6d 62
        | 6f 6c      
 0x18f6 | 05          | function 5 local name section
 0x18f7 | 02          | 2 count
 0x18f8 | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x18fc | 01 05 61 72 | Naming { index: 1, name: "array" }
        | 72 61 79   
 0x1903 | 06          | function 6 local name section
 0x1904 | 02          | 2 count
 0x1905 | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x1909 | 01 05 61 72 | Naming { index: 1, name: "array" }
        | 72 61 79   
 0x1910 | 07          | function 7 local name section
 0x1911 | 02          | 2 count
 0x1912 | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x1916 | 01 05 61 72 | Naming { index: 1, name: "array" }
        | 72 61 79   
 0x191d | 08          | function 8 local name section
 0x191e | 01          | 1 count
 0x191f | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x1923 | 09          | function 9 local name section
 0x1924 | 0e          | 14 count
 0x1925 | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x1929 | 01 0a 64 69 | Naming { index: 1, name: "dictionary" }
        | 63 74 69 6f
        | 6e 61 72 79
 0x1935 | 02 03 6b 65 | Naming { index: 2, name: "key" }
        | 79         
 0x193a | 03 05 76 61 | Naming { index: 3, name: "value" }
        | 6c 75 65   
 0x1941 | 04 04 6b 65 | Naming { index: 4, name: "keys" }
        | 79 73      
 0x1947 | 05 06 76 61 | Naming { index: 5, name: "values" }
        | 6c 75 65 73
 0x194f | 06 05 63 6f | Naming { index: 6, name: "count" }
        | 75 6e 74   
 0x1956 | 07 08 63 61 | Naming { index: 7, name: "capacity" }
        | 70 61 63 69
        | 74 79      
 0x1960 | 08 07 6e 65 | Naming { index: 8, name: "newKeys" }
        | 77 4b 65 79
        | 73         
 0x1969 | 09 09 6e 65 | Naming { index: 9, name: "newValues" }
        | 77 56 61 6c
        | 75 65 73   
 0x1974 | 0a 0c 6e 65 | Naming { index: 10, name: "newKeysArray" }
        | 77 4b 65 79
        | 73 41 72 72
        | 61 79      
 0x1982 | 0b 0e 6e 65 | Naming { index: 11, name: "newValuesArray" }
        | 77 56 61 6c
        | 75 65 73 41
        | 72 72 61 79
 0x1992 | 0c 05 69 6e | Naming { index: 12, name: "index" }
        | 64 65 78   
 0x1999 | 0d 0b 65 78 | Naming { index: 13, name: "existingKey" }
        | 69 73 74 69
        | 6e 67 4b 65
        | 79         
 0x19a6 | 0a          | function 10 local name section
 0x19a7 | 07          | 7 count
 0x19a8 | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x19ac | 01 07 6f 62 | Naming { index: 1, name: "objects" }
        | 6a 65 63 74
        | 73         
 0x19b5 | 02 0e 70 72 | Naming { index: 2, name: "previousObject" }
        | 65 76 69 6f
        | 75 73 4f 62
        | 6a 65 63 74
 0x19c5 | 03 0a 6e 65 | Naming { index: 3, name: "nextObject" }
        | 78 74 4f 62
        | 6a 65 63 74
 0x19d1 | 04 05 6c 69 | Naming { index: 4, name: "limit" }
        | 6d 69 74   
 0x19d8 | 05 05 69 6e | Naming { index: 5, name: "index" }
        | 64 65 78   
 0x19df | 06 07 73 63 | Naming { index: 6, name: "scratch" }
        | 72 61 74 63
        | 68         
 0x19e8 | 0b          | function 11 local name section
 0x19e9 | 01          | 1 count
 0x19ea | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x19ee | 0c          | function 12 local name section
 0x19ef | 06          | 6 count
 0x19f0 | 00 05 61 72 | Naming { index: 0, name: "array" }
        | 72 61 79   
 0x19f7 | 01 07 65 6c | Naming { index: 1, name: "element" }
        | 65 6d 65 6e
        | 74         
 0x1a00 | 02 0e 6e 65 | Naming { index: 2, name: "newObjectArray" }
        | 77 4f 62 6a
        | 65 63 74 41
        | 72 72 61 79
 0x1a10 | 03 0e 6f 6c | Naming { index: 3, name: "oldObjectArray" }
        | 64 4f 62 6a
        | 65 63 74 41
        | 72 72 61 79
 0x1a20 | 04 05 69 6e | Naming { index: 4, name: "index" }
        | 64 65 78   
 0x1a27 | 05 05 6c 69 | Naming { index: 5, name: "limit" }
        | 6d 69 74   
 0x1a2e | 0d          | function 13 local name section
 0x1a2f | 05          | 5 count
 0x1a30 | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x1a34 | 01 0a 73 75 | Naming { index: 1, name: "superclass" }
        | 70 65 72 63
        | 6c 61 73 73
 0x1a40 | 02 04 6e 61 | Naming { index: 2, name: "name" }
        | 6d 65      
 0x1a46 | 03 05 63 6c | Naming { index: 3, name: "class" }
        | 61 73 73   
 0x1a4d | 04 09 6d 65 | Naming { index: 4, name: "metaclass" }
        | 74 61 63 6c
        | 61 73 73   
 0x1a58 | 0e          | function 14 local name section
 0x1a59 | 02          | 2 count
 0x1a5a | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x1a5e | 01 05 62 79 | Naming { index: 1, name: "bytes" }
        | 74 65 73   
 0x1a65 | 0f          | function 15 local name section
 0x1a66 | 05          | 5 count
 0x1a67 | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x1a6b | 01 05 61 72 | Naming { index: 1, name: "array" }
        | 72 61 79   
 0x1a72 | 02 08 66 75 | Naming { index: 2, name: "function" }
        | 6e 63 74 69
        | 6f 6e      
 0x1a7c | 03 05 69 6e | Naming { index: 3, name: "index" }
        | 64 65 78   
 0x1a83 | 04 05 6c 69 | Naming { index: 4, name: "limit" }
        | 6d 69 74   
 0x1a8a | 10          | function 16 local name section
 0x1a8b | 02          | 2 count
 0x1a8c | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x1a90 | 01 05 63 6c | Naming { index: 1, name: "class" }
        | 61 73 73   
 0x1a97 | 11          | function 17 local name section
 0x1a98 | 04          | 4 count
 0x1a99 | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x1a9d | 01 15 63 6c | Naming { index: 1, name: "classClassDescription" }
        | 61 73 73 43
        | 6c 61 73 73
        | 44 65 73 63
        | 72 69 70 74
        | 69 6f 6e   
 0x1ab4 | 02 0d 63 6c | Naming { index: 2, name: "classBehavior" }
        | 61 73 73 42
        | 65 68 61 76
        | 69 6f 72   
 0x1ac3 | 03 16 63 6c | Naming { index: 3, name: "classArrayedCollection" }
        | 61 73 73 41
        | 72 72 61 79
        | 65 64 43 6f
        | 6c 6c 65 63
        | 74 69 6f 6e
 0x1adb | 12          | function 18 local name section
 0x1adc | 01          | 1 count
 0x1add | 00 06 6d 65 | Naming { index: 0, name: "method" }
        | 74 68 6f 64
 0x1ae5 | 13          | function 19 local name section
 0x1ae6 | 01          | 1 count
 0x1ae7 | 00 06 6d 65 | Naming { index: 0, name: "method" }
        | 74 68 6f 64
 0x1aef | 14          | function 20 local name section
 0x1af0 | 02          | 2 count
 0x1af1 | 00 06 6d 65 | Naming { index: 0, name: "method" }
        | 74 68 6f 64
 0x1af9 | 01 05 69 6e | Naming { index: 1, name: "index" }
        | 64 65 78   
 0x1b00 | 15          | function 21 local name section
 0x1b01 | 02          | 2 count
 0x1b02 | 00 07 63 6f | Naming { index: 0, name: "context" }
        | 6e 74 65 78
        | 74         
 0x1b0b | 01 0c 70 75 | Naming { index: 1, name: "pushedObject" }
        | 73 68 65 64
        | 4f 62 6a 65
        | 63 74      
 0x1b19 | 16          | function 22 local name section
 0x1b1a | 01          | 1 count
 0x1b1b | 00 07 63 6f | Naming { index: 0, name: "context" }
        | 6e 74 65 78
        | 74         
 0x1b24 | 17          | function 23 local name section
 0x1b25 | 01          | 1 count
 0x1b26 | 00 07 63 6f | Naming { index: 0, name: "context" }
        | 6e 74 65 78
        | 74         
 0x1b2f | 18          | function 24 local name section
 0x1b30 | 01          | 1 count
 0x1b31 | 00 06 6d 65 | Naming { index: 0, name: "method" }
        | 74 68 6f 64
 0x1b39 | 19          | function 25 local name section
 0x1b3a | 02          | 2 count
 0x1b3b | 00 07 63 6f | Naming { index: 0, name: "context" }
        | 6e 74 65 78
        | 74         
 0x1b44 | 01 05 69 6e | Naming { index: 1, name: "index" }
        | 64 65 78   
 0x1b4b | 1a          | function 26 local name section
 0x1b4c | 01          | 1 count
 0x1b4d | 00 07 63 6f | Naming { index: 0, name: "context" }
        | 6e 74 65 78
        | 74         
 0x1b56 | 1b          | function 27 local name section
 0x1b57 | 03          | 3 count
 0x1b58 | 00 05 61 72 | Naming { index: 0, name: "array" }
        | 72 61 79   
 0x1b5f | 01 05 69 6e | Naming { index: 1, name: "index" }
        | 64 65 78   
 0x1b66 | 02 06 6c 65 | Naming { index: 2, name: "length" }
        | 6e 67 74 68
 0x1b6e | 1c          | function 28 local name section
 0x1b6f | 03          | 3 count
 0x1b70 | 00 05 61 72 | Naming { index: 0, name: "array" }
        | 72 61 79   
 0x1b77 | 01 05 69 6e | Naming { index: 1, name: "index" }
        | 64 65 78   
 0x1b7e | 02 0b 6f 62 | Naming { index: 2, name: "objectArray" }
        | 6a 65 63 74
        | 41 72 72 61
        | 79         
 0x1b8b | 1d          | function 29 local name section
 0x1b8c | 02          | 2 count
 0x1b8d | 00 05 61 72 | Naming { index: 0, name: "array" }
        | 72 61 79   
 0x1b94 | 01 05 69 6e | Naming { index: 1, name: "index" }
        | 64 65 78   
 0x1b9b | 1e          | function 30 local name section
 0x1b9c | 01          | 1 count
 0x1b9d | 00 05 61 72 | Naming { index: 0, name: "array" }
        | 72 61 79   
 0x1ba4 | 1f          | function 31 local name section
 0x1ba5 | 03          | 3 count
 0x1ba6 | 00 05 62 79 | Naming { index: 0, name: "bytes" }
        | 74 65 73   
 0x1bad | 01 06 6c 65 | Naming { index: 1, name: "length" }
        | 6e 67 74 68
 0x1bb5 | 02 05 69 6e | Naming { index: 2, name: "index" }
        | 64 65 78   
 0x1bbc | 20          | function 32 local name section
 0x1bbd | 01          | 1 count
 0x1bbe | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x1bc2 | 21          | function 33 local name section
 0x1bc3 | 04          | 4 count
 0x1bc4 | 00 07 63 6f | Naming { index: 0, name: "context" }
        | 6e 74 65 78
        | 74         
 0x1bcd | 01 05 76 61 | Naming { index: 1, name: "value" }
        | 6c 75 65   
 0x1bd4 | 02 05 73 74 | Naming { index: 2, name: "stack" }
        | 61 63 6b   
 0x1bdb | 03 02 73 70 | Naming { index: 3, name: "sp" }
 0x1bdf | 22          | function 34 local name section
 0x1be0 | 03          | 3 count
 0x1be1 | 00 07 63 6f | Naming { index: 0, name: "context" }
        | 6e 74 65 78
        | 74         
 0x1bea | 01 05 73 74 | Naming { index: 1, name: "stack" }
        | 61 63 6b   
 0x1bf1 | 02 02 73 70 | Naming { index: 2, name: "sp" }
 0x1bf5 | 23          | function 35 local name section
 0x1bf6 | 03          | 3 count
 0x1bf7 | 00 07 63 6f | Naming { index: 0, name: "context" }
        | 6e 74 65 78
        | 74         
 0x1c00 | 01 05 73 74 | Naming { index: 1, name: "stack" }
        | 61 63 6b   
 0x1c07 | 02 02 73 70 | Naming { index: 2, name: "sp" }
 0x1c0b | 24          | function 36 local name section
 0x1c0c | 02          | 2 count
 0x1c0d | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x1c11 | 01 03 6f 62 | Naming { index: 1, name: "obj" }
        | 6a         
 0x1c16 | 25          | function 37 local name section
 0x1c17 | 0b          | 11 count
 0x1c18 | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x1c1c | 01 08 72 65 | Naming { index: 1, name: "receiver" }
        | 63 65 69 76
        | 65 72      
 0x1c26 | 02 08 73 65 | Naming { index: 2, name: "selector" }
        | 6c 65 63 74
        | 6f 72      
 0x1c30 | 03 05 63 6c | Naming { index: 3, name: "class" }
        | 61 73 73   
 0x1c37 | 04 0c 63 75 | Naming { index: 4, name: "currentClass" }
        | 72 72 65 6e
        | 74 43 6c 61
        | 73 73      
 0x1c45 | 05 10 6d 65 | Naming { index: 5, name: "methodDictionary" }
        | 74 68 6f 64
        | 44 69 63 74
        | 69 6f 6e 61
        | 72 79      
 0x1c57 | 06 04 6b 65 | Naming { index: 6, name: "keys" }
        | 79 73      
 0x1c5d | 07 06 76 61 | Naming { index: 7, name: "values" }
        | 6c 75 65 73
 0x1c65 | 08 05 63 6f | Naming { index: 8, name: "count" }
        | 75 6e 74   
 0x1c6c | 09 05 69 6e | Naming { index: 9, name: "index" }
        | 64 65 78   
 0x1c73 | 0a 03 6b 65 | Naming { index: 10, name: "key" }
        | 79         
 0x1c78 | 26          | function 38 local name section
 0x1c79 | 09          | 9 count
 0x1c7a | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x1c7e | 01 08 73 65 | Naming { index: 1, name: "selector" }
        | 6c 65 63 74
        | 6f 72      
 0x1c88 | 02 0d 72 65 | Naming { index: 2, name: "receiverClass" }
        | 63 65 69 76
        | 65 72 43 6c
        | 61 73 73   
 0x1c97 | 03 05 63 61 | Naming { index: 3, name: "cache" }
        | 63 68 65   
 0x1c9e | 04 09 63 61 | Naming { index: 4, name: "cacheSize" }
        | 63 68 65 53
        | 69 7a 65   
 0x1ca9 | 05 04 68 61 | Naming { index: 5, name: "hash" }
        | 73 68      
 0x1caf | 06 05 69 6e | Naming { index: 6, name: "index" }
        | 64 65 78   
 0x1cb6 | 07 05 65 6e | Naming { index: 7, name: "entry" }
        | 74 72 79   
 0x1cbd | 08 0a 70 72 | Naming { index: 8, name: "probeLimit" }
        | 6f 62 65 4c
        | 69 6d 69 74
 0x1cc9 | 27          | function 39 local name section
 0x1cca | 07          | 7 count
 0x1ccb | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x1ccf | 01 08 73 65 | Naming { index: 1, name: "selector" }
        | 6c 65 63 74
        | 6f 72      
 0x1cd9 | 02 0d 72 65 | Naming { index: 2, name: "receiverClass" }
        | 63 65 69 76
        | 65 72 43 6c
        | 61 73 73   
 0x1ce8 | 03 06 6d 65 | Naming { index: 3, name: "method" }
        | 74 68 6f 64
 0x1cf0 | 04 05 63 61 | Naming { index: 4, name: "cache" }
        | 63 68 65   
 0x1cf7 | 05 05 69 6e | Naming { index: 5, name: "index" }
        | 64 65 78   
 0x1cfe | 06 05 65 6e | Naming { index: 6, name: "entry" }
        | 74 72 79   
 0x1d05 | 28          | function 40 local name section
 0x1d06 | 04          | 4 count
 0x1d07 | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x1d0b | 01 08 72 65 | Naming { index: 1, name: "receiver" }
        | 63 65 69 76
        | 65 72      
 0x1d15 | 02 06 6d 65 | Naming { index: 2, name: "method" }
        | 74 68 6f 64
 0x1d1d | 03 08 73 65 | Naming { index: 3, name: "selector" }
        | 6c 65 63 74
        | 6f 72      
 0x1d27 | 29          | function 41 local name section
 0x1d28 | 01          | 1 count
 0x1d29 | 00 05 76 61 | Naming { index: 0, name: "value" }
        | 6c 75 65   
 0x1d30 | 2a          | function 42 local name section
 0x1d31 | 01          | 1 count
 0x1d32 | 00 03 6f 62 | Naming { index: 0, name: "obj" }
        | 6a         
 0x1d37 | 2b          | function 43 local name section
 0x1d38 | 01          | 1 count
 0x1d39 | 00 03 6f 62 | Naming { index: 0, name: "obj" }
        | 6a         
 0x1d3e | 2c          | function 44 local name section
 0x1d3f | 01          | 1 count
 0x1d40 | 00 06 6d 65 | Naming { index: 0, name: "method" }
        | 74 68 6f 64
 0x1d48 | 2d          | function 45 local name section
 0x1d49 | 02          | 2 count
 0x1d4a | 00 07 63 6f | Naming { index: 0, name: "context" }
        | 6e 74 65 78
        | 74         
 0x1d53 | 01 0d 66 75 | Naming { index: 1, name: "functionIndex" }
        | 6e 63 74 69
        | 6f 6e 49 6e
        | 64 65 78   
 0x1d62 | 2e          | function 46 local name section
 0x1d63 | 04          | 4 count
 0x1d64 | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x1d68 | 01 07 63 6f | Naming { index: 1, name: "context" }
        | 6e 74 65 78
        | 74         
 0x1d71 | 02 06 73 65 | Naming { index: 2, name: "sender" }
        | 6e 64 65 72
 0x1d79 | 03 06 72 65 | Naming { index: 3, name: "result" }
        | 73 75 6c 74
 0x1d81 | 2f          | function 47 local name section
 0x1d82 | 04          | 4 count
 0x1d83 | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x1d87 | 01 0f 62 65 | Naming { index: 1, name: "benchmarkMethod" }
        | 6e 63 68 6d
        | 61 72 6b 4d
        | 65 74 68 6f
        | 64         
 0x1d98 | 02 10 6d 65 | Naming { index: 2, name: "methodDictionary" }
        | 74 68 6f 64
        | 44 69 63 74
        | 69 6f 6e 61
        | 72 79      
 0x1daa | 03 11 62 65 | Naming { index: 3, name: "benchmarkLiterals" }
        | 6e 63 68 6d
        | 61 72 6b 4c
        | 69 74 65 72
        | 61 6c 73   
 0x1dbd | 30          | function 48 local name section
 0x1dbe | 01          | 1 count
 0x1dbf | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x1dc3 | 31          | function 49 local name section
 0x1dc4 | 0f          | 15 count
 0x1dc5 | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x1dc9 | 01 07 63 6f | Naming { index: 1, name: "context" }
        | 6e 74 65 78
        | 74         
 0x1dd2 | 02 08 62 79 | Naming { index: 2, name: "bytecode" }
        | 74 65 63 6f
        | 64 65      
 0x1ddc | 03 08 72 65 | Naming { index: 3, name: "receiver" }
        | 63 65 69 76
        | 65 72      
 0x1de6 | 04 06 76 61 | Naming { index: 4, name: "value1" }
        | 6c 75 65 31
 0x1dee | 05 06 76 61 | Naming { index: 5, name: "value2" }
        | 6c 75 65 32
 0x1df6 | 06 04 69 6e | Naming { index: 6, name: "int1" }
        | 74 31      
 0x1dfc | 07 04 69 6e | Naming { index: 7, name: "int2" }
        | 74 32      
 0x1e02 | 08 06 72 65 | Naming { index: 8, name: "result" }
        | 73 75 6c 74
 0x1e0a | 09 0a 6e 65 | Naming { index: 9, name: "newContext" }
        | 77 43 6f 6e
        | 74 65 78 74
 0x1e16 | 0a 08 73 65 | Naming { index: 10, name: "selector" }
        | 6c 65 63 74
        | 6f 72      
 0x1e20 | 0b 06 6d 65 | Naming { index: 11, name: "method" }
        | 74 68 6f 64
 0x1e28 | 0c 0d 72 65 | Naming { index: 12, name: "receiverClass" }
        | 63 65 69 76
        | 65 72 43 6c
        | 61 73 73   
 0x1e37 | 0d 05 69 6e | Naming { index: 13, name: "index" }
        | 64 65 78   
 0x1e3e | 0e 08 6c 69 | Naming { index: 14, name: "literals" }
        | 74 65 72 61
        | 6c 73      
 0x1e48 | 32          | function 50 local name section
 0x1e49 | 0a          | 10 count
 0x1e4a | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x1e4e | 01 07 63 6f | Naming { index: 1, name: "context" }
        | 6e 74 65 78
        | 74         
 0x1e57 | 02 06 6d 65 | Naming { index: 2, name: "method" }
        | 74 68 6f 64
 0x1e5f | 03 08 62 79 | Naming { index: 3, name: "bytecode" }
        | 74 65 63 6f
        | 64 65      
 0x1e69 | 04 02 70 63 | Naming { index: 4, name: "pc" }
 0x1e6d | 05 08 72 65 | Naming { index: 5, name: "receiver" }
        | 63 65 69 76
        | 65 72      
 0x1e77 | 06 0b 72 65 | Naming { index: 6, name: "resultValue" }
        | 73 75 6c 74
        | 56 61 6c 75
        | 65         
 0x1e84 | 07 0f 69 6e | Naming { index: 7, name: "invocationCount" }
        | 76 6f 63 61
        | 74 69 6f 6e
        | 43 6f 75 6e
        | 74         
 0x1e95 | 08 09 62 79 | Naming { index: 8, name: "bytecodes" }
        | 74 65 63 6f
        | 64 65 73   
 0x1ea0 | 09 0d 66 75 | Naming { index: 9, name: "functionIndex" }
        | 6e 63 74 69
        | 6f 6e 49 6e
        | 64 65 78   
 0x1eaf | 03 bc 01    | label section
 0x1eb2 | 09          | 9 count
 0x1eb3 | 03          | function 3 label name section
 0x1eb4 | 01          | 1 count
 0x1eb5 | 03 04 6c 6f | Naming { index: 3, name: "loop" }
        | 6f 70      
 0x1ebb | 09          | function 9 label name section
 0x1ebc | 04          | 4 count
 0x1ebd | 01 0c 64 6f | Naming { index: 1, name: "done_copying" }
        | 6e 65 5f 63
        | 6f 70 79 69
        | 6e 67      
 0x1ecb | 02 09 63 6f | Naming { index: 2, name: "copy_loop" }
        | 70 79 5f 6c
        | 6f 6f 70   
 0x1ed6 | 04 0a 63 68 | Naming { index: 4, name: "check_done" }
        | 65 63 6b 5f
        | 64 6f 6e 65
 0x1ee2 | 05 0a 63 68 | Naming { index: 5, name: "check_loop" }
        | 65 63 6b 5f
        | 6c 6f 6f 70
 0x1eee | 0a          | function 10 label name section
 0x1eef | 01          | 1 count
 0x1ef0 | 00 04 6c 69 | Naming { index: 0, name: "link" }
        | 6e 6b      
 0x1ef6 | 0c          | function 12 label name section
 0x1ef7 | 01          | 1 count
 0x1ef8 | 00 04 6c 6f | Naming { index: 0, name: "loop" }
        | 6f 70      
 0x1efe | 0f          | function 15 label name section
 0x1eff | 01          | 1 count
 0x1f00 | 00 09 65 6e | Naming { index: 0, name: "enumerate" }
        | 75 6d 65 72
        | 61 74 65   
 0x1f0b | 1f          | function 31 label name section
 0x1f0c | 01          | 1 count
 0x1f0d | 00 04 63 6f | Naming { index: 0, name: "copy" }
        | 70 79      
 0x1f13 | 25          | function 37 label name section
 0x1f14 | 02          | 2 count
 0x1f15 | 00 0e 68 69 | Naming { index: 0, name: "hierarchy_loop" }
        | 65 72 61 72
        | 63 68 79 5f
        | 6c 6f 6f 70
 0x1f25 | 02 0b 73 65 | Naming { index: 2, name: "search_loop" }
        | 61 72 63 68
        | 5f 6c 6f 6f
        | 70         
 0x1f32 | 26          | function 38 label name section
 0x1f33 | 01          | 1 count
 0x1f34 | 01 0a 70 72 | Naming { index: 1, name: "probe_loop" }
        | 6f 62 65 5f
        | 6c 6f 6f 70
 0x1f40 | 32          | function 50 label name section
 0x1f41 | 03          | 3 count
 0x1f42 | 00 08 66 69 | Naming { index: 0, name: "finished" }
        | 6e 69 73 68
        | 65 64      
 0x1f4c | 01 0e 65 78 | Naming { index: 1, name: "execution_loop" }
        | 65 63 75 74
        | 69 6f 6e 5f
        | 6c 6f 6f 70
 0x1f5c | 09 10 69 6e | Naming { index: 9, name: "interpreter_loop" }
        | 74 65 72 70
        | 72 65 74 65
        | 72 5f 6c 6f
        | 6f 70      
 0x1f6e | 04 ac 02    | type name section
 0x1f71 | 17          | 23 count
 0x1f72 | 00 0b 6f 62 | Naming { index: 0, name: "objectArray" }
        | 6a 65 63 74
        | 41 72 72 61
        | 79         
 0x1f7f | 01 09 62 79 | Naming { index: 1, name: "byteArray" }
        | 74 65 41 72
        | 72 61 79   
 0x1f8a | 02 09 77 6f | Naming { index: 2, name: "wordArray" }
        | 72 64 41 72
        | 72 61 79   
 0x1f95 | 03 06 4f 62 | Naming { index: 3, name: "Object" }
        | 6a 65 63 74
 0x1f9d | 04 0f 55 6e | Naming { index: 4, name: "UndefinedObject" }
        | 64 65 66 69
        | 6e 65 64 4f
        | 62 6a 65 63
        | 74         
 0x1fae | 05 05 41 72 | Naming { index: 5, name: "Array" }
        | 72 61 79   
 0x1fb5 | 06 09 42 79 | Naming { index: 6, name: "ByteArray" }
        | 74 65 41 72
        | 72 61 79   
 0x1fc0 | 07 09 57 6f | Naming { index: 7, name: "WordArray" }
        | 72 64 41 72
        | 72 61 79   
 0x1fcb | 08 0e 56 61 | Naming { index: 8, name: "VariableObject" }
        | 72 69 61 62
        | 6c 65 4f 62
        | 6a 65 63 74
 0x1fdb | 09 06 53 79 | Naming { index: 9, name: "Symbol" }
        | 6d 62 6f 6c
 0x1fe3 | 0a 0a 44 69 | Naming { index: 10, name: "Dictionary" }
        | 63 74 69 6f
        | 6e 61 72 79
 0x1fef | 0b 08 42 65 | Naming { index: 11, name: "Behavior" }
        | 68 61 76 69
        | 6f 72      
 0x1ff9 | 0c 10 43 6c | Naming { index: 12, name: "ClassDescription" }
        | 61 73 73 44
        | 65 73 63 72
        | 69 70 74 69
        | 6f 6e      
 0x200b | 0d 05 43 6c | Naming { index: 13, name: "Class" }
        | 61 73 73   
 0x2012 | 0e 09 4d 65 | Naming { index: 14, name: "Metaclass" }
        | 74 61 63 6c
        | 61 73 73   
 0x201d | 0f 0e 43 6f | Naming { index: 15, name: "CompiledMethod" }
        | 6d 70 69 6c
        | 65 64 4d 65
        | 74 68 6f 64
 0x202d | 10 07 43 6f | Naming { index: 16, name: "Context" }
        | 6e 74 65 78
        | 74         
 0x2036 | 11 08 50 49 | Naming { index: 17, name: "PICEntry" }
        | 43 45 6e 74
        | 72 79      
 0x2040 | 12 0e 56 69 | Naming { index: 18, name: "VirtualMachine" }
        | 72 74 75 61
        | 6c 4d 61 63
        | 68 69 6e 65
 0x2050 | 13 0a 65 6e | Naming { index: 19, name: "enumerator" }
        | 75 6d 65 72
        | 61 74 6f 72
 0x205c | 14 18 6d 65 | Naming { index: 20, name: "messageNotUnderstoodType" }
        | 73 73 61 67
        | 65 4e 6f 74
        | 55 6e 64 65
        | 72 73 74 6f
        | 6f 64 54 79
        | 70 65      
 0x2076 | 15 0e 65 6d | Naming { index: 21, name: "emptyStackType" }
        | 70 74 79 53
        | 74 61 63 6b
        | 54 79 70 65
 0x2086 | 16 15 76 61 | Naming { index: 22, name: "valuesLeftOnStackType" }
        | 6c 75 65 73
        | 4c 65 66 74
        | 4f 6e 53 74
        | 61 63 6b 54
        | 79 70 65   
 0x209d | 05 10       | table name section
 0x209f | 01          | 1 count
 0x20a0 | 00 0d 66 75 | Naming { index: 0, name: "functionTable" }
        | 6e 63 74 69
        | 6f 6e 54 61
        | 62 6c 65   
 0x20af | 06 04       | memory name section
 0x20b1 | 01          | 1 count
 0x20b2 | 00 01 30    | Naming { index: 0, name: "0" }
 0x20b5 | 07 2a       | global name section
 0x20b7 | 02          | 2 count
 0x20b8 | 00 11 62 65 | Naming { index: 0, name: "benchmarkSelector" }
        | 6e 63 68 6d
        | 61 72 6b 53
        | 65 6c 65 63
        | 74 6f 72   
 0x20cb | 01 14 62 79 | Naming { index: 1, name: "byteArrayCopyPointer" }
        | 74 65 41 72
        | 72 61 79 43
        | 6f 70 79 50
        | 6f 69 6e 74
        | 65 72      
 0x20e1 | 0b 36       | tag name section
 0x20e3 | 03          | 3 count
 0x20e4 | 00 14 6d 65 | Naming { index: 0, name: "messageNotUnderstood" }
        | 73 73 61 67
        | 65 4e 6f 74
        | 55 6e 64 65
        | 72 73 74 6f
        | 6f 64      
 0x20fa | 01 0a 65 6d | Naming { index: 1, name: "emptyStack" }
        | 70 74 79 53
        | 74 61 63 6b
 0x2106 | 02 11 76 61 | Naming { index: 2, name: "valuesLeftOnStack" }
        | 6c 75 65 73
        | 4c 65 66 74
        | 4f 6e 53 74
        | 61 63 6b   

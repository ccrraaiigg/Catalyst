    0x0 | 00 61 73 6d | version 1 (Module)
        | 01 00 00 00
    0x8 | 01 d9 04    | type section
    0xb | 28          | 40 count
--- rec group 0 (explicit) ---
    0xc | 4e 12       | 
    0xe | 5e 6d 01    | [type 0] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Array(ArrayType(FieldType { element_type: Val(Ref(eqref)), mutable: true })), shared: false } }
   0x11 | 5e 78 01    | [type 1] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Array(ArrayType(FieldType { element_type: I8, mutable: true })), shared: false } }
   0x14 | 5e 7f 01    | [type 2] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Array(ArrayType(FieldType { element_type: Val(I32), mutable: true })), shared: false } }
   0x17 | 50 00 5f 03 | [type 3] SubType { is_final: false, supertype_idx: None, composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }] }), shared: false } }
        | 6d 01 7f 01
        | 6d 01      
   0x21 | 50 01 03 5f | [type 4] SubType { is_final: false, supertype_idx: Some(CoreTypeIndex { kind: "module", index: 3 }), composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref((ref (module 0)))), mutable: false }] }), shared: false } }
        | 04 6d 01 7f
        | 01 6d 01 64
        | 00 00      
   0x2f | 50 01 03 5f | [type 5] SubType { is_final: false, supertype_idx: Some(CoreTypeIndex { kind: "module", index: 3 }), composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref((ref (module 1)))), mutable: false }] }), shared: false } }
        | 04 6d 01 7f
        | 01 6d 01 64
        | 01 00      
   0x3d | 50 01 03 5f | [type 6] SubType { is_final: false, supertype_idx: Some(CoreTypeIndex { kind: "module", index: 3 }), composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref((ref (module 2)))), mutable: false }] }), shared: false } }
        | 04 6d 01 7f
        | 01 6d 01 64
        | 02 00      
   0x4b | 50 01 03 5f | [type 7] SubType { is_final: false, supertype_idx: Some(CoreTypeIndex { kind: "module", index: 3 }), composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref((ref eq))), mutable: true }] }), shared: false } }
        | 04 6d 01 7f
        | 01 6d 01 64
        | 6d 01      
   0x59 | 50 01 07 5f | [type 8] SubType { is_final: false, supertype_idx: Some(CoreTypeIndex { kind: "module", index: 7 }), composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref((ref eq))), mutable: true }] }), shared: false } }
        | 04 6d 01 7f
        | 01 6d 01 64
        | 6d 01      
   0x67 | 50 01 03 5f | [type 9] SubType { is_final: false, supertype_idx: Some(CoreTypeIndex { kind: "module", index: 3 }), composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 4)))), mutable: false }, FieldType { element_type: Val(Ref((ref null (module 4)))), mutable: false }, FieldType { element_type: Val(I32), mutable: true }] }), shared: false } }
        | 06 6d 01 7f
        | 01 6d 01 63
        | 04 00 63 04
        | 00 7f 01   
   0x7a | 50 01 03 5f | [type 10] SubType { is_final: false, supertype_idx: Some(CoreTypeIndex { kind: "module", index: 3 }), composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref((ref (module 9)))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }] }), shared: false } }
        | 06 6d 01 7f
        | 01 6d 01 6d
        | 01 64 09 01
        | 7f 01      
   0x8c | 50 01 0a 5f | [type 11] SubType { is_final: false, supertype_idx: Some(CoreTypeIndex { kind: "module", index: 10 }), composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref((ref (module 9)))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref((ref (module 4)))), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 5)))), mutable: true }] }), shared: false } }
        | 08 6d 01 7f
        | 01 6d 01 6d
        | 01 64 09 01
        | 7f 01 64 04
        | 01 63 05 01
   0xa4 | 50 01 0b 5f | [type 12] SubType { is_final: false, supertype_idx: Some(CoreTypeIndex { kind: "module", index: 11 }), composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref((ref (module 9)))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref((ref (module 4)))), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 5)))), mutable: true }, FieldType { element_type: Val(Ref((ref (module 4)))), mutable: true }, FieldType { element_type: Val(Ref((ref (module 8)))), mutable: true }, FieldType { element_type: Val(Ref((ref (module 9)))), mutable: true }, FieldType { element_type: Val(Ref((ref (module 4)))), mutable: true }] }), shared: false } }
        | 0c 6d 01 7f
        | 01 6d 01 6d
        | 01 64 09 01
        | 7f 01 64 04
        | 01 63 05 01
        | 64 04 01 64
        | 08 01 64 09
        | 01 64 04 01
   0xc8 | 50 01 0b 5f | [type 13] SubType { is_final: false, supertype_idx: Some(CoreTypeIndex { kind: "module", index: 11 }), composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref((ref (module 9)))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref((ref (module 4)))), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 5)))), mutable: true }, FieldType { element_type: Val(Ref((ref (module 12)))), mutable: true }] }), shared: false } }
        | 09 6d 01 7f
        | 01 6d 01 6d
        | 01 64 09 01
        | 7f 01 64 04
        | 01 63 05 01
        | 64 0c 01   
   0xe3 | 50 01 07 5f | [type 14] SubType { is_final: false, supertype_idx: Some(CoreTypeIndex { kind: "module", index: 7 }), composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref((ref eq))), mutable: true }, FieldType { element_type: Val(Ref((ref (module 4)))), mutable: false }, FieldType { element_type: Val(I32), mutable: false }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(I32), mutable: false }, FieldType { element_type: Val(I32), mutable: true }] }), shared: false } }
        | 0a 6d 01 7f
        | 01 6d 01 64
        | 6d 01 64 04
        | 00 7f 00 7f
        | 01 7f 01 7f
        | 00 7f 01   
   0xfe | 50 01 03 5f | [type 15] SubType { is_final: false, supertype_idx: Some(CoreTypeIndex { kind: "module", index: 3 }), composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 15)))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 14)))), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref((ref (module 4)))), mutable: true }, FieldType { element_type: Val(Ref((ref (module 4)))), mutable: true }, FieldType { element_type: Val(Ref((ref (module 4)))), mutable: true }] }), shared: false } }
        | 0b 6d 01 7f
        | 01 6d 01 63
        | 0f 01 7f 01
        | 7f 01 63 0e
        | 01 6d 01 64
        | 04 01 64 04
        | 01 64 04 01
  0x11e | 5f 04 6d 01 | [type 16] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref((ref eq))), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 14)))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }] }), shared: false } }
        | 64 6d 01 63
        | 0e 01 7f 01
  0x12a | 5f 0e 63 0f | [type 17] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Struct(StructType { fields: [FieldType { element_type: Val(Ref((ref null (module 15)))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 0)))), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(I32), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref(eqref)), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 12)))), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 12)))), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 12)))), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 12)))), mutable: true }, FieldType { element_type: Val(Ref((ref null (module 12)))), mutable: true }] }), shared: false } }
        | 01 7f 01 63
        | 00 01 7f 01
        | 7f 01 7f 01
        | 7f 01 6d 01
        | 6d 01 63 0c
        | 01 63 0c 01
        | 63 0c 01 63
        | 0c 01 63 0c
        | 01         
--- rec group 1 (implicit) ---
  0x14f | 60 01 7f 00 | [type 18] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [I32], results: [] }), shared: false } }
--- rec group 2 (implicit) ---
  0x153 | 60 02 6d 7f | [type 19] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref(eqref), I32], results: [] }), shared: false } }
        | 00         
--- rec group 3 (implicit) ---
  0x158 | 60 03 7f 7f | [type 20] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [I32, I32, I32], results: [] }), shared: false } }
        | 7f 00      
--- rec group 4 (implicit) ---
  0x15e | 60 02 64 11 | [type 21] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 17))), Ref((ref (module 0)))], results: [Ref((ref (module 4)))] }), shared: false } }
        | 64 00 01 64
        | 04         
--- rec group 5 (implicit) ---
  0x167 | 60 02 64 11 | [type 22] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 17))), Ref((ref (module 1)))], results: [Ref((ref (module 5)))] }), shared: false } }
        | 64 01 01 64
        | 05         
--- rec group 6 (implicit) ---
  0x170 | 60 02 64 11 | [type 23] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 17))), Ref((ref (module 2)))], results: [Ref((ref (module 6)))] }), shared: false } }
        | 64 02 01 64
        | 06         
--- rec group 7 (implicit) ---
  0x179 | 60 01 64 11 | [type 24] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 17)))], results: [Ref((ref (module 9)))] }), shared: false } }
        | 01 64 09   
--- rec group 8 (implicit) ---
  0x180 | 60 02 64 11 | [type 25] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 17))), Ref((ref (module 0)))], results: [] }), shared: false } }
        | 64 00 00   
--- rec group 9 (implicit) ---
  0x187 | 60 02 64 11 | [type 26] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 17))), Ref((ref (module 12)))], results: [] }), shared: false } }
        | 64 0c 00   
--- rec group 10 (implicit) ---
  0x18e | 60 02 64 11 | [type 27] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 17))), Ref((ref (module 13)))], results: [] }), shared: false } }
        | 64 0d 00   
--- rec group 11 (implicit) ---
  0x195 | 60 01 64 11 | [type 28] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 17)))], results: [Ref((ref (module 4)))] }), shared: false } }
        | 01 64 04   
--- rec group 12 (implicit) ---
  0x19c | 60 03 64 11 | [type 29] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 17))), I32, Ref((ref (module 8)))], results: [Ref((ref (module 12)))] }), shared: false } }
        | 7f 64 08 01
        | 64 0c      
--- rec group 13 (implicit) ---
  0x1a6 | 60 02 64 11 | [type 30] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 17))), Ref((ref (module 12)))], results: [Ref((ref eq))] }), shared: false } }
        | 64 0c 01 64
        | 6d         
--- rec group 14 (implicit) ---
  0x1af | 60 02 64 11 | [type 31] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 17))), Ref((ref (module 1)))], results: [Ref((ref (module 8)))] }), shared: false } }
        | 64 01 01 64
        | 08         
--- rec group 15 (implicit) ---
  0x1b8 | 60 00 01 64 | [type 32] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [], results: [Ref((ref (module 17)))] }), shared: false } }
        | 11         
--- rec group 16 (implicit) ---
  0x1bd | 60 01 6d 01 | [type 33] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref(eqref)], results: [Ref((ref eq))] }), shared: false } }
        | 64 6d      
--- rec group 17 (implicit) ---
  0x1c3 | 60 02 6d 6d | [type 34] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref(eqref), Ref(eqref)], results: [] }), shared: false } }
        | 00         
--- rec group 18 (implicit) ---
  0x1c8 | 60 01 6d 01 | [type 35] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref(eqref)], results: [Ref(eqref)] }), shared: false } }
        | 6d         
--- rec group 19 (implicit) ---
  0x1cd | 60 01 64 6c | [type 36] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref i31))], results: [I32] }), shared: false } }
        | 01 7f      
--- rec group 20 (implicit) ---
  0x1d3 | 60 01 7f 01 | [type 37] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [I32], results: [Ref((ref i31))] }), shared: false } }
        | 64 6c      
--- rec group 21 (implicit) ---
  0x1d9 | 60 02 6d 7f | [type 38] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref(eqref), I32], results: [Ref(eqref)] }), shared: false } }
        | 01 6d      
--- rec group 22 (implicit) ---
  0x1df | 60 02 6d 7f | [type 39] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref(eqref), I32], results: [I32] }), shared: false } }
        | 01 7f      
--- rec group 23 (implicit) ---
  0x1e5 | 60 02 64 00 | [type 40] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 0))), I32], results: [Ref(eqref)] }), shared: false } }
        | 7f 01 6d   
--- rec group 24 (implicit) ---
  0x1ec | 60 02 64 01 | [type 41] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 1))), I32], results: [I32] }), shared: false } }
        | 7f 01 7f   
--- rec group 25 (implicit) ---
  0x1f3 | 60 01 6d 01 | [type 42] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref(eqref)], results: [I32] }), shared: false } }
        | 7f         
--- rec group 26 (implicit) ---
  0x1f8 | 60 01 64 01 | [type 43] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 1)))], results: [I32] }), shared: false } }
        | 01 7f      
--- rec group 27 (implicit) ---
  0x1fe | 60 01 64 11 | [type 44] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 17)))], results: [I32] }), shared: false } }
        | 01 7f      
--- rec group 28 (implicit) ---
  0x204 | 60 02 64 0f | [type 45] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 15))), Ref(eqref)], results: [] }), shared: false } }
        | 6d 00      
--- rec group 29 (implicit) ---
  0x20a | 60 01 63 0f | [type 46] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref null (module 15)))], results: [Ref(eqref)] }), shared: false } }
        | 01 6d      
--- rec group 30 (implicit) ---
  0x210 | 60 02 64 11 | [type 47] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 17))), Ref(eqref)], results: [Ref(eqref)] }), shared: false } }
        | 6d 01 6d   
--- rec group 31 (implicit) ---
  0x217 | 60 03 64 11 | [type 48] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 17))), Ref(eqref), Ref(eqref)], results: [Ref((ref null (module 14)))] }), shared: false } }
        | 6d 6d 01 63
        | 0e         
--- rec group 32 (implicit) ---
  0x220 | 60 03 64 11 | [type 49] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 17))), Ref(eqref), Ref((ref (module 12)))], results: [Ref((ref null (module 14)))] }), shared: false } }
        | 6d 64 0c 01
        | 63 0e      
--- rec group 33 (implicit) ---
  0x22a | 60 04 64 11 | [type 50] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 17))), Ref((ref (module 8))), Ref((ref eq)), Ref((ref null (module 14)))], results: [] }), shared: false } }
        | 64 08 64 6d
        | 63 0e 00   
--- rec group 34 (implicit) ---
  0x235 | 60 04 64 11 | [type 51] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 17))), Ref(eqref), Ref((ref null (module 14))), Ref(eqref)], results: [Ref((ref (module 15)))] }), shared: false } }
        | 6d 63 0e 6d
        | 01 64 0f   
--- rec group 35 (implicit) ---
  0x240 | 60 01 63 0e | [type 52] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref null (module 14)))], results: [I32] }), shared: false } }
        | 01 7f      
--- rec group 36 (implicit) ---
  0x246 | 60 02 63 0f | [type 53] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref null (module 15))), I32], results: [I32] }), shared: false } }
        | 7f 01 7f   
--- rec group 37 (implicit) ---
  0x24d | 60 02 63 0e | [type 54] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref null (module 14))), I32], results: [] }), shared: false } }
        | 7f 00      
--- rec group 38 (implicit) ---
  0x253 | 60 02 64 11 | [type 55] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 17))), Ref((ref null (module 15)))], results: [Ref(eqref)] }), shared: false } }
        | 63 0f 01 6d
--- rec group 39 (implicit) ---
  0x25b | 60 03 64 11 | [type 56] SubType { is_final: true, supertype_idx: None, composite_type: CompositeType { inner: Func(FuncType { params: [Ref((ref (module 17))), Ref((ref (module 15))), I32], results: [I32] }), shared: false } }
        | 64 0f 7f 01
        | 7f         
  0x264 | 02 39       | import section
  0x266 | 03          | 3 count
  0x267 | 03 65 6e 76 | import [func 0] Import { module: "env", name: "reportResult", ty: Func(18) }
        | 0c 72 65 70
        | 6f 72 74 52
        | 65 73 75 6c
        | 74 00 12   
  0x27a | 03 65 6e 76 | import [func 1] Import { module: "env", name: "translateMethod", ty: Func(19) }
        | 0f 74 72 61
        | 6e 73 6c 61
        | 74 65 4d 65
        | 74 68 6f 64
        | 00 13      
  0x290 | 03 65 6e 76 | import [func 2] Import { module: "env", name: "debugLog", ty: Func(20) }
        | 08 64 65 62
        | 75 67 4c 6f
        | 67 00 14   
  0x29f | 03 2f       | func section
  0x2a1 | 2e          | 46 count
  0x2a2 | 15          | [func 3] type 21
  0x2a3 | 16          | [func 4] type 22
  0x2a4 | 17          | [func 5] type 23
  0x2a5 | 18          | [func 6] type 24
  0x2a6 | 19          | [func 7] type 25
  0x2a7 | 1a          | [func 8] type 26
  0x2a8 | 1b          | [func 9] type 27
  0x2a9 | 1c          | [func 10] type 28
  0x2aa | 1d          | [func 11] type 29
  0x2ab | 1e          | [func 12] type 30
  0x2ac | 1f          | [func 13] type 31
  0x2ad | 20          | [func 14] type 32
  0x2ae | 21          | [func 15] type 33
  0x2af | 13          | [func 16] type 19
  0x2b0 | 22          | [func 17] type 34
  0x2b1 | 23          | [func 18] type 35
  0x2b2 | 24          | [func 19] type 36
  0x2b3 | 25          | [func 20] type 37
  0x2b4 | 23          | [func 21] type 35
  0x2b5 | 23          | [func 22] type 35
  0x2b6 | 23          | [func 23] type 35
  0x2b7 | 26          | [func 24] type 38
  0x2b8 | 23          | [func 25] type 35
  0x2b9 | 27          | [func 26] type 39
  0x2ba | 28          | [func 27] type 40
  0x2bb | 29          | [func 28] type 41
  0x2bc | 2a          | [func 29] type 42
  0x2bd | 2b          | [func 30] type 43
  0x2be | 2c          | [func 31] type 44
  0x2bf | 2d          | [func 32] type 45
  0x2c0 | 2e          | [func 33] type 46
  0x2c1 | 2e          | [func 34] type 46
  0x2c2 | 2f          | [func 35] type 47
  0x2c3 | 30          | [func 36] type 48
  0x2c4 | 31          | [func 37] type 49
  0x2c5 | 32          | [func 38] type 50
  0x2c6 | 33          | [func 39] type 51
  0x2c7 | 25          | [func 40] type 37
  0x2c8 | 2a          | [func 41] type 42
  0x2c9 | 34          | [func 42] type 52
  0x2ca | 35          | [func 43] type 53
  0x2cb | 36          | [func 44] type 54
  0x2cc | 37          | [func 45] type 55
  0x2cd | 2c          | [func 46] type 44
  0x2ce | 38          | [func 47] type 56
  0x2cf | 2c          | [func 48] type 44
  0x2d0 | 04 04       | table section
  0x2d2 | 01          | 1 count
  0x2d3 | 70 00 64    | [table 0] Table { ty: TableType { element_type: funcref, table64: false, initial: 100, maximum: None, shared: false }, init: RefNull }
  0x2d6 | 05 03       | memory section
  0x2d8 | 01          | 1 count
  0x2d9 | 00 01       | [memory 0] MemoryType { memory64: false, shared: false, initial: 1, maximum: None, page_size_log2: None }
  0x2db | 06 0c       | global section
  0x2dd | 02          | 2 count
  0x2de | 6d 01       | [global 0] GlobalType { content_type: Ref(eqref), mutable: true, shared: false }
  0x2e0 | d0 6d       | ref_null hty:Abstract { shared: false, ty: Eq }
  0x2e2 | 0b          | end
  0x2e3 | 7f 01       | [global 1] GlobalType { content_type: I32, mutable: true, shared: false }
  0x2e5 | 41 80 08    | i32_const value:1024
  0x2e8 | 0b          | end
  0x2e9 | 07 d2 02    | export section
  0x2ec | 13          | 19 count
  0x2ed | 05 62 79 74 | export Export { name: "bytes", kind: Memory, index: 0 }
        | 65 73 02 00
  0x2f5 | 0d 66 75 6e | export Export { name: "functionTable", kind: Table, index: 0 }
        | 63 74 69 6f
        | 6e 54 61 62
        | 6c 65 01 00
  0x305 | 0a 69 6e 69 | export Export { name: "initialize", kind: Func, index: 14 }
        | 74 69 61 6c
        | 69 7a 65 00
        | 0e         
  0x312 | 0f 6d 65 74 | export Export { name: "methodBytecodes", kind: Func, index: 15 }
        | 68 6f 64 42
        | 79 74 65 63
        | 6f 64 65 73
        | 00 0f      
  0x324 | 16 73 65 74 | export Export { name: "setMethodFunctionIndex", kind: Func, index: 16 }
        | 4d 65 74 68
        | 6f 64 46 75
        | 6e 63 74 69
        | 6f 6e 49 6e
        | 64 65 78 00
        | 10         
  0x33d | 0d 6f 6e 43 | export Export { name: "onContextPush", kind: Func, index: 17 }
        | 6f 6e 74 65
        | 78 74 50 75
        | 73 68 00 11
  0x34d | 0e 70 6f 70 | export Export { name: "popFromContext", kind: Func, index: 18 }
        | 46 72 6f 6d
        | 43 6f 6e 74
        | 65 78 74 00
        | 12         
  0x35e | 13 76 61 6c | export Export { name: "valueOfSmallInteger", kind: Func, index: 19 }
        | 75 65 4f 66
        | 53 6d 61 6c
        | 6c 49 6e 74
        | 65 67 65 72
        | 00 13      
  0x374 | 14 73 6d 61 | export Export { name: "smallIntegerForValue", kind: Func, index: 20 }
        | 6c 6c 49 6e
        | 74 65 67 65
        | 72 46 6f 72
        | 56 61 6c 75
        | 65 00 14   
  0x38b | 0d 63 6c 61 | export Export { name: "classOfObject", kind: Func, index: 21 }
        | 73 73 4f 66
        | 4f 62 6a 65
        | 63 74 00 15
  0x39b | 0f 63 6f 6e | export Export { name: "contextReceiver", kind: Func, index: 22 }
        | 74 65 78 74
        | 52 65 63 65
        | 69 76 65 72
        | 00 16      
  0x3ad | 0e 6d 65 74 | export Export { name: "methodLiterals", kind: Func, index: 23 }
        | 68 6f 64 4c
        | 69 74 65 72
        | 61 6c 73 00
        | 17         
  0x3be | 10 63 6f 6e | export Export { name: "contextLiteralAt", kind: Func, index: 24 }
        | 74 65 78 74
        | 4c 69 74 65
        | 72 61 6c 41
        | 74 00 18   
  0x3d1 | 0d 63 6f 6e | export Export { name: "contextMethod", kind: Func, index: 25 }
        | 74 65 78 74
        | 4d 65 74 68
        | 6f 64 00 19
  0x3e1 | 0b 62 79 74 | export Export { name: "byteArrayAt", kind: Func, index: 28 }
        | 65 41 72 72
        | 61 79 41 74
        | 00 1c      
  0x3ef | 0f 62 79 74 | export Export { name: "byteArrayLength", kind: Func, index: 29 }
        | 65 41 72 72
        | 61 79 4c 65
        | 6e 67 74 68
        | 00 1d      
  0x401 | 15 63 6f 70 | export Export { name: "copyByteArrayToMemory", kind: Func, index: 30 }
        | 79 42 79 74
        | 65 41 72 72
        | 61 79 54 6f
        | 4d 65 6d 6f
        | 72 79 00 1e
  0x419 | 16 63 72 65 | export Export { name: "createMinimalBootstrap", kind: Func, index: 46 }
        | 61 74 65 4d
        | 69 6e 69 6d
        | 61 6c 42 6f
        | 6f 74 73 74
        | 72 61 70 00
        | 2e         
  0x432 | 09 69 6e 74 | export Export { name: "interpret", kind: Func, index: 48 }
        | 65 72 70 72
        | 65 74 00 30
  0x43e | 0a df 1b    | code section
  0x441 | 2e          | 46 count
============== func 3 ====================
  0x442 | 0f          | size of function
  0x443 | 00          | 0 local blocks
  0x444 | d0 6d       | ref_null hty:Abstract { shared: false, ty: Eq }
  0x446 | 20 00       | local_get local_index:0
  0x448 | 10 1f       | call function_index:31
  0x44a | d0 03       | ref_null hty:Concrete(Module(3))
  0x44c | 20 01       | local_get local_index:1
  0x44e | fb 00 04    | struct_new struct_type_index:4
  0x451 | 0b          | end
============== func 4 ====================
  0x452 | 0f          | size of function
  0x453 | 00          | 0 local blocks
  0x454 | d0 6d       | ref_null hty:Abstract { shared: false, ty: Eq }
  0x456 | 20 00       | local_get local_index:0
  0x458 | 10 1f       | call function_index:31
  0x45a | d0 03       | ref_null hty:Concrete(Module(3))
  0x45c | 20 01       | local_get local_index:1
  0x45e | fb 00 05    | struct_new struct_type_index:5
  0x461 | 0b          | end
============== func 5 ====================
  0x462 | 0f          | size of function
  0x463 | 00          | 0 local blocks
  0x464 | d0 6d       | ref_null hty:Abstract { shared: false, ty: Eq }
  0x466 | 20 00       | local_get local_index:0
  0x468 | 10 1f       | call function_index:31
  0x46a | d0 03       | ref_null hty:Concrete(Module(3))
  0x46c | 20 01       | local_get local_index:1
  0x46e | fb 00 06    | struct_new struct_type_index:6
  0x471 | 0b          | end
============== func 6 ====================
  0x472 | 13          | size of function
  0x473 | 00          | 0 local blocks
  0x474 | d0 6d       | ref_null hty:Abstract { shared: false, ty: Eq }
  0x476 | 20 00       | local_get local_index:0
  0x478 | 10 1f       | call function_index:31
  0x47a | d0 03       | ref_null hty:Concrete(Module(3))
  0x47c | d0 04       | ref_null hty:Concrete(Module(4))
  0x47e | d0 04       | ref_null hty:Concrete(Module(4))
  0x480 | 41 00       | i32_const value:0
  0x482 | fb 00 09    | struct_new struct_type_index:9
  0x485 | 0b          | end
============== func 7 ====================
  0x486 | 52          | size of function
  0x487 | 02          | 2 local blocks
  0x488 | 02 6d       | 2 locals of type Ref(eqref)
  0x48a | 02 7f       | 2 locals of type I32
  0x48c | 20 01       | local_get local_index:1
  0x48e | fb 0f       | array_len
  0x490 | 41 01       | i32_const value:1
  0x492 | 6b          | i32_sub
  0x493 | 21 04       | local_set local_index:4
  0x495 | 41 00       | i32_const value:0
  0x497 | 21 05       | local_set local_index:5
  0x499 | 20 00       | local_get local_index:0
  0x49b | fb 02 11 08 | struct_get struct_type_index:17 field_index:8
  0x49f | 21 02       | local_set local_index:2
  0x4a1 | 03 40       | loop blockty:Empty
  0x4a3 | 20 05       | local_get local_index:5
  0x4a5 | 20 04       | local_get local_index:4
  0x4a7 | 46          | i32_eq
  0x4a8 | 04 40       | if blockty:Empty
  0x4aa | 0f          | return
  0x4ab | 0b          | end
  0x4ac | 20 01       | local_get local_index:1
  0x4ae | 20 05       | local_get local_index:5
  0x4b0 | fb 0b 00    | array_get array_type_index:0
  0x4b3 | 21 03       | local_set local_index:3
  0x4b5 | 20 00       | local_get local_index:0
  0x4b7 | 20 02       | local_get local_index:2
  0x4b9 | fb 16 03    | ref_cast_non_null hty:Concrete(Module(3))
  0x4bc | 20 03       | local_get local_index:3
  0x4be | fb 05 03 02 | struct_set struct_type_index:3 field_index:2
  0x4c2 | 20 03       | local_get local_index:3
  0x4c4 | fb 05 11 08 | struct_set struct_type_index:17 field_index:8
  0x4c8 | 20 05       | local_get local_index:5
  0x4ca | 41 01       | i32_const value:1
  0x4cc | 6a          | i32_add
  0x4cd | 21 05       | local_set local_index:5
  0x4cf | 20 03       | local_get local_index:3
  0x4d1 | 21 02       | local_set local_index:2
  0x4d3 | 41 01       | i32_const value:1
  0x4d5 | 0d 00       | br_if relative_depth:0
  0x4d7 | 0b          | end
  0x4d8 | 0b          | end
============== func 8 ====================
  0x4d9 | 40          | size of function
  0x4da | 00          | 0 local blocks
  0x4db | 20 00       | local_get local_index:0
  0x4dd | 20 01       | local_get local_index:1
  0x4df | fb 02 0c 00 | struct_get struct_type_index:12 field_index:0
  0x4e3 | 20 01       | local_get local_index:1
  0x4e5 | fb 02 0c 03 | struct_get struct_type_index:12 field_index:3
  0x4e9 | 20 01       | local_get local_index:1
  0x4eb | fb 02 0c 04 | struct_get struct_type_index:12 field_index:4
  0x4ef | 20 01       | local_get local_index:1
  0x4f1 | fb 02 0c 06 | struct_get struct_type_index:12 field_index:6
  0x4f5 | 20 01       | local_get local_index:1
  0x4f7 | fb 02 0c 07 | struct_get struct_type_index:12 field_index:7
  0x4fb | 20 01       | local_get local_index:1
  0x4fd | fb 02 0c 08 | struct_get struct_type_index:12 field_index:8
  0x501 | 20 01       | local_get local_index:1
  0x503 | fb 02 0c 09 | struct_get struct_type_index:12 field_index:9
  0x507 | 20 01       | local_get local_index:1
  0x509 | fb 02 0c 0a | struct_get struct_type_index:12 field_index:10
  0x50d | 20 01       | local_get local_index:1
  0x50f | fb 02 0c 0b | struct_get struct_type_index:12 field_index:11
  0x513 | fb 08 00 09 | array_new_fixed array_type_index:0 array_size:9
  0x517 | 10 07       | call function_index:7
  0x519 | 0b          | end
============== func 9 ====================
  0x51a | 38          | size of function
  0x51b | 00          | 0 local blocks
  0x51c | 20 00       | local_get local_index:0
  0x51e | 20 01       | local_get local_index:1
  0x520 | fb 02 0d 00 | struct_get struct_type_index:13 field_index:0
  0x524 | 20 01       | local_get local_index:1
  0x526 | fb 02 0d 03 | struct_get struct_type_index:13 field_index:3
  0x52a | 20 01       | local_get local_index:1
  0x52c | fb 02 0d 04 | struct_get struct_type_index:13 field_index:4
  0x530 | 20 01       | local_get local_index:1
  0x532 | fb 02 0d 06 | struct_get struct_type_index:13 field_index:6
  0x536 | 20 01       | local_get local_index:1
  0x538 | fb 02 0d 07 | struct_get struct_type_index:13 field_index:7
  0x53c | 20 01       | local_get local_index:1
  0x53e | fb 02 0d 08 | struct_get struct_type_index:13 field_index:8
  0x542 | fb 08 00 06 | array_new_fixed array_type_index:0 array_size:6
  0x546 | 10 07       | call function_index:7
  0x548 | 20 00       | local_get local_index:0
  0x54a | 20 01       | local_get local_index:1
  0x54c | fb 02 0d 08 | struct_get struct_type_index:13 field_index:8
  0x550 | 10 08       | call function_index:8
  0x552 | 0b          | end
============== func 10 ====================
  0x553 | 0d          | size of function
  0x554 | 00          | 0 local blocks
  0x555 | 20 00       | local_get local_index:0
  0x557 | d0 6d       | ref_null hty:Abstract { shared: false, ty: Eq }
  0x559 | 41 00       | i32_const value:0
  0x55b | fb 06 00    | array_new array_type_index:0
  0x55e | 10 03       | call function_index:3
  0x560 | 0b          | end
============== func 11 ====================
  0x561 | 29          | size of function
  0x562 | 00          | 0 local blocks
  0x563 | d0 6d       | ref_null hty:Abstract { shared: false, ty: Eq }
  0x565 | 20 00       | local_get local_index:0
  0x567 | 10 1f       | call function_index:31
  0x569 | d0 6d       | ref_null hty:Abstract { shared: false, ty: Eq }
  0x56b | d0 6d       | ref_null hty:Abstract { shared: false, ty: Eq }
  0x56d | 20 00       | local_get local_index:0
  0x56f | 10 06       | call function_index:6
  0x571 | 20 01       | local_get local_index:1
  0x573 | 20 00       | local_get local_index:0
  0x575 | 10 0a       | call function_index:10
  0x577 | d0 05       | ref_null hty:Concrete(Module(5))
  0x579 | 20 00       | local_get local_index:0
  0x57b | 10 0a       | call function_index:10
  0x57d | 20 02       | local_get local_index:2
  0x57f | 20 00       | local_get local_index:0
  0x581 | 10 06       | call function_index:6
  0x583 | 20 00       | local_get local_index:0
  0x585 | 10 0a       | call function_index:10
  0x587 | fb 00 0c    | struct_new struct_type_index:12
  0x58a | 0b          | end
============== func 12 ====================
  0x58b | 26          | size of function
  0x58c | 00          | 0 local blocks
  0x58d | 20 00       | local_get local_index:0
  0x58f | fb 02 11 0c | struct_get struct_type_index:17 field_index:12
  0x593 | 20 00       | local_get local_index:0
  0x595 | 10 1f       | call function_index:31
  0x597 | d0 6d       | ref_null hty:Abstract { shared: false, ty: Eq }
  0x599 | 20 00       | local_get local_index:0
  0x59b | fb 02 11 0d | struct_get struct_type_index:17 field_index:13
  0x59f | 20 00       | local_get local_index:0
  0x5a1 | 10 06       | call function_index:6
  0x5a3 | 41 98 01    | i32_const value:152
  0x5a6 | 20 00       | local_get local_index:0
  0x5a8 | 10 0a       | call function_index:10
  0x5aa | d0 05       | ref_null hty:Concrete(Module(5))
  0x5ac | 20 01       | local_get local_index:1
  0x5ae | fb 00 0d    | struct_new struct_type_index:13
  0x5b1 | 0b          | end
============== func 13 ====================
  0x5b2 | 0f          | size of function
  0x5b3 | 00          | 0 local blocks
  0x5b4 | d0 6d       | ref_null hty:Abstract { shared: false, ty: Eq }
  0x5b6 | 20 00       | local_get local_index:0
  0x5b8 | 10 1f       | call function_index:31
  0x5ba | d0 6d       | ref_null hty:Abstract { shared: false, ty: Eq }
  0x5bc | 20 01       | local_get local_index:1
  0x5be | fb 00 08    | struct_new struct_type_index:8
  0x5c1 | 0b          | end
============== func 14 ====================
  0x5c2 | be 05       | size of function
  0x5c4 | 04          | 4 local blocks
  0x5c5 | 01 7f       | 1 locals of type I32
  0x5c7 | 01 6d       | 1 locals of type Ref(eqref)
  0x5c9 | 01 64 11    | 1 locals of type Ref((ref (module 17)))
  0x5cc | 07 64 0c    | 7 locals of type Ref((ref (module 12)))
  0x5cf | 41 80 02    | i32_const value:256
  0x5d2 | 21 00       | local_set local_index:0
  0x5d4 | d0 0c       | ref_null hty:Concrete(Module(12))
  0x5d6 | 41 01       | i32_const value:1
  0x5d8 | d0 6d       | ref_null hty:Abstract { shared: false, ty: Eq }
  0x5da | fb 00 03    | struct_new struct_type_index:3
  0x5dd | 21 01       | local_set local_index:1
  0x5df | d0 0f       | ref_null hty:Concrete(Module(15))
  0x5e1 | 41 01       | i32_const value:1
  0x5e3 | d0 00       | ref_null hty:Concrete(Module(0))
  0x5e5 | 41 00       | i32_const value:0
  0x5e7 | 41 e8 07    | i32_const value:1000
  0x5ea | 20 00       | local_get local_index:0
  0x5ec | 41 e9 07    | i32_const value:1001
  0x5ef | 20 01       | local_get local_index:1
  0x5f1 | 20 01       | local_get local_index:1
  0x5f3 | d0 0c       | ref_null hty:Concrete(Module(12))
  0x5f5 | d0 0c       | ref_null hty:Concrete(Module(12))
  0x5f7 | d0 0c       | ref_null hty:Concrete(Module(12))
  0x5f9 | d0 0c       | ref_null hty:Concrete(Module(12))
  0x5fb | d0 0c       | ref_null hty:Concrete(Module(12))
  0x5fd | fb 00 11    | struct_new struct_type_index:17
  0x600 | 21 02       | local_set local_index:2
  0x602 | 20 02       | local_get local_index:2
  0x604 | 41 02       | i32_const value:2
  0x606 | 20 02       | local_get local_index:2
  0x608 | 41 cf 00    | i32_const value:79
  0x60b | 41 e2 00    | i32_const value:98
  0x60e | 41 ea 00    | i32_const value:106
  0x611 | 41 e5 00    | i32_const value:101
  0x614 | 41 e3 00    | i32_const value:99
  0x617 | 41 f4 00    | i32_const value:116
  0x61a | fb 08 01 06 | array_new_fixed array_type_index:1 array_size:6
  0x61e | 10 0d       | call function_index:13
  0x620 | 10 0b       | call function_index:11
  0x622 | 21 03       | local_set local_index:3
  0x624 | 20 02       | local_get local_index:2
  0x626 | 20 03       | local_get local_index:3
  0x628 | fb 05 11 0a | struct_set struct_type_index:17 field_index:10
  0x62c | 20 02       | local_get local_index:2
  0x62e | 41 02       | i32_const value:2
  0x630 | 20 02       | local_get local_index:2
  0x632 | 41 c2 00    | i32_const value:66
  0x635 | 41 e5 00    | i32_const value:101
  0x638 | 41 e8 00    | i32_const value:104
  0x63b | 41 e1 00    | i32_const value:97
  0x63e | 41 f6 00    | i32_const value:118
  0x641 | 41 e9 00    | i32_const value:105
  0x644 | 41 ef 00    | i32_const value:111
  0x647 | 41 f2 00    | i32_const value:114
  0x64a | fb 08 01 08 | array_new_fixed array_type_index:1 array_size:8
  0x64e | 10 0d       | call function_index:13
  0x650 | 10 0b       | call function_index:11
  0x652 | 21 04       | local_set local_index:4
  0x654 | 20 02       | local_get local_index:2
  0x656 | 41 02       | i32_const value:2
  0x658 | 20 02       | local_get local_index:2
  0x65a | 41 c3 00    | i32_const value:67
  0x65d | 41 ec 00    | i32_const value:108
  0x660 | 41 e1 00    | i32_const value:97
  0x663 | 41 f3 00    | i32_const value:115
  0x666 | 41 f3 00    | i32_const value:115
  0x669 | 41 c4 00    | i32_const value:68
  0x66c | 41 e5 00    | i32_const value:101
  0x66f | 41 f3 00    | i32_const value:115
  0x672 | 41 e3 00    | i32_const value:99
  0x675 | 41 f2 00    | i32_const value:114
  0x678 | 41 e9 00    | i32_const value:105
  0x67b | 41 f0 00    | i32_const value:112
  0x67e | 41 f4 00    | i32_const value:116
  0x681 | 41 e9 00    | i32_const value:105
  0x684 | 41 ef 00    | i32_const value:111
  0x687 | 41 ee 00    | i32_const value:110
  0x68a | fb 08 01 10 | array_new_fixed array_type_index:1 array_size:16
  0x68e | 10 0d       | call function_index:13
  0x690 | 10 0b       | call function_index:11
  0x692 | 21 05       | local_set local_index:5
  0x694 | 20 02       | local_get local_index:2
  0x696 | 20 05       | local_get local_index:5
  0x698 | fb 05 11 0d | struct_set struct_type_index:17 field_index:13
  0x69c | 20 02       | local_get local_index:2
  0x69e | 41 02       | i32_const value:2
  0x6a0 | 20 02       | local_get local_index:2
  0x6a2 | 41 cd 00    | i32_const value:77
  0x6a5 | 41 e5 00    | i32_const value:101
  0x6a8 | 41 f4 00    | i32_const value:116
  0x6ab | 41 e1 00    | i32_const value:97
  0x6ae | 41 e3 00    | i32_const value:99
  0x6b1 | 41 ec 00    | i32_const value:108
  0x6b4 | 41 e1 00    | i32_const value:97
  0x6b7 | 41 f3 00    | i32_const value:115
  0x6ba | 41 f3 00    | i32_const value:115
  0x6bd | fb 08 01 09 | array_new_fixed array_type_index:1 array_size:9
  0x6c1 | 10 0d       | call function_index:13
  0x6c3 | 10 0b       | call function_index:11
  0x6c5 | 21 07       | local_set local_index:7
  0x6c7 | 20 02       | local_get local_index:2
  0x6c9 | 20 07       | local_get local_index:7
  0x6cb | fb 05 11 0c | struct_set struct_type_index:17 field_index:12
  0x6cf | 20 02       | local_get local_index:2
  0x6d1 | 41 02       | i32_const value:2
  0x6d3 | 20 02       | local_get local_index:2
  0x6d5 | 41 c3 00    | i32_const value:67
  0x6d8 | 41 ec 00    | i32_const value:108
  0x6db | 41 e1 00    | i32_const value:97
  0x6de | 41 f3 00    | i32_const value:115
  0x6e1 | 41 f3 00    | i32_const value:115
  0x6e4 | fb 08 01 05 | array_new_fixed array_type_index:1 array_size:5
  0x6e8 | 10 0d       | call function_index:13
  0x6ea | 10 0b       | call function_index:11
  0x6ec | 21 06       | local_set local_index:6
  0x6ee | 20 02       | local_get local_index:2
  0x6f0 | 41 02       | i32_const value:2
  0x6f2 | 20 02       | local_get local_index:2
  0x6f4 | 41 d3 00    | i32_const value:83
  0x6f7 | 41 f9 00    | i32_const value:121
  0x6fa | 41 ed 00    | i32_const value:109
  0x6fd | 41 e2 00    | i32_const value:98
  0x700 | 41 ef 00    | i32_const value:111
  0x703 | 41 ec 00    | i32_const value:108
  0x706 | fb 08 01 06 | array_new_fixed array_type_index:1 array_size:6
  0x70a | 10 0d       | call function_index:13
  0x70c | 10 0b       | call function_index:11
  0x70e | 21 08       | local_set local_index:8
  0x710 | 20 02       | local_get local_index:2
  0x712 | 41 02       | i32_const value:2
  0x714 | 20 02       | local_get local_index:2
  0x716 | 41 d3 00    | i32_const value:83
  0x719 | 41 ed 00    | i32_const value:109
  0x71c | 41 e1 00    | i32_const value:97
  0x71f | 41 ec 00    | i32_const value:108
  0x722 | 41 ec 00    | i32_const value:108
  0x725 | 41 c9 00    | i32_const value:73
  0x728 | 41 ee 00    | i32_const value:110
  0x72b | 41 f4 00    | i32_const value:116
  0x72e | 41 e5 00    | i32_const value:101
  0x731 | 41 e7 00    | i32_const value:103
  0x734 | 41 e5 00    | i32_const value:101
  0x737 | 41 e8 00    | i32_const value:104
  0x73a | fb 08 01 0c | array_new_fixed array_type_index:1 array_size:12
  0x73e | 10 0d       | call function_index:13
  0x740 | 10 0b       | call function_index:11
  0x742 | 21 09       | local_set local_index:9
  0x744 | 20 02       | local_get local_index:2
  0x746 | 20 09       | local_get local_index:9
  0x748 | fb 05 11 09 | struct_set struct_type_index:17 field_index:9
  0x74c | 20 03       | local_get local_index:3
  0x74e | 20 02       | local_get local_index:2
  0x750 | 20 03       | local_get local_index:3
  0x752 | 10 0c       | call function_index:12
  0x754 | fb 05 0c 00 | struct_set struct_type_index:12 field_index:0
  0x758 | 20 03       | local_get local_index:3
  0x75a | fb 02 0c 09 | struct_get struct_type_index:12 field_index:9
  0x75e | 20 08       | local_get local_index:8
  0x760 | fb 05 08 00 | struct_set struct_type_index:8 field_index:0
  0x764 | 20 04       | local_get local_index:4
  0x766 | 20 02       | local_get local_index:2
  0x768 | 20 04       | local_get local_index:4
  0x76a | 10 0c       | call function_index:12
  0x76c | fb 05 0c 00 | struct_set struct_type_index:12 field_index:0
  0x770 | 20 04       | local_get local_index:4
  0x772 | 20 03       | local_get local_index:3
  0x774 | fb 05 0c 03 | struct_set struct_type_index:12 field_index:3
  0x778 | 20 04       | local_get local_index:4
  0x77a | fb 02 0c 09 | struct_get struct_type_index:12 field_index:9
  0x77e | 20 08       | local_get local_index:8
  0x780 | fb 05 08 00 | struct_set struct_type_index:8 field_index:0
  0x784 | 20 05       | local_get local_index:5
  0x786 | 20 02       | local_get local_index:2
  0x788 | 20 05       | local_get local_index:5
  0x78a | 10 0c       | call function_index:12
  0x78c | fb 05 0c 00 | struct_set struct_type_index:12 field_index:0
  0x790 | 20 05       | local_get local_index:5
  0x792 | 20 04       | local_get local_index:4
  0x794 | fb 05 0c 03 | struct_set struct_type_index:12 field_index:3
  0x798 | 20 05       | local_get local_index:5
  0x79a | fb 02 0c 09 | struct_get struct_type_index:12 field_index:9
  0x79e | 20 08       | local_get local_index:8
  0x7a0 | fb 05 08 00 | struct_set struct_type_index:8 field_index:0
  0x7a4 | 20 06       | local_get local_index:6
  0x7a6 | 20 02       | local_get local_index:2
  0x7a8 | 20 06       | local_get local_index:6
  0x7aa | 10 0c       | call function_index:12
  0x7ac | fb 05 0c 00 | struct_set struct_type_index:12 field_index:0
  0x7b0 | 20 06       | local_get local_index:6
  0x7b2 | 20 05       | local_get local_index:5
  0x7b4 | fb 05 0c 03 | struct_set struct_type_index:12 field_index:3
  0x7b8 | 20 04       | local_get local_index:4
  0x7ba | fb 02 0c 09 | struct_get struct_type_index:12 field_index:9
  0x7be | 20 08       | local_get local_index:8
  0x7c0 | fb 05 08 00 | struct_set struct_type_index:8 field_index:0
  0x7c4 | 20 07       | local_get local_index:7
  0x7c6 | 20 02       | local_get local_index:2
  0x7c8 | 20 07       | local_get local_index:7
  0x7ca | 10 0c       | call function_index:12
  0x7cc | fb 05 0c 00 | struct_set struct_type_index:12 field_index:0
  0x7d0 | 20 07       | local_get local_index:7
  0x7d2 | 20 03       | local_get local_index:3
  0x7d4 | fb 05 0c 03 | struct_set struct_type_index:12 field_index:3
  0x7d8 | 20 07       | local_get local_index:7
  0x7da | fb 02 0c 09 | struct_get struct_type_index:12 field_index:9
  0x7de | 20 08       | local_get local_index:8
  0x7e0 | fb 05 08 00 | struct_set struct_type_index:8 field_index:0
  0x7e4 | 20 08       | local_get local_index:8
  0x7e6 | 20 02       | local_get local_index:2
  0x7e8 | 20 08       | local_get local_index:8
  0x7ea | 10 0c       | call function_index:12
  0x7ec | fb 05 0c 00 | struct_set struct_type_index:12 field_index:0
  0x7f0 | 20 08       | local_get local_index:8
  0x7f2 | 20 03       | local_get local_index:3
  0x7f4 | fb 05 0c 03 | struct_set struct_type_index:12 field_index:3
  0x7f8 | 20 08       | local_get local_index:8
  0x7fa | fb 02 0c 09 | struct_get struct_type_index:12 field_index:9
  0x7fe | 20 08       | local_get local_index:8
  0x800 | fb 05 08 00 | struct_set struct_type_index:8 field_index:0
  0x804 | 20 09       | local_get local_index:9
  0x806 | 20 02       | local_get local_index:2
  0x808 | 20 09       | local_get local_index:9
  0x80a | 10 0c       | call function_index:12
  0x80c | fb 05 0c 00 | struct_set struct_type_index:12 field_index:0
  0x810 | 20 09       | local_get local_index:9
  0x812 | 20 03       | local_get local_index:3
  0x814 | fb 05 0c 03 | struct_set struct_type_index:12 field_index:3
  0x818 | 20 09       | local_get local_index:9
  0x81a | fb 02 0c 09 | struct_get struct_type_index:12 field_index:9
  0x81e | 20 08       | local_get local_index:8
  0x820 | fb 05 08 00 | struct_set struct_type_index:8 field_index:0
  0x824 | 20 02       | local_get local_index:2
  0x826 | 20 03       | local_get local_index:3
  0x828 | fb 02 0c 00 | struct_get struct_type_index:12 field_index:0
  0x82c | fb 16 0d    | ref_cast_non_null hty:Concrete(Module(13))
  0x82f | 10 09       | call function_index:9
  0x831 | 20 02       | local_get local_index:2
  0x833 | 20 04       | local_get local_index:4
  0x835 | fb 02 0c 00 | struct_get struct_type_index:12 field_index:0
  0x839 | fb 16 0d    | ref_cast_non_null hty:Concrete(Module(13))
  0x83c | 10 09       | call function_index:9
  0x83e | 20 02       | local_get local_index:2
  0x840 | 20 05       | local_get local_index:5
  0x842 | fb 02 0c 00 | struct_get struct_type_index:12 field_index:0
  0x846 | fb 16 0d    | ref_cast_non_null hty:Concrete(Module(13))
  0x849 | 10 09       | call function_index:9
  0x84b | 20 02       | local_get local_index:2
  0x84d | 20 06       | local_get local_index:6
  0x84f | fb 02 0c 00 | struct_get struct_type_index:12 field_index:0
  0x853 | fb 16 0d    | ref_cast_non_null hty:Concrete(Module(13))
  0x856 | 10 09       | call function_index:9
  0x858 | 20 02       | local_get local_index:2
  0x85a | 20 07       | local_get local_index:7
  0x85c | fb 02 0c 00 | struct_get struct_type_index:12 field_index:0
  0x860 | fb 16 0d    | ref_cast_non_null hty:Concrete(Module(13))
  0x863 | 10 09       | call function_index:9
  0x865 | 20 02       | local_get local_index:2
  0x867 | 20 08       | local_get local_index:8
  0x869 | fb 02 0c 00 | struct_get struct_type_index:12 field_index:0
  0x86d | fb 16 0d    | ref_cast_non_null hty:Concrete(Module(13))
  0x870 | 10 09       | call function_index:9
  0x872 | 20 02       | local_get local_index:2
  0x874 | 20 09       | local_get local_index:9
  0x876 | fb 02 0c 00 | struct_get struct_type_index:12 field_index:0
  0x87a | fb 16 0d    | ref_cast_non_null hty:Concrete(Module(13))
  0x87d | 10 09       | call function_index:9
  0x87f | 20 02       | local_get local_index:2
  0x881 | 0b          | end
============== func 15 ====================
  0x882 | 0b          | size of function
  0x883 | 00          | 0 local blocks
  0x884 | 20 00       | local_get local_index:0
  0x886 | fb 16 0e    | ref_cast_non_null hty:Concrete(Module(14))
  0x889 | fb 02 0e 03 | struct_get struct_type_index:14 field_index:3
  0x88d | 0b          | end
============== func 16 ====================
  0x88e | 0d          | size of function
  0x88f | 00          | 0 local blocks
  0x890 | 20 00       | local_get local_index:0
  0x892 | fb 16 0e    | ref_cast_non_null hty:Concrete(Module(14))
  0x895 | 20 01       | local_get local_index:1
  0x897 | fb 05 0e 07 | struct_set struct_type_index:14 field_index:7
  0x89b | 0b          | end
============== func 17 ====================
  0x89c | 0b          | size of function
  0x89d | 00          | 0 local blocks
  0x89e | 20 00       | local_get local_index:0
  0x8a0 | fb 16 0f    | ref_cast_non_null hty:Concrete(Module(15))
  0x8a3 | 20 01       | local_get local_index:1
  0x8a5 | 10 20       | call function_index:32
  0x8a7 | 0b          | end
============== func 18 ====================
  0x8a8 | 09          | size of function
  0x8a9 | 00          | 0 local blocks
  0x8aa | 20 00       | local_get local_index:0
  0x8ac | fb 16 0f    | ref_cast_non_null hty:Concrete(Module(15))
  0x8af | 10 21       | call function_index:33
  0x8b1 | 0b          | end
============== func 19 ====================
  0x8b2 | 06          | size of function
  0x8b3 | 00          | 0 local blocks
  0x8b4 | 20 00       | local_get local_index:0
  0x8b6 | 10 29       | call function_index:41
  0x8b8 | 0b          | end
============== func 20 ====================
  0x8b9 | 06          | size of function
  0x8ba | 00          | 0 local blocks
  0x8bb | 20 00       | local_get local_index:0
  0x8bd | 10 28       | call function_index:40
  0x8bf | 0b          | end
============== func 21 ====================
  0x8c0 | 04          | size of function
  0x8c1 | 00          | 0 local blocks
  0x8c2 | d0 6d       | ref_null hty:Abstract { shared: false, ty: Eq }
  0x8c4 | 0b          | end
============== func 22 ====================
  0x8c5 | 0b          | size of function
  0x8c6 | 00          | 0 local blocks
  0x8c7 | 20 00       | local_get local_index:0
  0x8c9 | fb 16 0f    | ref_cast_non_null hty:Concrete(Module(15))
  0x8cc | fb 02 0f 07 | struct_get struct_type_index:15 field_index:7
  0x8d0 | 0b          | end
============== func 23 ====================
  0x8d1 | 0b          | size of function
  0x8d2 | 00          | 0 local blocks
  0x8d3 | 20 00       | local_get local_index:0
  0x8d5 | fb 16 0e    | ref_cast_non_null hty:Concrete(Module(14))
  0x8d8 | fb 02 0e 04 | struct_get struct_type_index:14 field_index:4
  0x8dc | 0b          | end
============== func 24 ====================
  0x8dd | 16          | size of function
  0x8de | 00          | 0 local blocks
  0x8df | 20 00       | local_get local_index:0
  0x8e1 | fb 16 0f    | ref_cast_non_null hty:Concrete(Module(15))
  0x8e4 | fb 02 0f 06 | struct_get struct_type_index:15 field_index:6
  0x8e8 | fb 02 0e 04 | struct_get struct_type_index:14 field_index:4
  0x8ec | fb 16 00    | ref_cast_non_null hty:Concrete(Module(0))
  0x8ef | 20 01       | local_get local_index:1
  0x8f1 | 10 1b       | call function_index:27
  0x8f3 | 0b          | end
============== func 25 ====================
  0x8f4 | 0b          | size of function
  0x8f5 | 00          | 0 local blocks
  0x8f6 | 20 00       | local_get local_index:0
  0x8f8 | fb 16 0f    | ref_cast_non_null hty:Concrete(Module(15))
  0x8fb | fb 02 0f 06 | struct_get struct_type_index:15 field_index:6
  0x8ff | 0b          | end
============== func 26 ====================
  0x900 | 25          | size of function
  0x901 | 01          | 1 local blocks
  0x902 | 01 7f       | 1 locals of type I32
  0x904 | 20 00       | local_get local_index:0
  0x906 | fb 16 6a    | ref_cast_non_null hty:Abstract { shared: false, ty: Array }
  0x909 | fb 0f       | array_len
  0x90b | 21 02       | local_set local_index:2
  0x90d | 20 01       | local_get local_index:1
  0x90f | 41 00       | i32_const value:0
  0x911 | 48          | i32_lt_s
  0x912 | 04 40       | if blockty:Empty
  0x914 | 41 00       | i32_const value:0
  0x916 | 0f          | return
  0x917 | 0b          | end
  0x918 | 20 01       | local_get local_index:1
  0x91a | 20 02       | local_get local_index:2
  0x91c | 4f          | i32_ge_u
  0x91d | 04 40       | if blockty:Empty
  0x91f | 41 00       | i32_const value:0
  0x921 | 0f          | return
  0x922 | 0b          | end
  0x923 | 41 01       | i32_const value:1
  0x925 | 0b          | end
============== func 27 ====================
  0x926 | 1b          | size of function
  0x927 | 00          | 0 local blocks
  0x928 | 20 00       | local_get local_index:0
  0x92a | fb 16 6d    | ref_cast_non_null hty:Abstract { shared: false, ty: Eq }
  0x92d | 20 01       | local_get local_index:1
  0x92f | 10 1a       | call function_index:26
  0x931 | 45          | i32_eqz
  0x932 | 04 40       | if blockty:Empty
  0x934 | 41 7f       | i32_const value:-1
  0x936 | fb 1c       | ref_i31
  0x938 | 0f          | return
  0x939 | 0b          | end
  0x93a | 20 00       | local_get local_index:0
  0x93c | 20 01       | local_get local_index:1
  0x93e | fb 0b 00    | array_get array_type_index:0
  0x941 | 0b          | end
============== func 28 ====================
  0x942 | 16          | size of function
  0x943 | 00          | 0 local blocks
  0x944 | 20 00       | local_get local_index:0
  0x946 | 20 01       | local_get local_index:1
  0x948 | 10 1a       | call function_index:26
  0x94a | 45          | i32_eqz
  0x94b | 04 40       | if blockty:Empty
  0x94d | 41 7f       | i32_const value:-1
  0x94f | 0f          | return
  0x950 | 0b          | end
  0x951 | 20 00       | local_get local_index:0
  0x953 | 20 01       | local_get local_index:1
  0x955 | fb 0c 01    | array_get_s array_type_index:1
  0x958 | 0b          | end
============== func 29 ====================
  0x959 | 09          | size of function
  0x95a | 00          | 0 local blocks
  0x95b | 20 00       | local_get local_index:0
  0x95d | fb 16 01    | ref_cast_non_null hty:Concrete(Module(1))
  0x960 | fb 0f       | array_len
  0x962 | 0b          | end
============== func 30 ====================
  0x963 | 41          | size of function
  0x964 | 01          | 1 local blocks
  0x965 | 02 7f       | 2 locals of type I32
  0x967 | 20 00       | local_get local_index:0
  0x969 | d1          | ref_is_null
  0x96a | 04 40       | if blockty:Empty
  0x96c | 41 00       | i32_const value:0
  0x96e | 0f          | return
  0x96f | 0b          | end
  0x970 | 20 00       | local_get local_index:0
  0x972 | d4          | ref_as_non_null
  0x973 | fb 0f       | array_len
  0x975 | 21 01       | local_set local_index:1
  0x977 | 41 00       | i32_const value:0
  0x979 | 21 02       | local_set local_index:2
  0x97b | 03 40       | loop blockty:Empty
  0x97d | 20 02       | local_get local_index:2
  0x97f | 20 01       | local_get local_index:1
  0x981 | 4f          | i32_ge_u
  0x982 | 04 40       | if blockty:Empty
  0x984 | 23 01       | global_get global_index:1
  0x986 | 0f          | return
  0x987 | 0b          | end
  0x988 | 23 01       | global_get global_index:1
  0x98a | 20 02       | local_get local_index:2
  0x98c | 6a          | i32_add
  0x98d | 20 00       | local_get local_index:0
  0x98f | d4          | ref_as_non_null
  0x990 | 20 02       | local_get local_index:2
  0x992 | fb 0d 01    | array_get_u array_type_index:1
  0x995 | 3a 00 00    | i32_store8 memarg:MemArg { align: 0, max_align: 0, offset: 0, memory: 0 }
  0x998 | 20 02       | local_get local_index:2
  0x99a | 41 01       | i32_const value:1
  0x99c | 6a          | i32_add
  0x99d | 21 02       | local_set local_index:2
  0x99f | 0c 00       | br relative_depth:0
  0x9a1 | 0b          | end
  0x9a2 | 41 00       | i32_const value:0
  0x9a4 | 0b          | end
============== func 31 ====================
  0x9a5 | 17          | size of function
  0x9a6 | 00          | 0 local blocks
  0x9a7 | 20 00       | local_get local_index:0
  0x9a9 | 20 00       | local_get local_index:0
  0x9ab | fb 02 11 06 | struct_get struct_type_index:17 field_index:6
  0x9af | 41 01       | i32_const value:1
  0x9b1 | 6a          | i32_add
  0x9b2 | fb 05 11 06 | struct_set struct_type_index:17 field_index:6
  0x9b6 | 20 00       | local_get local_index:0
  0x9b8 | fb 02 11 06 | struct_get struct_type_index:17 field_index:6
  0x9bc | 0b          | end
============== func 32 ====================
  0x9bd | 3f          | size of function
  0x9be | 02          | 2 local blocks
  0x9bf | 01 64 04    | 1 locals of type Ref((ref (module 4)))
  0x9c2 | 01 7f       | 1 locals of type I32
  0x9c4 | 20 00       | local_get local_index:0
  0x9c6 | fb 02 0f 0a | struct_get struct_type_index:15 field_index:10
  0x9ca | 21 02       | local_set local_index:2
  0x9cc | 20 00       | local_get local_index:0
  0x9ce | fb 02 0f 05 | struct_get struct_type_index:15 field_index:5
  0x9d2 | 21 03       | local_set local_index:3
  0x9d4 | 20 03       | local_get local_index:3
  0x9d6 | 20 02       | local_get local_index:2
  0x9d8 | fb 02 04 03 | struct_get struct_type_index:4 field_index:3
  0x9dc | fb 0f       | array_len
  0x9de | 4f          | i32_ge_u
  0x9df | 04 40       | if blockty:Empty
  0x9e1 | 0f          | return
  0x9e2 | 0b          | end
  0x9e3 | 20 02       | local_get local_index:2
  0x9e5 | fb 02 04 03 | struct_get struct_type_index:4 field_index:3
  0x9e9 | 20 03       | local_get local_index:3
  0x9eb | 20 01       | local_get local_index:1
  0x9ed | fb 0e 00    | array_set array_type_index:0
  0x9f0 | 20 00       | local_get local_index:0
  0x9f2 | 20 03       | local_get local_index:3
  0x9f4 | 41 01       | i32_const value:1
  0x9f6 | 6a          | i32_add
  0x9f7 | fb 05 0f 05 | struct_set struct_type_index:15 field_index:5
  0x9fb | 0f          | return
  0x9fc | 0b          | end
============== func 33 ====================
  0x9fd | 3c          | size of function
  0x9fe | 02          | 2 local blocks
  0x9ff | 01 64 04    | 1 locals of type Ref((ref (module 4)))
  0xa02 | 01 7f       | 1 locals of type I32
  0xa04 | 20 00       | local_get local_index:0
  0xa06 | fb 02 0f 0a | struct_get struct_type_index:15 field_index:10
  0xa0a | 21 01       | local_set local_index:1
  0xa0c | 20 00       | local_get local_index:0
  0xa0e | fb 02 0f 05 | struct_get struct_type_index:15 field_index:5
  0xa12 | 21 02       | local_set local_index:2
  0xa14 | 20 02       | local_get local_index:2
  0xa16 | 41 00       | i32_const value:0
  0xa18 | 4d          | i32_le_u
  0xa19 | 04 40       | if blockty:Empty
  0xa1b | d0 6d       | ref_null hty:Abstract { shared: false, ty: Eq }
  0xa1d | 0f          | return
  0xa1e | 0b          | end
  0xa1f | 20 00       | local_get local_index:0
  0xa21 | 20 02       | local_get local_index:2
  0xa23 | 41 01       | i32_const value:1
  0xa25 | 6b          | i32_sub
  0xa26 | fb 05 0f 05 | struct_set struct_type_index:15 field_index:5
  0xa2a | 20 01       | local_get local_index:1
  0xa2c | fb 02 04 03 | struct_get struct_type_index:4 field_index:3
  0xa30 | 20 02       | local_get local_index:2
  0xa32 | 41 01       | i32_const value:1
  0xa34 | 6b          | i32_sub
  0xa35 | fb 0b 00    | array_get array_type_index:0
  0xa38 | 0f          | return
  0xa39 | 0b          | end
============== func 34 ====================
  0xa3a | 31          | size of function
  0xa3b | 02          | 2 local blocks
  0xa3c | 01 64 04    | 1 locals of type Ref((ref (module 4)))
  0xa3f | 01 7f       | 1 locals of type I32
  0xa41 | 20 00       | local_get local_index:0
  0xa43 | fb 02 0f 0a | struct_get struct_type_index:15 field_index:10
  0xa47 | 21 01       | local_set local_index:1
  0xa49 | 20 00       | local_get local_index:0
  0xa4b | fb 02 0f 05 | struct_get struct_type_index:15 field_index:5
  0xa4f | 21 02       | local_set local_index:2
  0xa51 | 20 02       | local_get local_index:2
  0xa53 | 41 00       | i32_const value:0
  0xa55 | 4d          | i32_le_u
  0xa56 | 04 40       | if blockty:Empty
  0xa58 | d0 6d       | ref_null hty:Abstract { shared: false, ty: Eq }
  0xa5a | 0f          | return
  0xa5b | 0b          | end
  0xa5c | 20 01       | local_get local_index:1
  0xa5e | fb 02 04 03 | struct_get struct_type_index:4 field_index:3
  0xa62 | 20 02       | local_get local_index:2
  0xa64 | 41 01       | i32_const value:1
  0xa66 | 6b          | i32_sub
  0xa67 | fb 0b 00    | array_get array_type_index:0
  0xa6a | 0f          | return
  0xa6b | 0b          | end
============== func 35 ====================
  0xa6c | 1a          | size of function
  0xa6d | 00          | 0 local blocks
  0xa6e | 20 01       | local_get local_index:1
  0xa70 | fb 14 6c    | ref_test_non_null hty:Abstract { shared: false, ty: I31 }
  0xa73 | 04 6d       | if blockty:Type(Ref(eqref))
  0xa75 | 20 00       | local_get local_index:0
  0xa77 | fb 02 11 09 | struct_get struct_type_index:17 field_index:9
  0xa7b | 05          | else
  0xa7c | 20 01       | local_get local_index:1
  0xa7e | fb 16 03    | ref_cast_non_null hty:Concrete(Module(3))
  0xa81 | fb 02 03 00 | struct_get struct_type_index:3 field_index:0
  0xa85 | 0b          | end
  0xa86 | 0b          | end
============== func 36 ====================
  0xa87 | ca 01       | size of function
  0xa89 | 05          | 5 local blocks
  0xa8a | 02 6d       | 2 locals of type Ref(eqref)
  0xa8c | 01 63 09    | 1 locals of type Ref((ref null (module 9)))
  0xa8f | 02 63 04    | 2 locals of type Ref((ref null (module 4)))
  0xa92 | 02 7f       | 2 locals of type I32
  0xa94 | 01 6d       | 1 locals of type Ref(eqref)
  0xa96 | 20 00       | local_get local_index:0
  0xa98 | 20 01       | local_get local_index:1
  0xa9a | 10 23       | call function_index:35
  0xa9c | fb 17 0c    | ref_cast_nullable hty:Concrete(Module(12))
  0xa9f | 21 04       | local_set local_index:4
  0xaa1 | 03 40       | loop blockty:Empty
  0xaa3 | 20 04       | local_get local_index:4
  0xaa5 | d1          | ref_is_null
  0xaa6 | 04 40       | if blockty:Empty
  0xaa8 | d0 0e       | ref_null hty:Concrete(Module(14))
  0xaaa | 0f          | return
  0xaab | 0b          | end
  0xaac | 20 04       | local_get local_index:4
  0xaae | fb 16 0c    | ref_cast_non_null hty:Concrete(Module(12))
  0xab1 | fb 02 0c 04 | struct_get struct_type_index:12 field_index:4
  0xab5 | 22 05       | local_tee local_index:5
  0xab7 | d1          | ref_is_null
  0xab8 | 04 40       | if blockty:Empty
  0xaba | 20 04       | local_get local_index:4
  0xabc | fb 16 0c    | ref_cast_non_null hty:Concrete(Module(12))
  0xabf | fb 02 0c 03 | struct_get struct_type_index:12 field_index:3
  0xac3 | 21 04       | local_set local_index:4
  0xac5 | 0c 01       | br relative_depth:1
  0xac7 | 0b          | end
  0xac8 | 20 05       | local_get local_index:5
  0xaca | d4          | ref_as_non_null
  0xacb | fb 02 09 03 | struct_get struct_type_index:9 field_index:3
  0xacf | 22 06       | local_tee local_index:6
  0xad1 | d1          | ref_is_null
  0xad2 | 04 40       | if blockty:Empty
  0xad4 | 20 04       | local_get local_index:4
  0xad6 | fb 16 0c    | ref_cast_non_null hty:Concrete(Module(12))
  0xad9 | fb 02 0c 03 | struct_get struct_type_index:12 field_index:3
  0xadd | 21 04       | local_set local_index:4
  0xadf | 0c 01       | br relative_depth:1
  0xae1 | 0b          | end
  0xae2 | 20 05       | local_get local_index:5
  0xae4 | d4          | ref_as_non_null
  0xae5 | fb 02 09 04 | struct_get struct_type_index:9 field_index:4
  0xae9 | 22 07       | local_tee local_index:7
  0xaeb | d1          | ref_is_null
  0xaec | 04 40       | if blockty:Empty
  0xaee | 20 04       | local_get local_index:4
  0xaf0 | fb 16 0c    | ref_cast_non_null hty:Concrete(Module(12))
  0xaf3 | fb 02 0c 03 | struct_get struct_type_index:12 field_index:3
  0xaf7 | 21 04       | local_set local_index:4
  0xaf9 | 0c 01       | br relative_depth:1
  0xafb | 0b          | end
  0xafc | 20 05       | local_get local_index:5
  0xafe | d4          | ref_as_non_null
  0xaff | fb 02 09 05 | struct_get struct_type_index:9 field_index:5
  0xb03 | 21 08       | local_set local_index:8
  0xb05 | 41 00       | i32_const value:0
  0xb07 | 21 09       | local_set local_index:9
  0xb09 | 03 40       | loop blockty:Empty
  0xb0b | 20 09       | local_get local_index:9
  0xb0d | 20 08       | local_get local_index:8
  0xb0f | 4f          | i32_ge_u
  0xb10 | 04 40       | if blockty:Empty
  0xb12 | 20 04       | local_get local_index:4
  0xb14 | fb 16 0c    | ref_cast_non_null hty:Concrete(Module(12))
  0xb17 | fb 02 0c 03 | struct_get struct_type_index:12 field_index:3
  0xb1b | 21 04       | local_set local_index:4
  0xb1d | 0c 02       | br relative_depth:2
  0xb1f | 0b          | end
  0xb20 | 20 06       | local_get local_index:6
  0xb22 | fb 02 04 03 | struct_get struct_type_index:4 field_index:3
  0xb26 | 20 09       | local_get local_index:9
  0xb28 | fb 0b 00    | array_get array_type_index:0
  0xb2b | 21 0a       | local_set local_index:10
  0xb2d | 20 0a       | local_get local_index:10
  0xb2f | 20 02       | local_get local_index:2
  0xb31 | d3          | ref_eq
  0xb32 | 04 40       | if blockty:Empty
  0xb34 | 20 07       | local_get local_index:7
  0xb36 | fb 02 04 03 | struct_get struct_type_index:4 field_index:3
  0xb3a | 20 09       | local_get local_index:9
  0xb3c | fb 0b 00    | array_get array_type_index:0
  0xb3f | fb 16 0e    | ref_cast_non_null hty:Concrete(Module(14))
  0xb42 | 0f          | return
  0xb43 | 0b          | end
  0xb44 | 20 09       | local_get local_index:9
  0xb46 | 41 01       | i32_const value:1
  0xb48 | 6a          | i32_add
  0xb49 | 21 09       | local_set local_index:9
  0xb4b | 0c 00       | br relative_depth:0
  0xb4d | 0b          | end
  0xb4e | 0b          | end
  0xb4f | d0 0e       | ref_null hty:Concrete(Module(14))
  0xb51 | 0f          | return
  0xb52 | 0b          | end
============== func 37 ====================
  0xb53 | a6 01       | size of function
  0xb55 | 04          | 4 local blocks
  0xb56 | 01 63 00    | 1 locals of type Ref((ref null (module 0)))
  0xb59 | 03 7f       | 3 locals of type I32
  0xb5b | 01 63 10    | 1 locals of type Ref((ref null (module 16)))
  0xb5e | 01 7f       | 1 locals of type I32
  0xb60 | 20 00       | local_get local_index:0
  0xb62 | fb 02 11 02 | struct_get struct_type_index:17 field_index:2
  0xb66 | 22 03       | local_tee local_index:3
  0xb68 | d1          | ref_is_null
  0xb69 | 04 40       | if blockty:Empty
  0xb6b | d0 0e       | ref_null hty:Concrete(Module(14))
  0xb6d | 0f          | return
  0xb6e | 0b          | end
  0xb6f | 20 01       | local_get local_index:1
  0xb71 | fb 16 03    | ref_cast_non_null hty:Concrete(Module(3))
  0xb74 | fb 02 03 01 | struct_get struct_type_index:3 field_index:1
  0xb78 | 20 02       | local_get local_index:2
  0xb7a | d4          | ref_as_non_null
  0xb7b | fb 02 0c 01 | struct_get struct_type_index:12 field_index:1
  0xb7f | 6a          | i32_add
  0xb80 | 20 00       | local_get local_index:0
  0xb82 | fb 02 11 05 | struct_get struct_type_index:17 field_index:5
  0xb86 | 70          | i32_rem_u
  0xb87 | 21 06       | local_set local_index:6
  0xb89 | 41 08       | i32_const value:8
  0xb8b | 21 08       | local_set local_index:8
  0xb8d | 03 40       | loop blockty:Empty
  0xb8f | 20 08       | local_get local_index:8
  0xb91 | 41 00       | i32_const value:0
  0xb93 | 4c          | i32_le_s
  0xb94 | 04 40       | if blockty:Empty
  0xb96 | d0 0e       | ref_null hty:Concrete(Module(14))
  0xb98 | 0f          | return
  0xb99 | 0b          | end
  0xb9a | 20 03       | local_get local_index:3
  0xb9c | d4          | ref_as_non_null
  0xb9d | 20 06       | local_get local_index:6
  0xb9f | fb 0b 00    | array_get array_type_index:0
  0xba2 | fb 17 10    | ref_cast_nullable hty:Concrete(Module(16))
  0xba5 | 22 07       | local_tee local_index:7
  0xba7 | d1          | ref_is_null
  0xba8 | 04 40       | if blockty:Empty
  0xbaa | d0 0e       | ref_null hty:Concrete(Module(14))
  0xbac | 0f          | return
  0xbad | 0b          | end
  0xbae | 20 07       | local_get local_index:7
  0xbb0 | fb 16 10    | ref_cast_non_null hty:Concrete(Module(16))
  0xbb3 | 22 07       | local_tee local_index:7
  0xbb5 | fb 02 10 00 | struct_get struct_type_index:16 field_index:0
  0xbb9 | 20 01       | local_get local_index:1
  0xbbb | d3          | ref_eq
  0xbbc | 20 07       | local_get local_index:7
  0xbbe | fb 02 10 01 | struct_get struct_type_index:16 field_index:1
  0xbc2 | 20 02       | local_get local_index:2
  0xbc4 | d3          | ref_eq
  0xbc5 | 71          | i32_and
  0xbc6 | 04 40       | if blockty:Empty
  0xbc8 | 20 07       | local_get local_index:7
  0xbca | 20 07       | local_get local_index:7
  0xbcc | fb 02 10 03 | struct_get struct_type_index:16 field_index:3
  0xbd0 | 41 01       | i32_const value:1
  0xbd2 | 6a          | i32_add
  0xbd3 | fb 05 10 03 | struct_set struct_type_index:16 field_index:3
  0xbd7 | 20 07       | local_get local_index:7
  0xbd9 | fb 02 10 02 | struct_get struct_type_index:16 field_index:2
  0xbdd | 0f          | return
  0xbde | 0b          | end
  0xbdf | 20 06       | local_get local_index:6
  0xbe1 | 41 01       | i32_const value:1
  0xbe3 | 6a          | i32_add
  0xbe4 | 20 00       | local_get local_index:0
  0xbe6 | fb 02 11 05 | struct_get struct_type_index:17 field_index:5
  0xbea | 70          | i32_rem_u
  0xbeb | 21 06       | local_set local_index:6
  0xbed | 20 08       | local_get local_index:8
  0xbef | 41 01       | i32_const value:1
  0xbf1 | 6b          | i32_sub
  0xbf2 | 21 08       | local_set local_index:8
  0xbf4 | 0c 00       | br relative_depth:0
  0xbf6 | 0b          | end
  0xbf7 | d0 0e       | ref_null hty:Concrete(Module(14))
  0xbf9 | 0f          | return
  0xbfa | 0b          | end
============== func 38 ====================
  0xbfb | 4a          | size of function
  0xbfc | 03          | 3 local blocks
  0xbfd | 01 63 00    | 1 locals of type Ref((ref null (module 0)))
  0xc00 | 01 7f       | 1 locals of type I32
  0xc02 | 01 64 10    | 1 locals of type Ref((ref (module 16)))
  0xc05 | 20 00       | local_get local_index:0
  0xc07 | fb 02 11 02 | struct_get struct_type_index:17 field_index:2
  0xc0b | 22 04       | local_tee local_index:4
  0xc0d | d1          | ref_is_null
  0xc0e | 04 40       | if blockty:Empty
  0xc10 | 0f          | return
  0xc11 | 0b          | end
  0xc12 | 20 01       | local_get local_index:1
  0xc14 | fb 16 03    | ref_cast_non_null hty:Concrete(Module(3))
  0xc17 | fb 02 03 01 | struct_get struct_type_index:3 field_index:1
  0xc1b | 20 02       | local_get local_index:2
  0xc1d | fb 16 0b    | ref_cast_non_null hty:Concrete(Module(11))
  0xc20 | fb 02 0b 01 | struct_get struct_type_index:11 field_index:1
  0xc24 | 6a          | i32_add
  0xc25 | 20 00       | local_get local_index:0
  0xc27 | fb 02 11 05 | struct_get struct_type_index:17 field_index:5
  0xc2b | 70          | i32_rem_u
  0xc2c | 21 05       | local_set local_index:5
  0xc2e | 20 01       | local_get local_index:1
  0xc30 | 20 02       | local_get local_index:2
  0xc32 | 20 03       | local_get local_index:3
  0xc34 | 41 01       | i32_const value:1
  0xc36 | fb 00 10    | struct_new struct_type_index:16
  0xc39 | 21 06       | local_set local_index:6
  0xc3b | 20 04       | local_get local_index:4
  0xc3d | d4          | ref_as_non_null
  0xc3e | 20 05       | local_get local_index:5
  0xc40 | 20 06       | local_get local_index:6
  0xc42 | fb 0e 00    | array_set array_type_index:0
  0xc45 | 0b          | end
============== func 39 ====================
  0xc46 | 58          | size of function
  0xc47 | 01          | 1 local blocks
  0xc48 | 04 64 00    | 4 locals of type Ref((ref (module 0)))
  0xc4b | d0 6d       | ref_null hty:Abstract { shared: false, ty: Eq }
  0xc4d | 41 14       | i32_const value:20
  0xc4f | fb 06 00    | array_new array_type_index:0
  0xc52 | 21 04       | local_set local_index:4
  0xc54 | d0 6d       | ref_null hty:Abstract { shared: false, ty: Eq }
  0xc56 | 41 00       | i32_const value:0
  0xc58 | fb 06 00    | array_new array_type_index:0
  0xc5b | 21 05       | local_set local_index:5
  0xc5d | d0 6d       | ref_null hty:Abstract { shared: false, ty: Eq }
  0xc5f | 41 00       | i32_const value:0
  0xc61 | fb 06 00    | array_new array_type_index:0
  0xc64 | 21 06       | local_set local_index:6
  0xc66 | d0 6d       | ref_null hty:Abstract { shared: false, ty: Eq }
  0xc68 | 41 00       | i32_const value:0
  0xc6a | fb 06 00    | array_new array_type_index:0
  0xc6d | 21 07       | local_set local_index:7
  0xc6f | 20 00       | local_get local_index:0
  0xc71 | fb 02 11 0b | struct_get struct_type_index:17 field_index:11
  0xc75 | 20 00       | local_get local_index:0
  0xc77 | 10 1f       | call function_index:31
  0xc79 | d0 03       | ref_null hty:Concrete(Module(3))
  0xc7b | 20 00       | local_get local_index:0
  0xc7d | fb 02 11 00 | struct_get struct_type_index:17 field_index:0
  0xc81 | 41 00       | i32_const value:0
  0xc83 | 41 00       | i32_const value:0
  0xc85 | 20 02       | local_get local_index:2
  0xc87 | 20 01       | local_get local_index:1
  0xc89 | 20 00       | local_get local_index:0
  0xc8b | 20 06       | local_get local_index:6
  0xc8d | 10 03       | call function_index:3
  0xc8f | 20 00       | local_get local_index:0
  0xc91 | 20 07       | local_get local_index:7
  0xc93 | 10 03       | call function_index:3
  0xc95 | 20 00       | local_get local_index:0
  0xc97 | 20 04       | local_get local_index:4
  0xc99 | 10 03       | call function_index:3
  0xc9b | fb 00 0f    | struct_new struct_type_index:15
  0xc9e | 0b          | end
============== func 40 ====================
  0xc9f | 06          | size of function
  0xca0 | 00          | 0 local blocks
  0xca1 | 20 00       | local_get local_index:0
  0xca3 | fb 1c       | ref_i31
  0xca5 | 0b          | end
============== func 41 ====================
  0xca6 | 14          | size of function
  0xca7 | 00          | 0 local blocks
  0xca8 | 20 00       | local_get local_index:0
  0xcaa | fb 14 6c    | ref_test_non_null hty:Abstract { shared: false, ty: I31 }
  0xcad | 04 7f       | if blockty:Type(I32)
  0xcaf | 20 00       | local_get local_index:0
  0xcb1 | fb 16 6c    | ref_cast_non_null hty:Abstract { shared: false, ty: I31 }
  0xcb4 | fb 1d       | i31_get_s
  0xcb6 | 05          | else
  0xcb7 | 41 00       | i32_const value:0
  0xcb9 | 0b          | end
  0xcba | 0b          | end
============== func 42 ====================
  0xcbb | 0b          | size of function
  0xcbc | 00          | 0 local blocks
  0xcbd | 20 00       | local_get local_index:0
  0xcbf | fb 02 0e 07 | struct_get struct_type_index:14 field_index:7
  0xcc3 | 41 00       | i32_const value:0
  0xcc5 | 4b          | i32_gt_u
  0xcc6 | 0b          | end
============== func 43 ====================
  0xcc7 | 09          | size of function
  0xcc8 | 00          | 0 local blocks
  0xcc9 | 20 00       | local_get local_index:0
  0xccb | 20 01       | local_get local_index:1
  0xccd | 11 2a 00    | call_indirect type_index:42 table_index:0
  0xcd0 | 0b          | end
============== func 44 ====================
  0xcd1 | 22          | size of function
  0xcd2 | 02          | 2 local blocks
  0xcd3 | 01 6d       | 1 locals of type Ref(eqref)
  0xcd5 | 03 7f       | 3 locals of type I32
  0xcd7 | 20 00       | local_get local_index:0
  0xcd9 | fb 02 0e 03 | struct_get struct_type_index:14 field_index:3
  0xcdd | 22 02       | local_tee local_index:2
  0xcdf | d1          | ref_is_null
  0xce0 | 04 40       | if blockty:Empty
  0xce2 | 0f          | return
  0xce3 | 0b          | end
  0xce4 | 20 02       | local_get local_index:2
  0xce6 | fb 16 01    | ref_cast_non_null hty:Concrete(Module(1))
  0xce9 | fb 0f       | array_len
  0xceb | 21 03       | local_set local_index:3
  0xced | 20 00       | local_get local_index:0
  0xcef | 20 01       | local_get local_index:1
  0xcf1 | 10 01       | call function_index:1
  0xcf3 | 0b          | end
============== func 45 ====================
  0xcf4 | 4c          | size of function
  0xcf5 | 02          | 2 local blocks
  0xcf6 | 01 63 0f    | 1 locals of type Ref((ref null (module 15)))
  0xcf9 | 01 6d       | 1 locals of type Ref(eqref)
  0xcfb | 20 01       | local_get local_index:1
  0xcfd | 10 22       | call function_index:34
  0xcff | 21 03       | local_set local_index:3
  0xd01 | 20 01       | local_get local_index:1
  0xd03 | fb 02 0f 03 | struct_get struct_type_index:15 field_index:3
  0xd07 | 22 02       | local_tee local_index:2
  0xd09 | d1          | ref_is_null
  0xd0a | 45          | i32_eqz
  0xd0b | 04 40       | if blockty:Empty
  0xd0d | 20 02       | local_get local_index:2
  0xd0f | d4          | ref_as_non_null
  0xd10 | 20 03       | local_get local_index:3
  0xd12 | d4          | ref_as_non_null
  0xd13 | 10 20       | call function_index:32
  0xd15 | 20 02       | local_get local_index:2
  0xd17 | d4          | ref_as_non_null
  0xd18 | 20 02       | local_get local_index:2
  0xd1a | d4          | ref_as_non_null
  0xd1b | fb 02 0f 04 | struct_get struct_type_index:15 field_index:4
  0xd1f | 41 01       | i32_const value:1
  0xd21 | 6a          | i32_add
  0xd22 | fb 05 0f 04 | struct_set struct_type_index:15 field_index:4
  0xd26 | 0b          | end
  0xd27 | 20 02       | local_get local_index:2
  0xd29 | d1          | ref_is_null
  0xd2a | 04 40       | if blockty:Empty
  0xd2c | 20 00       | local_get local_index:0
  0xd2e | d0 0f       | ref_null hty:Concrete(Module(15))
  0xd30 | fb 05 11 00 | struct_set struct_type_index:17 field_index:0
  0xd34 | 05          | else
  0xd35 | 20 00       | local_get local_index:0
  0xd37 | 20 02       | local_get local_index:2
  0xd39 | fb 05 11 00 | struct_set struct_type_index:17 field_index:0
  0xd3d | 0b          | end
  0xd3e | 20 03       | local_get local_index:3
  0xd40 | 0b          | end
============== func 46 ====================
  0xd41 | ee 03       | size of function
  0xd43 | 0b          | 11 local blocks
  0xd44 | 01 64 0e    | 1 locals of type Ref((ref (module 14)))
  0xd47 | 01 64 01    | 1 locals of type Ref((ref (module 1)))
  0xd4a | 01 64 0e    | 1 locals of type Ref((ref (module 14)))
  0xd4d | 01 64 01    | 1 locals of type Ref((ref (module 1)))
  0xd50 | 01 64 08    | 1 locals of type Ref((ref (module 8)))
  0xd53 | 01 64 09    | 1 locals of type Ref((ref (module 9)))
  0xd56 | 01 64 03    | 1 locals of type Ref((ref (module 3)))
  0xd59 | 03 64 04    | 3 locals of type Ref((ref (module 4)))
  0xd5c | 01 64 08    | 1 locals of type Ref((ref (module 8)))
  0xd5f | 01 64 04    | 1 locals of type Ref((ref (module 4)))
  0xd62 | 01 64 00    | 1 locals of type Ref((ref (module 0)))
  0xd65 | 41 f0 00    | i32_const value:112
  0xd68 | 41 d0 01    | i32_const value:208
  0xd6b | 41 fc 00    | i32_const value:124
  0xd6e | fb 08 01 03 | array_new_fixed array_type_index:1 array_size:3
  0xd72 | 21 02       | local_set local_index:2
  0xd74 | 41 f0 00    | i32_const value:112
  0xd77 | 41 21       | i32_const value:33
  0xd79 | 41 b0 01    | i32_const value:176
  0xd7c | 41 22       | i32_const value:34
  0xd7e | 41 b8 01    | i32_const value:184
  0xd81 | 41 22       | i32_const value:34
  0xd83 | 41 b0 01    | i32_const value:176
  0xd86 | 41 23       | i32_const value:35
  0xd88 | 41 b8 01    | i32_const value:184
  0xd8b | 41 23       | i32_const value:35
  0xd8d | 41 b0 01    | i32_const value:176
  0xd90 | 41 22       | i32_const value:34
  0xd92 | 41 b8 01    | i32_const value:184
  0xd95 | 41 21       | i32_const value:33
  0xd97 | 41 b0 01    | i32_const value:176
  0xd9a | 41 22       | i32_const value:34
  0xd9c | 41 b8 01    | i32_const value:184
  0xd9f | 41 22       | i32_const value:34
  0xda1 | 41 b0 01    | i32_const value:176
  0xda4 | 41 23       | i32_const value:35
  0xda6 | 41 b8 01    | i32_const value:184
  0xda9 | 41 23       | i32_const value:35
  0xdab | 41 b0 01    | i32_const value:176
  0xdae | 41 22       | i32_const value:34
  0xdb0 | 41 b8 01    | i32_const value:184
  0xdb3 | 41 21       | i32_const value:33
  0xdb5 | 41 b0 01    | i32_const value:176
  0xdb8 | 41 22       | i32_const value:34
  0xdba | 41 b8 01    | i32_const value:184
  0xdbd | 41 22       | i32_const value:34
  0xdbf | 41 b0 01    | i32_const value:176
  0xdc2 | 41 23       | i32_const value:35
  0xdc4 | 41 b8 01    | i32_const value:184
  0xdc7 | 41 23       | i32_const value:35
  0xdc9 | 41 b0 01    | i32_const value:176
  0xdcc | 41 22       | i32_const value:34
  0xdce | 41 b8 01    | i32_const value:184
  0xdd1 | 41 21       | i32_const value:33
  0xdd3 | 41 b0 01    | i32_const value:176
  0xdd6 | 41 22       | i32_const value:34
  0xdd8 | 41 b8 01    | i32_const value:184
  0xddb | 41 22       | i32_const value:34
  0xddd | 41 b0 01    | i32_const value:176
  0xde0 | 41 23       | i32_const value:35
  0xde2 | 41 b8 01    | i32_const value:184
  0xde5 | 41 23       | i32_const value:35
  0xde7 | 41 b0 01    | i32_const value:176
  0xdea | 41 22       | i32_const value:34
  0xdec | 41 b8 01    | i32_const value:184
  0xdef | 41 21       | i32_const value:33
  0xdf1 | 41 b0 01    | i32_const value:176
  0xdf4 | 41 22       | i32_const value:34
  0xdf6 | 41 b8 01    | i32_const value:184
  0xdf9 | 41 22       | i32_const value:34
  0xdfb | 41 b0 01    | i32_const value:176
  0xdfe | 41 23       | i32_const value:35
  0xe00 | 41 b8 01    | i32_const value:184
  0xe03 | 41 23       | i32_const value:35
  0xe05 | 41 b0 01    | i32_const value:176
  0xe08 | 41 22       | i32_const value:34
  0xe0a | 41 b8 01    | i32_const value:184
  0xe0d | 41 fc 00    | i32_const value:124
  0xe10 | fb 08 01 3e | array_new_fixed array_type_index:1 array_size:62
  0xe14 | 21 04       | local_set local_index:4
  0xe16 | 20 00       | local_get local_index:0
  0xe18 | 41 f7 00    | i32_const value:119
  0xe1b | 41 ef 00    | i32_const value:111
  0xe1e | 41 f2 00    | i32_const value:114
  0xe21 | 41 eb 00    | i32_const value:107
  0xe24 | 41 ec 00    | i32_const value:108
  0xe27 | 41 ef 00    | i32_const value:111
  0xe2a | 41 e1 00    | i32_const value:97
  0xe2d | 41 e4 00    | i32_const value:100
  0xe30 | fb 08 01 08 | array_new_fixed array_type_index:1 array_size:8
  0xe34 | 10 0d       | call function_index:13
  0xe36 | 21 05       | local_set local_index:5
  0xe38 | 20 00       | local_get local_index:0
  0xe3a | d0 6d       | ref_null hty:Abstract { shared: false, ty: Eq }
  0xe3c | 41 01       | i32_const value:1
  0xe3e | fb 06 00    | array_new array_type_index:0
  0xe41 | 10 03       | call function_index:3
  0xe43 | 21 08       | local_set local_index:8
  0xe45 | 20 08       | local_get local_index:8
  0xe47 | fb 02 04 03 | struct_get struct_type_index:4 field_index:3
  0xe4b | 41 00       | i32_const value:0
  0xe4d | 20 05       | local_get local_index:5
  0xe4f | fb 0e 00    | array_set array_type_index:0
  0xe52 | 20 00       | local_get local_index:0
  0xe54 | fb 02 11 0a | struct_get struct_type_index:17 field_index:10
  0xe58 | 20 00       | local_get local_index:0
  0xe5a | 10 1f       | call function_index:31
  0xe5c | d0 6d       | ref_null hty:Abstract { shared: false, ty: Eq }
  0xe5e | 20 02       | local_get local_index:2
  0xe60 | 20 08       | local_get local_index:8
  0xe62 | 41 00       | i32_const value:0
  0xe64 | 41 00       | i32_const value:0
  0xe66 | 41 00       | i32_const value:0
  0xe68 | 20 00       | local_get local_index:0
  0xe6a | fb 02 11 04 | struct_get struct_type_index:17 field_index:4
  0xe6e | 41 00       | i32_const value:0
  0xe70 | fb 00 0e    | struct_new struct_type_index:14
  0xe73 | 22 07       | local_tee local_index:7
  0xe75 | fb 16 0e    | ref_cast_non_null hty:Concrete(Module(14))
  0xe78 | 21 03       | local_set local_index:3
  0xe7a | 20 00       | local_get local_index:0
  0xe7c | 20 00       | local_get local_index:0
  0xe7e | 41 e4 00    | i32_const value:100
  0xe81 | fb 1c       | ref_i31
  0xe83 | 20 03       | local_get local_index:3
  0xe85 | 20 05       | local_get local_index:5
  0xe87 | 10 27       | call function_index:39
  0xe89 | fb 05 11 00 | struct_set struct_type_index:17 field_index:0
  0xe8d | d0 6d       | ref_null hty:Abstract { shared: false, ty: Eq }
  0xe8f | 41 04       | i32_const value:4
  0xe91 | fb 06 00    | array_new array_type_index:0
  0xe94 | 21 0d       | local_set local_index:13
  0xe96 | 20 0d       | local_get local_index:13
  0xe98 | 41 00       | i32_const value:0
  0xe9a | 41 00       | i32_const value:0
  0xe9c | 10 28       | call function_index:40
  0xe9e | d4          | ref_as_non_null
  0xe9f | fb 0e 00    | array_set array_type_index:0
  0xea2 | 20 0d       | local_get local_index:13
  0xea4 | 41 01       | i32_const value:1
  0xea6 | 41 01       | i32_const value:1
  0xea8 | 10 28       | call function_index:40
  0xeaa | fb 0e 00    | array_set array_type_index:0
  0xead | 20 0d       | local_get local_index:13
  0xeaf | 41 02       | i32_const value:2
  0xeb1 | 41 02       | i32_const value:2
  0xeb3 | 10 28       | call function_index:40
  0xeb5 | fb 0e 00    | array_set array_type_index:0
  0xeb8 | 20 0d       | local_get local_index:13
  0xeba | 41 03       | i32_const value:3
  0xebc | 41 03       | i32_const value:3
  0xebe | 10 28       | call function_index:40
  0xec0 | fb 0e 00    | array_set array_type_index:0
  0xec3 | 20 00       | local_get local_index:0
  0xec5 | fb 02 11 0a | struct_get struct_type_index:17 field_index:10
  0xec9 | 20 00       | local_get local_index:0
  0xecb | 10 1f       | call function_index:31
  0xecd | d0 6d       | ref_null hty:Abstract { shared: false, ty: Eq }
  0xecf | 20 04       | local_get local_index:4
  0xed1 | 20 00       | local_get local_index:0
  0xed3 | 20 0d       | local_get local_index:13
  0xed5 | 10 03       | call function_index:3
  0xed7 | 41 00       | i32_const value:0
  0xed9 | 41 00       | i32_const value:0
  0xedb | 41 00       | i32_const value:0
  0xedd | 20 00       | local_get local_index:0
  0xedf | fb 02 11 04 | struct_get struct_type_index:17 field_index:4
  0xee3 | 41 00       | i32_const value:0
  0xee5 | fb 00 0e    | struct_new struct_type_index:14
  0xee8 | 21 01       | local_set local_index:1
  0xeea | 20 00       | local_get local_index:0
  0xeec | 10 06       | call function_index:6
  0xeee | 21 06       | local_set local_index:6
  0xef0 | 20 00       | local_get local_index:0
  0xef2 | fb 02 11 09 | struct_get struct_type_index:17 field_index:9
  0xef6 | 20 06       | local_get local_index:6
  0xef8 | fb 05 0c 04 | struct_set struct_type_index:12 field_index:4
  0xefc | 20 06       | local_get local_index:6
  0xefe | fb 02 09 03 | struct_get struct_type_index:9 field_index:3
  0xf02 | fb 02 04 03 | struct_get struct_type_index:4 field_index:3
  0xf06 | 41 00       | i32_const value:0
  0xf08 | 20 05       | local_get local_index:5
  0xf0a | fb 0e 00    | array_set array_type_index:0
  0xf0d | 20 06       | local_get local_index:6
  0xf0f | fb 02 09 04 | struct_get struct_type_index:9 field_index:4
  0xf13 | fb 02 04 03 | struct_get struct_type_index:4 field_index:3
  0xf17 | 41 00       | i32_const value:0
  0xf19 | 20 01       | local_get local_index:1
  0xf1b | fb 0e 00    | array_set array_type_index:0
  0xf1e | 20 06       | local_get local_index:6
  0xf20 | 41 01       | i32_const value:1
  0xf22 | fb 05 09 05 | struct_set struct_type_index:9 field_index:5
  0xf26 | 20 01       | local_get local_index:1
  0xf28 | 41 01       | i32_const value:1
  0xf2a | fb 05 0e 09 | struct_set struct_type_index:14 field_index:9
  0xf2e | 41 01       | i32_const value:1
  0xf30 | 0b          | end
============== func 47 ====================
  0xf31 | a1 03       | size of function
  0xf33 | 08          | 8 local blocks
  0xf34 | 03 6d       | 3 locals of type Ref(eqref)
  0xf36 | 03 7f       | 3 locals of type I32
  0xf38 | 01 64 0f    | 1 locals of type Ref((ref (module 15)))
  0xf3b | 01 64 08    | 1 locals of type Ref((ref (module 8)))
  0xf3e | 01 63 0e    | 1 locals of type Ref((ref null (module 14)))
  0xf41 | 01 64 0c    | 1 locals of type Ref((ref (module 12)))
  0xf44 | 01 7f       | 1 locals of type I32
  0xf46 | 01 64 00    | 1 locals of type Ref((ref (module 0)))
  0xf49 | 20 01       | local_get local_index:1
  0xf4b | fb 02 0f 07 | struct_get struct_type_index:15 field_index:7
  0xf4f | 21 03       | local_set local_index:3
  0xf51 | 20 01       | local_get local_index:1
  0xf53 | fb 02 0f 06 | struct_get struct_type_index:15 field_index:6
  0xf57 | fb 02 0e 04 | struct_get struct_type_index:14 field_index:4
  0xf5b | fb 02 04 03 | struct_get struct_type_index:4 field_index:3
  0xf5f | 21 0e       | local_set local_index:14
  0xf61 | 20 02       | local_get local_index:2
  0xf63 | 41 20       | i32_const value:32
  0xf65 | 4f          | i32_ge_u
  0xf66 | 20 02       | local_get local_index:2
  0xf68 | 41 2f       | i32_const value:47
  0xf6a | 4d          | i32_le_u
  0xf6b | 71          | i32_and
  0xf6c | 04 40       | if blockty:Empty
  0xf6e | 20 02       | local_get local_index:2
  0xf70 | 41 20       | i32_const value:32
  0xf72 | 6b          | i32_sub
  0xf73 | 21 0d       | local_set local_index:13
  0xf75 | 20 0d       | local_get local_index:13
  0xf77 | 20 0e       | local_get local_index:14
  0xf79 | fb 0f       | array_len
  0xf7b | 4f          | i32_ge_u
  0xf7c | 04 40       | if blockty:Empty
  0xf7e | 20 01       | local_get local_index:1
  0xf80 | 41 00       | i32_const value:0
  0xf82 | 10 28       | call function_index:40
  0xf84 | 10 20       | call function_index:32
  0xf86 | 05          | else
  0xf87 | 20 01       | local_get local_index:1
  0xf89 | 20 0e       | local_get local_index:14
  0xf8b | 20 0d       | local_get local_index:13
  0xf8d | fb 0b 00    | array_get array_type_index:0
  0xf90 | 10 20       | call function_index:32
  0xf92 | 0b          | end
  0xf93 | 41 00       | i32_const value:0
  0xf95 | 0f          | return
  0xf96 | 0b          | end
  0xf97 | 20 02       | local_get local_index:2
  0xf99 | 41 f0 00    | i32_const value:112
  0xf9c | 46          | i32_eq
  0xf9d | 04 40       | if blockty:Empty
  0xf9f | 20 01       | local_get local_index:1
  0xfa1 | 20 03       | local_get local_index:3
  0xfa3 | 10 20       | call function_index:32
  0xfa5 | 41 00       | i32_const value:0
  0xfa7 | 0f          | return
  0xfa8 | 0b          | end
  0xfa9 | 20 02       | local_get local_index:2
  0xfab | 41 b8 01    | i32_const value:184
  0xfae | 46          | i32_eq
  0xfaf | 04 40       | if blockty:Empty
  0xfb1 | 20 01       | local_get local_index:1
  0xfb3 | 10 21       | call function_index:33
  0xfb5 | 22 05       | local_tee local_index:5
  0xfb7 | d1          | ref_is_null
  0xfb8 | 04 40       | if blockty:Empty
  0xfba | 41 00       | i32_const value:0
  0xfbc | 0f          | return
  0xfbd | 0b          | end
  0xfbe | 20 01       | local_get local_index:1
  0xfc0 | 10 21       | call function_index:33
  0xfc2 | 22 04       | local_tee local_index:4
  0xfc4 | d1          | ref_is_null
  0xfc5 | 04 40       | if blockty:Empty
  0xfc7 | 20 01       | local_get local_index:1
  0xfc9 | 20 05       | local_get local_index:5
  0xfcb | 10 20       | call function_index:32
  0xfcd | 41 00       | i32_const value:0
  0xfcf | 0f          | return
  0xfd0 | 0b          | end
  0xfd1 | 20 04       | local_get local_index:4
  0xfd3 | 10 29       | call function_index:41
  0xfd5 | 21 06       | local_set local_index:6
  0xfd7 | 20 05       | local_get local_index:5
  0xfd9 | 10 29       | call function_index:41
  0xfdb | 21 07       | local_set local_index:7
  0xfdd | 20 06       | local_get local_index:6
  0xfdf | 20 07       | local_get local_index:7
  0xfe1 | 6c          | i32_mul
  0xfe2 | 21 08       | local_set local_index:8
  0xfe4 | 20 01       | local_get local_index:1
  0xfe6 | 20 08       | local_get local_index:8
  0xfe8 | 10 28       | call function_index:40
  0xfea | d4          | ref_as_non_null
  0xfeb | 10 20       | call function_index:32
  0xfed | 41 00       | i32_const value:0
  0xfef | 0f          | return
  0xff0 | 0b          | end
  0xff1 | 20 02       | local_get local_index:2
  0xff3 | 41 b0 01    | i32_const value:176
  0xff6 | 46          | i32_eq
  0xff7 | 04 40       | if blockty:Empty
  0xff9 | 20 01       | local_get local_index:1
  0xffb | 10 21       | call function_index:33
  0xffd | 22 05       | local_tee local_index:5
  0xfff | d1          | ref_is_null
 0x1000 | 04 40       | if blockty:Empty
 0x1002 | 41 00       | i32_const value:0
 0x1004 | 0f          | return
 0x1005 | 0b          | end
 0x1006 | 20 01       | local_get local_index:1
 0x1008 | 10 21       | call function_index:33
 0x100a | 22 04       | local_tee local_index:4
 0x100c | d1          | ref_is_null
 0x100d | 04 40       | if blockty:Empty
 0x100f | 20 01       | local_get local_index:1
 0x1011 | 20 05       | local_get local_index:5
 0x1013 | 10 20       | call function_index:32
 0x1015 | 41 00       | i32_const value:0
 0x1017 | 0f          | return
 0x1018 | 0b          | end
 0x1019 | 20 04       | local_get local_index:4
 0x101b | 10 29       | call function_index:41
 0x101d | 21 06       | local_set local_index:6
 0x101f | 20 05       | local_get local_index:5
 0x1021 | 10 29       | call function_index:41
 0x1023 | 21 07       | local_set local_index:7
 0x1025 | 20 06       | local_get local_index:6
 0x1027 | 20 07       | local_get local_index:7
 0x1029 | 6a          | i32_add
 0x102a | 21 08       | local_set local_index:8
 0x102c | 20 01       | local_get local_index:1
 0x102e | 20 08       | local_get local_index:8
 0x1030 | 10 28       | call function_index:40
 0x1032 | 10 20       | call function_index:32
 0x1034 | 41 00       | i32_const value:0
 0x1036 | 0f          | return
 0x1037 | 0b          | end
 0x1038 | 20 02       | local_get local_index:2
 0x103a | 41 fc 00    | i32_const value:124
 0x103d | 46          | i32_eq
 0x103e | 04 40       | if blockty:Empty
 0x1040 | 41 01       | i32_const value:1
 0x1042 | 0f          | return
 0x1043 | 0b          | end
 0x1044 | 20 02       | local_get local_index:2
 0x1046 | 41 d0 01    | i32_const value:208
 0x1049 | 46          | i32_eq
 0x104a | 04 40       | if blockty:Empty
 0x104c | 20 01       | local_get local_index:1
 0x104e | 10 21       | call function_index:33
 0x1050 | 22 03       | local_tee local_index:3
 0x1052 | d1          | ref_is_null
 0x1053 | 04 40       | if blockty:Empty
 0x1055 | 41 00       | i32_const value:0
 0x1057 | 0f          | return
 0x1058 | 0b          | end
 0x1059 | 20 02       | local_get local_index:2
 0x105b | 41 0f       | i32_const value:15
 0x105d | 71          | i32_and
 0x105e | 21 0d       | local_set local_index:13
 0x1060 | 20 0d       | local_get local_index:13
 0x1062 | 20 0e       | local_get local_index:14
 0x1064 | fb 0f       | array_len
 0x1066 | 4f          | i32_ge_u
 0x1067 | 04 40       | if blockty:Empty
 0x1069 | 20 01       | local_get local_index:1
 0x106b | 20 03       | local_get local_index:3
 0x106d | 10 20       | call function_index:32
 0x106f | 41 00       | i32_const value:0
 0x1071 | 0f          | return
 0x1072 | 0b          | end
 0x1073 | 20 0e       | local_get local_index:14
 0x1075 | 20 0d       | local_get local_index:13
 0x1077 | fb 0b 00    | array_get array_type_index:0
 0x107a | fb 16 08    | ref_cast_non_null hty:Concrete(Module(8))
 0x107d | 21 0a       | local_set local_index:10
 0x107f | 20 00       | local_get local_index:0
 0x1081 | 20 03       | local_get local_index:3
 0x1083 | 10 23       | call function_index:35
 0x1085 | fb 16 0c    | ref_cast_non_null hty:Concrete(Module(12))
 0x1088 | 21 0c       | local_set local_index:12
 0x108a | 20 00       | local_get local_index:0
 0x108c | 20 0a       | local_get local_index:10
 0x108e | 20 0c       | local_get local_index:12
 0x1090 | 10 25       | call function_index:37
 0x1092 | 22 0b       | local_tee local_index:11
 0x1094 | d1          | ref_is_null
 0x1095 | 04 40       | if blockty:Empty
 0x1097 | 20 00       | local_get local_index:0
 0x1099 | 20 03       | local_get local_index:3
 0x109b | 20 0a       | local_get local_index:10
 0x109d | 10 24       | call function_index:36
 0x109f | 22 0b       | local_tee local_index:11
 0x10a1 | d1          | ref_is_null
 0x10a2 | 04 40       | if blockty:Empty
 0x10a4 | 20 01       | local_get local_index:1
 0x10a6 | 20 03       | local_get local_index:3
 0x10a8 | 10 20       | call function_index:32
 0x10aa | 41 00       | i32_const value:0
 0x10ac | 0f          | return
 0x10ad | 0b          | end
 0x10ae | 20 00       | local_get local_index:0
 0x10b0 | 20 0a       | local_get local_index:10
 0x10b2 | 20 0c       | local_get local_index:12
 0x10b4 | 20 0b       | local_get local_index:11
 0x10b6 | 10 26       | call function_index:38
 0x10b8 | 0b          | end
 0x10b9 | 20 00       | local_get local_index:0
 0x10bb | 20 03       | local_get local_index:3
 0x10bd | 20 0b       | local_get local_index:11
 0x10bf | 20 0a       | local_get local_index:10
 0x10c1 | 10 27       | call function_index:39
 0x10c3 | 21 09       | local_set local_index:9
 0x10c5 | 20 00       | local_get local_index:0
 0x10c7 | 20 09       | local_get local_index:9
 0x10c9 | fb 05 11 00 | struct_set struct_type_index:17 field_index:0
 0x10cd | 41 00       | i32_const value:0
 0x10cf | 0f          | return
 0x10d0 | 0b          | end
 0x10d1 | 41 00       | i32_const value:0
 0x10d3 | 0b          | end
============== func 48 ====================
 0x10d4 | ca 02       | size of function
 0x10d6 | 07          | 7 local blocks
 0x10d7 | 01 63 0f    | 1 locals of type Ref((ref null (module 15)))
 0x10da | 01 63 0e    | 1 locals of type Ref((ref null (module 14)))
 0x10dd | 02 7f       | 2 locals of type I32
 0x10df | 02 6d       | 2 locals of type Ref(eqref)
 0x10e1 | 01 7f       | 1 locals of type I32
 0x10e3 | 01 64 01    | 1 locals of type Ref((ref (module 1)))
 0x10e6 | 01 7f       | 1 locals of type I32
 0x10e8 | 02 40       | block blockty:Empty
 0x10ea | 03 40       | loop blockty:Empty
 0x10ec | 20 00       | local_get local_index:0
 0x10ee | fb 02 11 00 | struct_get struct_type_index:17 field_index:0
 0x10f2 | 22 01       | local_tee local_index:1
 0x10f4 | d1          | ref_is_null
 0x10f5 | 04 40       | if blockty:Empty
 0x10f7 | 0c 02       | br relative_depth:2
 0x10f9 | 0b          | end
 0x10fa | 20 01       | local_get local_index:1
 0x10fc | d4          | ref_as_non_null
 0x10fd | fb 02 0f 07 | struct_get struct_type_index:15 field_index:7
 0x1101 | 21 05       | local_set local_index:5
 0x1103 | 20 01       | local_get local_index:1
 0x1105 | d4          | ref_as_non_null
 0x1106 | fb 02 0f 06 | struct_get struct_type_index:15 field_index:6
 0x110a | 22 02       | local_tee local_index:2
 0x110c | 20 02       | local_get local_index:2
 0x110e | fb 02 0e 06 | struct_get struct_type_index:14 field_index:6
 0x1112 | 41 01       | i32_const value:1
 0x1114 | 6a          | i32_add
 0x1115 | 21 07       | local_set local_index:7
 0x1117 | 20 02       | local_get local_index:2
 0x1119 | 20 07       | local_get local_index:7
 0x111b | fb 05 0e 06 | struct_set struct_type_index:14 field_index:6
 0x111f | 20 07       | local_get local_index:7
 0x1121 | 20 02       | local_get local_index:2
 0x1123 | fb 02 0e 08 | struct_get struct_type_index:14 field_index:8
 0x1127 | 46          | i32_eq
 0x1128 | 20 00       | local_get local_index:0
 0x112a | fb 02 11 01 | struct_get struct_type_index:17 field_index:1
 0x112e | 71          | i32_and
 0x112f | 04 40       | if blockty:Empty
 0x1131 | 20 02       | local_get local_index:2
 0x1133 | fb 02 0e 09 | struct_get struct_type_index:14 field_index:9
 0x1137 | 41 01       | i32_const value:1
 0x1139 | 46          | i32_eq
 0x113a | 04 40       | if blockty:Empty
 0x113c | 20 02       | local_get local_index:2
 0x113e | 10 2a       | call function_index:42
 0x1140 | 45          | i32_eqz
 0x1141 | 04 40       | if blockty:Empty
 0x1143 | 20 02       | local_get local_index:2
 0x1145 | 20 05       | local_get local_index:5
 0x1147 | fb 16 03    | ref_cast_non_null hty:Concrete(Module(3))
 0x114a | fb 02 03 01 | struct_get struct_type_index:3 field_index:1
 0x114e | 10 2c       | call function_index:44
 0x1150 | 0b          | end
 0x1151 | 0b          | end
 0x1152 | 0b          | end
 0x1153 | 20 02       | local_get local_index:2
 0x1155 | d4          | ref_as_non_null
 0x1156 | 10 2a       | call function_index:42
 0x1158 | 04 40       | if blockty:Empty
 0x115a | 20 02       | local_get local_index:2
 0x115c | fb 02 0e 07 | struct_get struct_type_index:14 field_index:7
 0x1160 | 21 09       | local_set local_index:9
 0x1162 | 20 01       | local_get local_index:1
 0x1164 | d4          | ref_as_non_null
 0x1165 | 20 09       | local_get local_index:9
 0x1167 | 10 2b       | call function_index:43
 0x1169 | 1a          | drop
 0x116a | 20 00       | local_get local_index:0
 0x116c | 20 01       | local_get local_index:1
 0x116e | d4          | ref_as_non_null
 0x116f | 10 2d       | call function_index:45
 0x1171 | 21 06       | local_set local_index:6
 0x1173 | 0c 01       | br relative_depth:1
 0x1175 | 05          | else
 0x1176 | 20 02       | local_get local_index:2
 0x1178 | fb 02 0e 03 | struct_get struct_type_index:14 field_index:3
 0x117c | fb 16 05    | ref_cast_non_null hty:Concrete(Module(5))
 0x117f | fb 02 05 03 | struct_get struct_type_index:5 field_index:3
 0x1183 | 21 08       | local_set local_index:8
 0x1185 | 03 40       | loop blockty:Empty
 0x1187 | 20 00       | local_get local_index:0
 0x1189 | fb 02 11 00 | struct_get struct_type_index:17 field_index:0
 0x118d | 21 01       | local_set local_index:1
 0x118f | d1          | ref_is_null
 0x1190 | 45          | i32_eqz
 0x1191 | 04 40       | if blockty:Empty
 0x1193 | 20 01       | local_get local_index:1
 0x1195 | d4          | ref_as_non_null
 0x1196 | fb 02 0f 04 | struct_get struct_type_index:15 field_index:4
 0x119a | 21 04       | local_set local_index:4
 0x119c | 20 01       | local_get local_index:1
 0x119e | d4          | ref_as_non_null
 0x119f | fb 02 0f 06 | struct_get struct_type_index:15 field_index:6
 0x11a3 | 22 02       | local_tee local_index:2
 0x11a5 | fb 02 0e 03 | struct_get struct_type_index:14 field_index:3
 0x11a9 | fb 16 05    | ref_cast_non_null hty:Concrete(Module(5))
 0x11ac | fb 02 05 03 | struct_get struct_type_index:5 field_index:3
 0x11b0 | 22 08       | local_tee local_index:8
 0x11b2 | fb 0f       | array_len
 0x11b4 | 20 04       | local_get local_index:4
 0x11b6 | 4d          | i32_le_u
 0x11b7 | 04 40       | if blockty:Empty
 0x11b9 | 20 00       | local_get local_index:0
 0x11bb | 20 01       | local_get local_index:1
 0x11bd | d4          | ref_as_non_null
 0x11be | 10 2d       | call function_index:45
 0x11c0 | 21 06       | local_set local_index:6
 0x11c2 | 0c 02       | br relative_depth:2
 0x11c4 | 0b          | end
 0x11c5 | 20 08       | local_get local_index:8
 0x11c7 | 20 04       | local_get local_index:4
 0x11c9 | fb 0d 01    | array_get_u array_type_index:1
 0x11cc | 21 03       | local_set local_index:3
 0x11ce | 20 00       | local_get local_index:0
 0x11d0 | 20 01       | local_get local_index:1
 0x11d2 | d4          | ref_as_non_null
 0x11d3 | 20 03       | local_get local_index:3
 0x11d5 | 10 2f       | call function_index:47
 0x11d7 | 04 40       | if blockty:Empty
 0x11d9 | 20 00       | local_get local_index:0
 0x11db | 20 01       | local_get local_index:1
 0x11dd | d4          | ref_as_non_null
 0x11de | 10 2d       | call function_index:45
 0x11e0 | 21 06       | local_set local_index:6
 0x11e2 | 0c 02       | br relative_depth:2
 0x11e4 | 0b          | end
 0x11e5 | 20 00       | local_get local_index:0
 0x11e7 | fb 02 11 00 | struct_get struct_type_index:17 field_index:0
 0x11eb | 20 01       | local_get local_index:1
 0x11ed | d3          | ref_eq
 0x11ee | 04 40       | if blockty:Empty
 0x11f0 | 20 01       | local_get local_index:1
 0x11f2 | d4          | ref_as_non_null
 0x11f3 | 20 04       | local_get local_index:4
 0x11f5 | 41 01       | i32_const value:1
 0x11f7 | 6a          | i32_add
 0x11f8 | fb 05 0f 04 | struct_set struct_type_index:15 field_index:4
 0x11fc | 05          | else
 0x11fd | 20 00       | local_get local_index:0
 0x11ff | fb 02 11 00 | struct_get struct_type_index:17 field_index:0
 0x1203 | d4          | ref_as_non_null
 0x1204 | fb 02 0f 04 | struct_get struct_type_index:15 field_index:4
 0x1208 | 45          | i32_eqz
 0x1209 | 04 40       | if blockty:Empty
 0x120b | 0c 05       | br relative_depth:5
 0x120d | 0b          | end
 0x120e | 0b          | end
 0x120f | 0c 01       | br relative_depth:1
 0x1211 | 0b          | end
 0x1212 | 0b          | end
 0x1213 | 0b          | end
 0x1214 | 20 06       | local_get local_index:6
 0x1216 | 10 29       | call function_index:41
 0x1218 | 10 00       | call function_index:0
 0x121a | 0b          | end
 0x121b | 0b          | end
 0x121c | 41 01       | i32_const value:1
 0x121e | 0f          | return
 0x121f | 0b          | end
 0x1220 | 00 9a 13    | custom section
 0x1223 | 04 6e 61 6d | name: "name"
        | 65         
 0x1228 | 01 a0 04    | function name section
 0x122b | 21          | 33 count
 0x122c | 00 0c 72 65 | Naming { index: 0, name: "reportResult" }
        | 70 6f 72 74
        | 52 65 73 75
        | 6c 74      
 0x123a | 01 0f 74 72 | Naming { index: 1, name: "translateMethod" }
        | 61 6e 73 6c
        | 61 74 65 4d
        | 65 74 68 6f
        | 64         
 0x124b | 02 08 64 65 | Naming { index: 2, name: "debugLog" }
        | 62 75 67 4c
        | 6f 67      
 0x1255 | 03 08 6e 65 | Naming { index: 3, name: "newArray" }
        | 77 41 72 72
        | 61 79      
 0x125f | 04 0c 6e 65 | Naming { index: 4, name: "newByteArray" }
        | 77 42 79 74
        | 65 41 72 72
        | 61 79      
 0x126d | 05 0c 6e 65 | Naming { index: 5, name: "newWordArray" }
        | 77 57 6f 72
        | 64 41 72 72
        | 61 79      
 0x127b | 06 0d 6e 65 | Naming { index: 6, name: "newDictionary" }
        | 77 44 69 63
        | 74 69 6f 6e
        | 61 72 79   
 0x128a | 07 0b 6c 69 | Naming { index: 7, name: "linkObjects" }
        | 6e 6b 4f 62
        | 6a 65 63 74
        | 73         
 0x1297 | 08 10 6c 69 | Naming { index: 8, name: "linkClassObjects" }
        | 6e 6b 43 6c
        | 61 73 73 4f
        | 62 6a 65 63
        | 74 73      
 0x12a9 | 09 14 6c 69 | Naming { index: 9, name: "linkMetaclassObjects" }
        | 6e 6b 4d 65
        | 74 61 63 6c
        | 61 73 73 4f
        | 62 6a 65 63
        | 74 73      
 0x12bf | 0a 0d 6e 65 | Naming { index: 10, name: "newEmptyArray" }
        | 77 45 6d 70
        | 74 79 41 72
        | 72 61 79   
 0x12ce | 0b 18 6e 65 | Naming { index: 11, name: "newClassOfFormatWithName" }
        | 77 43 6c 61
        | 73 73 4f 66
        | 46 6f 72 6d
        | 61 74 57 69
        | 74 68 4e 61
        | 6d 65      
 0x12e8 | 0c 14 6e 65 | Naming { index: 12, name: "newMetaclassForClass" }
        | 77 4d 65 74
        | 61 63 6c 61
        | 73 73 46 6f
        | 72 43 6c 61
        | 73 73      
 0x12fe | 0d 12 6e 65 | Naming { index: 13, name: "newSymbolFromBytes" }
        | 77 53 79 6d
        | 62 6f 6c 46
        | 72 6f 6d 42
        | 79 74 65 73
 0x1312 | 1a 0b 61 72 | Naming { index: 26, name: "arrayOkayAt" }
        | 72 61 79 4f
        | 6b 61 79 41
        | 74         
 0x131f | 1b 0d 6f 62 | Naming { index: 27, name: "objectArrayAt" }
        | 6a 65 63 74
        | 41 72 72 61
        | 79 41 74   
 0x132e | 1f 10 6e 65 | Naming { index: 31, name: "nextIdentityHash" }
        | 78 74 49 64
        | 65 6e 74 69
        | 74 79 48 61
        | 73 68      
 0x1340 | 20 0b 70 75 | Naming { index: 32, name: "pushOnStack" }
        | 73 68 4f 6e
        | 53 74 61 63
        | 6b         
 0x134d | 21 0c 70 6f | Naming { index: 33, name: "popFromStack" }
        | 70 46 72 6f
        | 6d 53 74 61
        | 63 6b      
 0x135b | 22 0a 74 6f | Naming { index: 34, name: "topOfStack" }
        | 70 4f 66 53
        | 74 61 63 6b
 0x1367 | 23 0d 63 6c | Naming { index: 35, name: "classOfObject" }
        | 61 73 73 4f
        | 66 4f 62 6a
        | 65 63 74   
 0x1376 | 24 0c 6c 6f | Naming { index: 36, name: "lookupMethod" }
        | 6f 6b 75 70
        | 4d 65 74 68
        | 6f 64      
 0x1384 | 25 0d 6c 6f | Naming { index: 37, name: "lookupInCache" }
        | 6f 6b 75 70
        | 49 6e 43 61
        | 63 68 65   
 0x1393 | 26 0c 73 74 | Naming { index: 38, name: "storeInCache" }
        | 6f 72 65 49
        | 6e 43 61 63
        | 68 65      
 0x13a1 | 27 0a 6e 65 | Naming { index: 39, name: "newContext" }
        | 77 43 6f 6e
        | 74 65 78 74
 0x13ad | 28 14 73 6d | Naming { index: 40, name: "smallIntegerForValue" }
        | 61 6c 6c 49
        | 6e 74 65 67
        | 65 72 46 6f
        | 72 56 61 6c
        | 75 65      
 0x13c3 | 29 13 76 61 | Naming { index: 41, name: "valueOfSmallInteger" }
        | 6c 75 65 4f
        | 66 53 6d 61
        | 6c 6c 49 6e
        | 74 65 67 65
        | 72         
 0x13d8 | 2a 0c 69 73 | Naming { index: 42, name: "isTranslated" }
        | 54 72 61 6e
        | 73 6c 61 74
        | 65 64      
 0x13e6 | 2b 17 65 78 | Naming { index: 43, name: "executeTranslatedMethod" }
        | 65 63 75 74
        | 65 54 72 61
        | 6e 73 6c 61
        | 74 65 64 4d
        | 65 74 68 6f
        | 64         
 0x13ff | 2c 18 74 72 | Naming { index: 44, name: "triggerMethodTranslation" }
        | 69 67 67 65
        | 72 4d 65 74
        | 68 6f 64 54
        | 72 61 6e 73
        | 6c 61 74 69
        | 6f 6e      
 0x1419 | 2d 12 68 61 | Naming { index: 45, name: "handleMethodReturn" }
        | 6e 64 6c 65
        | 4d 65 74 68
        | 6f 64 52 65
        | 74 75 72 6e
 0x142d | 2f 11 69 6e | Naming { index: 47, name: "interpretBytecode" }
        | 74 65 72 70
        | 72 65 74 42
        | 79 74 65 63
        | 6f 64 65   
 0x1440 | 30 09 69 6e | Naming { index: 48, name: "interpret" }
        | 74 65 72 70
        | 72 65 74   
 0x144b | 02 f3 0b    | local section
 0x144e | 2e          | 46 count
 0x144f | 03          | function 3 local name section
 0x1450 | 02          | 2 count
 0x1451 | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x1455 | 01 05 61 72 | Naming { index: 1, name: "array" }
        | 72 61 79   
 0x145c | 04          | function 4 local name section
 0x145d | 02          | 2 count
 0x145e | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x1462 | 01 05 61 72 | Naming { index: 1, name: "array" }
        | 72 61 79   
 0x1469 | 05          | function 5 local name section
 0x146a | 02          | 2 count
 0x146b | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x146f | 01 05 61 72 | Naming { index: 1, name: "array" }
        | 72 61 79   
 0x1476 | 06          | function 6 local name section
 0x1477 | 01          | 1 count
 0x1478 | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x147c | 07          | function 7 local name section
 0x147d | 06          | 6 count
 0x147e | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x1482 | 01 07 6f 62 | Naming { index: 1, name: "objects" }
        | 6a 65 63 74
        | 73         
 0x148b | 02 0e 70 72 | Naming { index: 2, name: "previousObject" }
        | 65 76 69 6f
        | 75 73 4f 62
        | 6a 65 63 74
 0x149b | 03 0a 6e 65 | Naming { index: 3, name: "nextObject" }
        | 78 74 4f 62
        | 6a 65 63 74
 0x14a7 | 04 05 6c 69 | Naming { index: 4, name: "limit" }
        | 6d 69 74   
 0x14ae | 05 05 69 6e | Naming { index: 5, name: "index" }
        | 64 65 78   
 0x14b5 | 08          | function 8 local name section
 0x14b6 | 02          | 2 count
 0x14b7 | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x14bb | 01 05 63 6c | Naming { index: 1, name: "class" }
        | 61 73 73   
 0x14c2 | 09          | function 9 local name section
 0x14c3 | 02          | 2 count
 0x14c4 | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x14c8 | 01 09 6d 65 | Naming { index: 1, name: "metaclass" }
        | 74 61 63 6c
        | 61 73 73   
 0x14d3 | 0a          | function 10 local name section
 0x14d4 | 01          | 1 count
 0x14d5 | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x14d9 | 0b          | function 11 local name section
 0x14da | 03          | 3 count
 0x14db | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x14df | 01 06 66 6f | Naming { index: 1, name: "format" }
        | 72 6d 61 74
 0x14e7 | 02 04 6e 61 | Naming { index: 2, name: "name" }
        | 6d 65      
 0x14ed | 0c          | function 12 local name section
 0x14ee | 02          | 2 count
 0x14ef | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x14f3 | 01 05 63 6c | Naming { index: 1, name: "class" }
        | 61 73 73   
 0x14fa | 0d          | function 13 local name section
 0x14fb | 02          | 2 count
 0x14fc | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x1500 | 01 05 62 79 | Naming { index: 1, name: "bytes" }
        | 74 65 73   
 0x1507 | 0e          | function 14 local name section
 0x1508 | 0a          | 10 count
 0x1509 | 00 0f 6d 65 | Naming { index: 0, name: "methodCacheSize" }
        | 74 68 6f 64
        | 43 61 63 68
        | 65 53 69 7a
        | 65         
 0x151a | 01 0b 66 69 | Naming { index: 1, name: "firstObject" }
        | 72 73 74 4f
        | 62 6a 65 63
        | 74         
 0x1527 | 02 02 76 6d | Naming { index: 2, name: "vm" }
 0x152b | 03 0b 63 6c | Naming { index: 3, name: "classObject" }
        | 61 73 73 4f
        | 62 6a 65 63
        | 74         
 0x1538 | 04 0d 63 6c | Naming { index: 4, name: "classBehavior" }
        | 61 73 73 42
        | 65 68 61 76
        | 69 6f 72   
 0x1547 | 05 15 63 6c | Naming { index: 5, name: "classClassDescription" }
        | 61 73 73 43
        | 6c 61 73 73
        | 44 65 73 63
        | 72 69 70 74
        | 69 6f 6e   
 0x155e | 06 0a 63 6c | Naming { index: 6, name: "classClass" }
        | 61 73 73 43
        | 6c 61 73 73
 0x156a | 07 0e 63 6c | Naming { index: 7, name: "classMetaclass" }
        | 61 73 73 4d
        | 65 74 61 63
        | 6c 61 73 73
 0x157a | 08 0b 63 6c | Naming { index: 8, name: "classSymbol" }
        | 61 73 73 53
        | 79 6d 62 6f
        | 6c         
 0x1587 | 09 11 63 6c | Naming { index: 9, name: "classSmallInteger" }
        | 61 73 73 53
        | 6d 61 6c 6c
        | 49 6e 74 65
        | 67 65 72   
 0x159a | 0f          | function 15 local name section
 0x159b | 01          | 1 count
 0x159c | 00 06 6d 65 | Naming { index: 0, name: "method" }
        | 74 68 6f 64
 0x15a4 | 10          | function 16 local name section
 0x15a5 | 02          | 2 count
 0x15a6 | 00 06 6d 65 | Naming { index: 0, name: "method" }
        | 74 68 6f 64
 0x15ae | 01 05 69 6e | Naming { index: 1, name: "index" }
        | 64 65 78   
 0x15b5 | 11          | function 17 local name section
 0x15b6 | 02          | 2 count
 0x15b7 | 00 07 63 6f | Naming { index: 0, name: "context" }
        | 6e 74 65 78
        | 74         
 0x15c0 | 01 0c 70 75 | Naming { index: 1, name: "pushedObject" }
        | 73 68 65 64
        | 4f 62 6a 65
        | 63 74      
 0x15ce | 12          | function 18 local name section
 0x15cf | 01          | 1 count
 0x15d0 | 00 07 63 6f | Naming { index: 0, name: "context" }
        | 6e 74 65 78
        | 74         
 0x15d9 | 13          | function 19 local name section
 0x15da | 01          | 1 count
 0x15db | 00 0c 73 6d | Naming { index: 0, name: "smallInteger" }
        | 61 6c 6c 49
        | 6e 74 65 67
        | 65 72      
 0x15e9 | 14          | function 20 local name section
 0x15ea | 01          | 1 count
 0x15eb | 00 05 76 61 | Naming { index: 0, name: "value" }
        | 6c 75 65   
 0x15f2 | 15          | function 21 local name section
 0x15f3 | 01          | 1 count
 0x15f4 | 00 06 6f 62 | Naming { index: 0, name: "object" }
        | 6a 65 63 74
 0x15fc | 16          | function 22 local name section
 0x15fd | 01          | 1 count
 0x15fe | 00 07 63 6f | Naming { index: 0, name: "context" }
        | 6e 74 65 78
        | 74         
 0x1607 | 17          | function 23 local name section
 0x1608 | 01          | 1 count
 0x1609 | 00 06 6d 65 | Naming { index: 0, name: "method" }
        | 74 68 6f 64
 0x1611 | 18          | function 24 local name section
 0x1612 | 02          | 2 count
 0x1613 | 00 07 63 6f | Naming { index: 0, name: "context" }
        | 6e 74 65 78
        | 74         
 0x161c | 01 05 69 6e | Naming { index: 1, name: "index" }
        | 64 65 78   
 0x1623 | 19          | function 25 local name section
 0x1624 | 01          | 1 count
 0x1625 | 00 07 63 6f | Naming { index: 0, name: "context" }
        | 6e 74 65 78
        | 74         
 0x162e | 1a          | function 26 local name section
 0x162f | 03          | 3 count
 0x1630 | 00 05 61 72 | Naming { index: 0, name: "array" }
        | 72 61 79   
 0x1637 | 01 05 69 6e | Naming { index: 1, name: "index" }
        | 64 65 78   
 0x163e | 02 06 6c 65 | Naming { index: 2, name: "length" }
        | 6e 67 74 68
 0x1646 | 1b          | function 27 local name section
 0x1647 | 02          | 2 count
 0x1648 | 00 05 61 72 | Naming { index: 0, name: "array" }
        | 72 61 79   
 0x164f | 01 05 69 6e | Naming { index: 1, name: "index" }
        | 64 65 78   
 0x1656 | 1c          | function 28 local name section
 0x1657 | 02          | 2 count
 0x1658 | 00 05 61 72 | Naming { index: 0, name: "array" }
        | 72 61 79   
 0x165f | 01 05 69 6e | Naming { index: 1, name: "index" }
        | 64 65 78   
 0x1666 | 1d          | function 29 local name section
 0x1667 | 01          | 1 count
 0x1668 | 00 05 61 72 | Naming { index: 0, name: "array" }
        | 72 61 79   
 0x166f | 1e          | function 30 local name section
 0x1670 | 02          | 2 count
 0x1671 | 01 03 6c 65 | Naming { index: 1, name: "len" }
        | 6e         
 0x1676 | 02 01 69    | Naming { index: 2, name: "i" }
 0x1679 | 1f          | function 31 local name section
 0x167a | 01          | 1 count
 0x167b | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x167f | 20          | function 32 local name section
 0x1680 | 04          | 4 count
 0x1681 | 00 07 63 6f | Naming { index: 0, name: "context" }
        | 6e 74 65 78
        | 74         
 0x168a | 01 05 76 61 | Naming { index: 1, name: "value" }
        | 6c 75 65   
 0x1691 | 02 05 73 74 | Naming { index: 2, name: "stack" }
        | 61 63 6b   
 0x1698 | 03 02 73 70 | Naming { index: 3, name: "sp" }
 0x169c | 21          | function 33 local name section
 0x169d | 03          | 3 count
 0x169e | 00 07 63 6f | Naming { index: 0, name: "context" }
        | 6e 74 65 78
        | 74         
 0x16a7 | 01 05 73 74 | Naming { index: 1, name: "stack" }
        | 61 63 6b   
 0x16ae | 02 02 73 70 | Naming { index: 2, name: "sp" }
 0x16b2 | 22          | function 34 local name section
 0x16b3 | 03          | 3 count
 0x16b4 | 00 07 63 6f | Naming { index: 0, name: "context" }
        | 6e 74 65 78
        | 74         
 0x16bd | 01 05 73 74 | Naming { index: 1, name: "stack" }
        | 61 63 6b   
 0x16c4 | 02 02 73 70 | Naming { index: 2, name: "sp" }
 0x16c8 | 23          | function 35 local name section
 0x16c9 | 02          | 2 count
 0x16ca | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x16ce | 01 03 6f 62 | Naming { index: 1, name: "obj" }
        | 6a         
 0x16d3 | 24          | function 36 local name section
 0x16d4 | 0b          | 11 count
 0x16d5 | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x16d9 | 01 08 72 65 | Naming { index: 1, name: "receiver" }
        | 63 65 69 76
        | 65 72      
 0x16e3 | 02 08 73 65 | Naming { index: 2, name: "selector" }
        | 6c 65 63 74
        | 6f 72      
 0x16ed | 03 05 63 6c | Naming { index: 3, name: "class" }
        | 61 73 73   
 0x16f4 | 04 0c 63 75 | Naming { index: 4, name: "currentClass" }
        | 72 72 65 6e
        | 74 43 6c 61
        | 73 73      
 0x1702 | 05 10 6d 65 | Naming { index: 5, name: "methodDictionary" }
        | 74 68 6f 64
        | 44 69 63 74
        | 69 6f 6e 61
        | 72 79      
 0x1714 | 06 04 6b 65 | Naming { index: 6, name: "keys" }
        | 79 73      
 0x171a | 07 06 76 61 | Naming { index: 7, name: "values" }
        | 6c 75 65 73
 0x1722 | 08 05 63 6f | Naming { index: 8, name: "count" }
        | 75 6e 74   
 0x1729 | 09 01 69    | Naming { index: 9, name: "i" }
 0x172c | 0a 03 6b 65 | Naming { index: 10, name: "key" }
        | 79         
 0x1731 | 25          | function 37 local name section
 0x1732 | 09          | 9 count
 0x1733 | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x1737 | 01 08 73 65 | Naming { index: 1, name: "selector" }
        | 6c 65 63 74
        | 6f 72      
 0x1741 | 02 0d 72 65 | Naming { index: 2, name: "receiverClass" }
        | 63 65 69 76
        | 65 72 43 6c
        | 61 73 73   
 0x1750 | 03 05 63 61 | Naming { index: 3, name: "cache" }
        | 63 68 65   
 0x1757 | 04 09 63 61 | Naming { index: 4, name: "cacheSize" }
        | 63 68 65 53
        | 69 7a 65   
 0x1762 | 05 04 68 61 | Naming { index: 5, name: "hash" }
        | 73 68      
 0x1768 | 06 05 69 6e | Naming { index: 6, name: "index" }
        | 64 65 78   
 0x176f | 07 05 65 6e | Naming { index: 7, name: "entry" }
        | 74 72 79   
 0x1776 | 08 0a 70 72 | Naming { index: 8, name: "probeLimit" }
        | 6f 62 65 4c
        | 69 6d 69 74
 0x1782 | 26          | function 38 local name section
 0x1783 | 07          | 7 count
 0x1784 | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x1788 | 01 08 73 65 | Naming { index: 1, name: "selector" }
        | 6c 65 63 74
        | 6f 72      
 0x1792 | 02 0d 72 65 | Naming { index: 2, name: "receiverClass" }
        | 63 65 69 76
        | 65 72 43 6c
        | 61 73 73   
 0x17a1 | 03 06 6d 65 | Naming { index: 3, name: "method" }
        | 74 68 6f 64
 0x17a9 | 04 05 63 61 | Naming { index: 4, name: "cache" }
        | 63 68 65   
 0x17b0 | 05 05 69 6e | Naming { index: 5, name: "index" }
        | 64 65 78   
 0x17b7 | 06 05 65 6e | Naming { index: 6, name: "entry" }
        | 74 72 79   
 0x17be | 27          | function 39 local name section
 0x17bf | 08          | 8 count
 0x17c0 | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x17c4 | 01 08 72 65 | Naming { index: 1, name: "receiver" }
        | 63 65 69 76
        | 65 72      
 0x17ce | 02 06 6d 65 | Naming { index: 2, name: "method" }
        | 74 68 6f 64
 0x17d6 | 03 08 73 65 | Naming { index: 3, name: "selector" }
        | 6c 65 63 74
        | 6f 72      
 0x17e0 | 04 05 73 74 | Naming { index: 4, name: "stack" }
        | 61 63 6b   
 0x17e7 | 05 05 73 6c | Naming { index: 5, name: "slots" }
        | 6f 74 73   
 0x17ee | 06 04 61 72 | Naming { index: 6, name: "args" }
        | 67 73      
 0x17f4 | 07 05 74 65 | Naming { index: 7, name: "temps" }
        | 6d 70 73   
 0x17fb | 28          | function 40 local name section
 0x17fc | 01          | 1 count
 0x17fd | 00 05 76 61 | Naming { index: 0, name: "value" }
        | 6c 75 65   
 0x1804 | 29          | function 41 local name section
 0x1805 | 01          | 1 count
 0x1806 | 00 03 6f 62 | Naming { index: 0, name: "obj" }
        | 6a         
 0x180b | 2a          | function 42 local name section
 0x180c | 01          | 1 count
 0x180d | 00 06 6d 65 | Naming { index: 0, name: "method" }
        | 74 68 6f 64
 0x1815 | 2b          | function 43 local name section
 0x1816 | 02          | 2 count
 0x1817 | 00 07 63 6f | Naming { index: 0, name: "context" }
        | 6e 74 65 78
        | 74         
 0x1820 | 01 09 66 75 | Naming { index: 1, name: "funcIndex" }
        | 6e 63 49 6e
        | 64 65 78   
 0x182b | 2c          | function 44 local name section
 0x182c | 06          | 6 count
 0x182d | 00 06 6d 65 | Naming { index: 0, name: "method" }
        | 74 68 6f 64
 0x1835 | 01 0c 69 64 | Naming { index: 1, name: "identityHash" }
        | 65 6e 74 69
        | 74 79 48 61
        | 73 68      
 0x1843 | 02 05 73 6c | Naming { index: 2, name: "slots" }
        | 6f 74 73   
 0x184a | 03 0b 62 79 | Naming { index: 3, name: "bytecodeLen" }
        | 74 65 63 6f
        | 64 65 4c 65
        | 6e         
 0x1857 | 04 12 66 75 | Naming { index: 4, name: "functionIndexIndex" }
        | 6e 63 74 69
        | 6f 6e 49 6e
        | 64 65 78 49
        | 6e 64 65 78
 0x186b | 05 0c 6d 65 | Naming { index: 5, name: "memoryOffset" }
        | 6d 6f 72 79
        | 4f 66 66 73
        | 65 74      
 0x1879 | 2d          | function 45 local name section
 0x187a | 04          | 4 count
 0x187b | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x187f | 01 07 63 6f | Naming { index: 1, name: "context" }
        | 6e 74 65 78
        | 74         
 0x1888 | 02 06 73 65 | Naming { index: 2, name: "sender" }
        | 6e 64 65 72
 0x1890 | 03 06 72 65 | Naming { index: 3, name: "result" }
        | 73 75 6c 74
 0x1898 | 2e          | function 46 local name section
 0x1899 | 0e          | 14 count
 0x189a | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x189e | 01 0e 77 6f | Naming { index: 1, name: "workloadMethod" }
        | 72 6b 6c 6f
        | 61 64 4d 65
        | 74 68 6f 64
 0x18ae | 02 0d 6d 61 | Naming { index: 2, name: "mainBytecodes" }
        | 69 6e 42 79
        | 74 65 63 6f
        | 64 65 73   
 0x18bd | 03 0a 6d 61 | Naming { index: 3, name: "mainMethod" }
        | 69 6e 4d 65
        | 74 68 6f 64
 0x18c9 | 04 11 77 6f | Naming { index: 4, name: "workloadBytecodes" }
        | 72 6b 6c 6f
        | 61 64 42 79
        | 74 65 63 6f
        | 64 65 73   
 0x18dc | 05 10 77 6f | Naming { index: 5, name: "workloadSelector" }
        | 72 6b 6c 6f
        | 61 64 53 65
        | 6c 65 63 74
        | 6f 72      
 0x18ee | 06 10 6d 65 | Naming { index: 6, name: "methodDictionary" }
        | 74 68 6f 64
        | 44 69 63 74
        | 69 6f 6e 61
        | 72 79      
 0x1900 | 07 09 6e 65 | Naming { index: 7, name: "newObject" }
        | 77 4f 62 6a
        | 65 63 74   
 0x190b | 08 08 6c 69 | Naming { index: 8, name: "literals" }
        | 74 65 72 61
        | 6c 73      
 0x1915 | 09 04 6b 65 | Naming { index: 9, name: "keys" }
        | 79 73      
 0x191b | 0a 06 76 61 | Naming { index: 10, name: "values" }
        | 6c 75 65 73
 0x1923 | 0b 0b 65 6d | Naming { index: 11, name: "emptySymbol" }
        | 70 74 79 53
        | 79 6d 62 6f
        | 6c         
 0x1930 | 0c 11 65 6d | Naming { index: 12, name: "emptyInstVarNames" }
        | 70 74 79 49
        | 6e 73 74 56
        | 61 72 4e 61
        | 6d 65 73   
 0x1943 | 0d 10 77 6f | Naming { index: 13, name: "workloadLiterals" }
        | 72 6b 6c 6f
        | 61 64 4c 69
        | 74 65 72 61
        | 6c 73      
 0x1955 | 2f          | function 47 local name section
 0x1956 | 0f          | 15 count
 0x1957 | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x195b | 01 07 63 6f | Naming { index: 1, name: "context" }
        | 6e 74 65 78
        | 74         
 0x1964 | 02 08 62 79 | Naming { index: 2, name: "bytecode" }
        | 74 65 63 6f
        | 64 65      
 0x196e | 03 08 72 65 | Naming { index: 3, name: "receiver" }
        | 63 65 69 76
        | 65 72      
 0x1978 | 04 06 76 61 | Naming { index: 4, name: "value1" }
        | 6c 75 65 31
 0x1980 | 05 06 76 61 | Naming { index: 5, name: "value2" }
        | 6c 75 65 32
 0x1988 | 06 04 69 6e | Naming { index: 6, name: "int1" }
        | 74 31      
 0x198e | 07 04 69 6e | Naming { index: 7, name: "int2" }
        | 74 32      
 0x1994 | 08 06 72 65 | Naming { index: 8, name: "result" }
        | 73 75 6c 74
 0x199c | 09 0a 6e 65 | Naming { index: 9, name: "newContext" }
        | 77 43 6f 6e
        | 74 65 78 74
 0x19a8 | 0a 08 73 65 | Naming { index: 10, name: "selector" }
        | 6c 65 63 74
        | 6f 72      
 0x19b2 | 0b 06 6d 65 | Naming { index: 11, name: "method" }
        | 74 68 6f 64
 0x19ba | 0c 0d 72 65 | Naming { index: 12, name: "receiverClass" }
        | 63 65 69 76
        | 65 72 43 6c
        | 61 73 73   
 0x19c9 | 0d 0d 73 65 | Naming { index: 13, name: "selectorIndex" }
        | 6c 65 63 74
        | 6f 72 49 6e
        | 64 65 78   
 0x19d8 | 0e 08 6c 69 | Naming { index: 14, name: "literals" }
        | 74 65 72 61
        | 6c 73      
 0x19e2 | 30          | function 48 local name section
 0x19e3 | 0a          | 10 count
 0x19e4 | 00 02 76 6d | Naming { index: 0, name: "vm" }
 0x19e8 | 01 07 63 6f | Naming { index: 1, name: "context" }
        | 6e 74 65 78
        | 74         
 0x19f1 | 02 06 6d 65 | Naming { index: 2, name: "method" }
        | 74 68 6f 64
 0x19f9 | 03 08 62 79 | Naming { index: 3, name: "bytecode" }
        | 74 65 63 6f
        | 64 65      
 0x1a03 | 04 02 70 63 | Naming { index: 4, name: "pc" }
 0x1a07 | 05 08 72 65 | Naming { index: 5, name: "receiver" }
        | 63 65 69 76
        | 65 72      
 0x1a11 | 06 0b 72 65 | Naming { index: 6, name: "resultValue" }
        | 73 75 6c 74
        | 56 61 6c 75
        | 65         
 0x1a1e | 07 0f 69 6e | Naming { index: 7, name: "invocationCount" }
        | 76 6f 63 61
        | 74 69 6f 6e
        | 43 6f 75 6e
        | 74         
 0x1a2f | 08 05 73 6c | Naming { index: 8, name: "slots" }
        | 6f 74 73   
 0x1a36 | 09 09 66 75 | Naming { index: 9, name: "funcIndex" }
        | 6e 63 49 6e
        | 64 65 78   
 0x1a41 | 03 6c       | label section
 0x1a43 | 05          | 5 count
 0x1a44 | 07          | function 7 label name section
 0x1a45 | 01          | 1 count
 0x1a46 | 00 04 6c 69 | Naming { index: 0, name: "link" }
        | 6e 6b      
 0x1a4c | 1e          | function 30 label name section
 0x1a4d | 01          | 1 count
 0x1a4e | 01 04 63 6f | Naming { index: 1, name: "copy" }
        | 70 79      
 0x1a54 | 24          | function 36 label name section
 0x1a55 | 02          | 2 count
 0x1a56 | 00 0e 68 69 | Naming { index: 0, name: "hierarchy_loop" }
        | 65 72 61 72
        | 63 68 79 5f
        | 6c 6f 6f 70
 0x1a66 | 05 0b 73 65 | Naming { index: 5, name: "search_loop" }
        | 61 72 63 68
        | 5f 6c 6f 6f
        | 70         
 0x1a73 | 25          | function 37 label name section
 0x1a74 | 01          | 1 count
 0x1a75 | 01 0a 70 72 | Naming { index: 1, name: "probe_loop" }
        | 6f 62 65 5f
        | 6c 6f 6f 70
 0x1a81 | 30          | function 48 label name section
 0x1a82 | 03          | 3 count
 0x1a83 | 00 08 66 69 | Naming { index: 0, name: "finished" }
        | 6e 69 73 68
        | 65 64      
 0x1a8d | 01 0e 65 78 | Naming { index: 1, name: "execution_loop" }
        | 65 63 75 74
        | 69 6f 6e 5f
        | 6c 6f 6f 70
 0x1a9d | 07 10 69 6e | Naming { index: 7, name: "interpreter_loop" }
        | 74 65 72 70
        | 72 65 74 65
        | 72 5f 6c 6f
        | 6f 70      
 0x1aaf | 04 ce 01    | type name section
 0x1ab2 | 12          | 18 count
 0x1ab3 | 00 0b 6f 62 | Naming { index: 0, name: "objectArray" }
        | 6a 65 63 74
        | 41 72 72 61
        | 79         
 0x1ac0 | 01 09 62 79 | Naming { index: 1, name: "byteArray" }
        | 74 65 41 72
        | 72 61 79   
 0x1acb | 02 09 77 6f | Naming { index: 2, name: "wordArray" }
        | 72 64 41 72
        | 72 61 79   
 0x1ad6 | 03 06 4f 62 | Naming { index: 3, name: "Object" }
        | 6a 65 63 74
 0x1ade | 04 05 41 72 | Naming { index: 4, name: "Array" }
        | 72 61 79   
 0x1ae5 | 05 09 42 79 | Naming { index: 5, name: "ByteArray" }
        | 74 65 41 72
        | 72 61 79   
 0x1af0 | 06 09 57 6f | Naming { index: 6, name: "WordArray" }
        | 72 64 41 72
        | 72 61 79   
 0x1afb | 07 0e 56 61 | Naming { index: 7, name: "VariableObject" }
        | 72 69 61 62
        | 6c 65 4f 62
        | 6a 65 63 74
 0x1b0b | 08 06 53 79 | Naming { index: 8, name: "Symbol" }
        | 6d 62 6f 6c
 0x1b13 | 09 0a 44 69 | Naming { index: 9, name: "Dictionary" }
        | 63 74 69 6f
        | 6e 61 72 79
 0x1b1f | 0a 08 42 65 | Naming { index: 10, name: "Behavior" }
        | 68 61 76 69
        | 6f 72      
 0x1b29 | 0b 10 43 6c | Naming { index: 11, name: "ClassDescription" }
        | 61 73 73 44
        | 65 73 63 72
        | 69 70 74 69
        | 6f 6e      
 0x1b3b | 0c 05 43 6c | Naming { index: 12, name: "Class" }
        | 61 73 73   
 0x1b42 | 0d 09 4d 65 | Naming { index: 13, name: "Metaclass" }
        | 74 61 63 6c
        | 61 73 73   
 0x1b4d | 0e 0e 43 6f | Naming { index: 14, name: "CompiledMethod" }
        | 6d 70 69 6c
        | 65 64 4d 65
        | 74 68 6f 64
 0x1b5d | 0f 07 43 6f | Naming { index: 15, name: "Context" }
        | 6e 74 65 78
        | 74         
 0x1b66 | 10 08 50 49 | Naming { index: 16, name: "PICEntry" }
        | 43 45 6e 74
        | 72 79      
 0x1b70 | 11 0e 56 69 | Naming { index: 17, name: "VirtualMachine" }
        | 72 74 75 61
        | 6c 4d 61 63
        | 68 69 6e 65
 0x1b80 | 05 10       | table name section
 0x1b82 | 01          | 1 count
 0x1b83 | 00 0d 66 75 | Naming { index: 0, name: "functionTable" }
        | 6e 63 74 69
        | 6f 6e 54 61
        | 62 6c 65   
 0x1b92 | 07 29       | global name section
 0x1b94 | 02          | 2 count
 0x1b95 | 00 10 77 6f | Naming { index: 0, name: "workloadSelector" }
        | 72 6b 6c 6f
        | 61 64 53 65
        | 6c 65 63 74
        | 6f 72      
 0x1ba7 | 01 14 62 79 | Naming { index: 1, name: "byteArrayCopyPointer" }
        | 74 65 41 72
        | 72 61 79 43
        | 6f 70 79 50
        | 6f 69 6e 74
        | 65 72      
